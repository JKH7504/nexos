/**
 * <pre>
 *  ==================================================================================================================================================
 *  프로그램ID         : LCC01011P1
 *  프로그램명         : 기타입출고등록 (의류) 팝업
 *  프로그램설명       : 기타입출고등록 (의류) 팝업 화면 Javascript
 *  작성자             : Copyright (c) 2013 ASETEC Corporation. All rights reserved.
 *  작성일자           : 2018-08-07
 *  버전               : 1.0
 * 
 *  --------------------------------------------------------------------------------------------------------------------------------------------------
 *  버전       작성일자      작성자           설명
 *  ---------  ------------  ---------------  --------------------------------------------------------------------------------------------------------
 *  1.0        2018-08-07    ASETEC           신규작성
 *  --------------------------------------------------------------------------------------------------------------------------------------------------
 * 
 *  ==================================================================================================================================================
 * </pre>
 */

/**
 * 화면 초기화 - 화면 로드시 자동 호출 됨
 */
function _Initialize() {

    // 단위화면에서 사용될 일반 전역 변수 정의
    $NC.setGlobalVar({
        autoResizeFixedView: function() {
            var resizeView = {
                viewType: "v",
                viewFixed: 180,
                exceptHeight: $NC.getViewHeight("#ctrPopupView")
            };
            // 기타출고
            if ($NC.isVisible("#divSub1View")) {
                resizeView.viewFirst = {
                    container: "#divDetailView",
                    grids: "#grdDetail"
                };
                resizeView.viewSecond = {
                    container: "#divSub1View",
                    grids: "#grdSub1"
                };
            }
            // 기타입고
            else {
                resizeView.viewSecond = {
                    container: "#divSub2View",
                    grids: "#grdSub2"
                };
            }

            return resizeView;
        },
        // 마스터 데이터
        masterData: null,
        INOUT_GRP_IN: "E",
        INOUT_GRP_OUT: "D",
        DIV_LOC: "_____", // '_' 다섯개
        // 체크할 정책 값
        policyVal: {
            CM120: "", // 로케이션표시정책
            CM121: "", // 로케이션 존 길이
            CM122: "", // 로케이션 행 길이
            CM123: "", // 로케이션 열 길이
            CM124: "", // 로케이션 단 길이
            EM191: "", // [RFID]시스템연동 정책
            LC410: "", // 입고(적치)불가능 사용 정책
            LC411: "", // 출고불가능 사용 정책
            LS210: "" // 재고 관리 기준
        }
    });

    // 버튼 클릭 이벤트 연결
    $("#btnClose").click(onCancel); // 닫기버튼
    $("#btnNew").click(_New); // 출고지시 그리드 행 추가 버튼
    $("#btnDelete").click(_Delete); // 출고지시 그리드 행 삭제버튼
    $("#btnNewItem").click(_New); // 입고지시 그리드 상품추가버튼 클릭
    $("#btnDeleteItem").click(_Delete); // 입고지시 그리드 상품삭제버튼 클릭
    $("#btnSave").click(_Save); // 지시내역 저장 버튼
    $("#btnQLocation").click(showQLocationPopup); // 현재고 검색시 사용되는 로케이션 검색 버튼 클릭
    $("#btnLocation").click(showLocationPopup); // 입고지시 그리드의 로케이션 값 설정에 사용되는 로케이션 검색 버튼
    $("#btnSearchStock").click(_Inquiry); // 현재고검색 버튼 클릭
    $("#btnQItem_Cd").click(showQItemPopup); // 현재고 검색의 상품검색 버튼 클릭
    $("#btnQBrand_Cd").click(showBuBrandPopup);

    $NC.setEnable("#edtCenter_Cd_F", false); // 물류센터 비활성화
    $NC.setEnable("#edtBu_Cd", false); // 사업부 비활성화
    $NC.setEnable("#edtEtc_No", false); // 입출고번호 비활성화

    $("#divDetailView").show(); // 출고지시내역 표시
    $("#divSub1View").show(); // 출고지시내역 표시
    $("#divSub2View").hide(); // 입고지시내역 비표시

    $NC.setInitDatePicker("#dtpEtc_Date"); // 입출고일자
    $NC.setInitDatePicker("#dtpQValid_Date", null, "N"); // 유통기한
    $NC.setInitDatePicker("#dtpQStock_Date", null, "N"); // 재고입고일자

    // 그리드 초기화
    grdDetailInitialize();
    grdSub1Initialize();
    grdSub2Initialize();

    // 콤보박스 초기화
    $NC.serviceCall("/WC/getMultiDataSet.do", {
        P_SERVICE_PARAMS: [
            {
                P_RESULT_ID: "O_WC_POP_CMCODE_ITEM_STATE",
                P_QUERY_ID: "WC.POP_CMCODE",
                P_QUERY_PARAMS: {
                    P_COMMON_GRP: "ITEM_STATE",
                    P_COMMON_CD: $ND.C_ALL,
                    P_VIEW_DIV: "2" // 1:등록팝업, 2:조회팝업
                }
            },
            {
                P_RESULT_ID: "O_WC_POP_CMCODE_YEAR_DIV",
                P_QUERY_ID: "WC.POP_CMCODE",
                P_QUERY_PARAMS: {
                    P_COMMON_GRP: "YEAR_DIV",
                    P_COMMON_CD: $ND.C_ALL,
                    P_VIEW_DIV: "2" // 1:등록팝업, 2:조회팝업
                }
            },
            {
                P_RESULT_ID: "O_WC_POP_CMCODE_SEASON_DIV",
                P_QUERY_ID: "WC.POP_CMCODE",
                P_QUERY_PARAMS: {
                    P_COMMON_GRP: "SEASON_DIV",
                    P_COMMON_CD: $ND.C_ALL,
                    P_VIEW_DIV: "2" // 1:등록팝업, 2:조회팝업
                }
            },
            {
                P_RESULT_ID: "O_WC_POP_CMCODE_ITEM_DIV",
                P_QUERY_ID: "WC.POP_CMCODE",
                P_QUERY_PARAMS: {
                    P_COMMON_GRP: "ITEM_DIV",
                    P_COMMON_CD: $ND.C_ALL,
                    P_VIEW_DIV: "2" // 1:등록팝업, 2:조회팝업
                }
            }
        ]
    }, function(ajaxData) {
        var multipleData = $NC.toObject(ajaxData);
        // 상품상태 콤보 세팅
        $NC.setInitComboData({
            selector: "#cboQItem_State",
            codeField: "COMMON_CD",
            nameField: "COMMON_NM",
            fullNameField: "COMMON_CD_F",
            data: $NC.toArray(multipleData.O_WC_POP_CMCODE_ITEM_STATE)
        });
        // 조회조건 - 연도구분 세팅
        $NC.setInitComboData({
            selector: "#cboQYear_Div",
            codeField: "COMMON_CD",
            fullNameField: "COMMON_CD_F",
            data: $NC.toArray(multipleData.O_WC_POP_CMCODE_YEAR_DIV),
            addAll: true,
            multiSelect: true
        });
        // 조회조건 - 시즌구분 세팅
        $NC.setInitComboData({
            selector: "#cboQSeason_Div",
            codeField: "COMMON_CD",
            fullNameField: "COMMON_CD_F",
            data: $NC.toArray(multipleData.O_WC_POP_CMCODE_SEASON_DIV),
            addAll: true,
            multiSelect: true
        });
        // 조회조건 - 상품구분 세팅
        $NC.setInitComboData({
            selector: "#cboQItem_Div",
            codeField: "COMMON_CD",
            fullNameField: "COMMON_CD_F",
            data: $NC.toArray(multipleData.O_WC_POP_CMCODE_ITEM_DIV),
            addAll: true,
            multiSelect: true
        });
    });

    // 정책 값 세팅
    setPolicyValInfo();
}

/**
 * 등록팝업 Open 시 호출 됨
 */
function _OnLoaded() {

    $NC.setValue("#edtCenter_Cd_F", $NC.G_VAR.G_PARAMETER.P_CENTER_CD_F);
    $NC.setValue("#edtBu_Cd", $NC.G_VAR.G_PARAMETER.P_BU_CD);
    $NC.setValue("#edtBu_Nm", $NC.G_VAR.G_PARAMETER.P_BU_NM);

    // 신규 등록
    if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW) {

        $NC.setValue("#dtpEtc_Date", $NC.G_VAR.G_PARAMETER.P_ETC_DATE);

        var ETC_DATE = $NC.getValue("#dtpEtc_Date");
        // var INOUT_CD = $NC.getValue("#cboInout_Cd");
        // 마스터 데이터 세팅
        $NC.G_VAR.masterData = {
            CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
            BU_CD: $NC.G_VAR.G_PARAMETER.P_BU_CD,
            ETC_DATE: ETC_DATE,
            ETC_NO: "",
            INOUT_CD: "",
            TAG_DIV: "",
            REMARK1: "",
            CRUD: $ND.C_DV_CRUD_C
        };
    } else {
        // 예정 -> 등록, 등록 수정
        // 마스터 데이터 세팅
        var dsMaster = $NC.G_VAR.G_PARAMETER.P_MASTER_DS;
        $NC.setValue("#dtpEtc_Date", dsMaster.ETC_DATE);
        $NC.setValue("#edtEtc_No", dsMaster.ETC_NO);
        $NC.setValue("#edtRemark1", dsMaster.REMARK1);
        // $NC.setValue("#cboInout_Cd", dsMaster.INOUT_CD);

        $NC.G_VAR.masterData = {
            CENTER_CD: dsMaster.CENTER_CD,
            BU_CD: dsMaster.BU_CD,
            ETC_DATE: dsMaster.ETC_DATE,
            ETC_NO: dsMaster.ETC_NO,
            INOUT_CD: dsMaster.INOUT_CD,
            TAG_DIV: dsMaster.TAG_DIV,
            REMARK1: dsMaster.REMARK1,
            CRUD: $ND.C_DV_CRUD_R
        };

        // SUB 데이터 세팅
        var dsSub = $NC.G_VAR.G_PARAMETER.P_SUB_DS;
        var grdObject, rowData, newRowData;
        if (dsMaster.INOUT_CD.startsWith($NC.G_VAR.INOUT_GRP_IN)) {
            grdObject = G_GRDSUB2; // 입고지시
        } else {
            grdObject = G_GRDSUB1; // 출고지시
        }
        grdObject.data.beginUpdate();
        try {
            for (var rIndex = 0, rCount = dsSub.length; rIndex < rCount; rIndex++) {
                rowData = dsSub[rIndex];
                if (Number(rowData.CONFIRM_QTY) < 1) {
                    continue;
                }
                newRowData = {
                    CENTER_CD: rowData.CENTER_CD,
                    BU_CD: rowData.BU_CD,
                    ETC_DATE: rowData.ETC_DATE,
                    ETC_NO: rowData.ETC_NO,
                    LINE_NO: rowData.LINE_NO,
                    BRAND_CD: rowData.BRAND_CD,
                    BRAND_NM: rowData.BRAND_NM,
                    ITEM_CD: rowData.ITEM_CD,
                    ITEM_NM: rowData.ITEM_NM,
                    ITEM_SPEC: rowData.ITEM_SPEC,
                    ITEM_STATE: rowData.ITEM_STATE,
                    ITEM_STATE_F: rowData.ITEM_STATE_F,
                    ITEM_LOT: rowData.ITEM_LOT,
                    QTY_IN_BOX: rowData.QTY_IN_BOX,
                    VALID_DATE: rowData.VALID_DATE,
                    BATCH_NO: rowData.BATCH_NO,
                    STOCK_DATE: rowData.STOCK_DATE,
                    CONFIRM_QTY: rowData.CONFIRM_QTY,
                    ETC_DIV: rowData.ETC_DIV,
                    ETC_DIV_F: rowData.ETC_DIV_F,
                    ETC_COMMENT: rowData.ETC_COMMENT,
                    STOCK_QTY: "",
                    PSTOCK_QTY: "",
                    OUT_WAIT_QTY: "",
                    LOCATION_CD: rowData.LOCATION_CD,
                    id: $NC.getGridNewRowId(),
                    CRUD: $ND.C_DV_CRUD_R
                };
                grdObject.data.addItem(newRowData);
            }
        } finally {
            grdObject.data.endUpdate();
        }

        // 수정일 경우 비활성화
        $NC.setEnable("#dtpEtc_Date", false);
        $NC.setEnable("#cboInout_Cd", false);
        $NC.setEnable("#cboTag_Div", false);
        // $NC.setEnable("#edtRemark1", false);

        $NC.setGridSelectRow(grdObject, 0);
    }

    // 콤보박스 초기화
    $NC.serviceCall("/WC/getMultiDataSet.do", {
        P_SERVICE_PARAMS: [
            {
                P_RESULT_ID: "O_WC_POP_CMCODE_INOUT_CD",
                P_QUERY_ID: "WC.POP_CMCODE",
                P_QUERY_PARAMS: {
                    P_COMMON_GRP: "INOUT_CD",
                    P_COMMON_CD: $ND.C_ALL,
                    P_ATTR01_CD: [
                        "E9",
                        "D9"
                    ].join($ND.C_DV_SEPARATOR),
                    P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
                }
            },
            {
                P_RESULT_ID: "O_WC_POP_CMCODE_TAG_DIV",
                P_QUERY_ID: "WC.POP_CMCODE",
                P_QUERY_PARAMS: {
                    P_COMMON_GRP: "TAG_DIV",
                    P_COMMON_CD: $ND.C_ALL,
                    P_VIEW_DIV: "2" // 1:등록팝업, 2:조회팝업
                }
            }
        ]
    }, function(ajaxData) {
        var multipleData = $NC.toObject(ajaxData);
        // 조회조건 - 입출고구분 세팅
        $NC.setInitComboData({
            selector: "#cboInout_Cd",
            codeField: "COMMON_CD",
            nameField: "COMMON_NM",
            fullNameField: "COMMON_CD_F",
            data: $NC.toArray(multipleData.O_WC_POP_CMCODE_INOUT_CD),
            selectOption: $NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW ? "F" : null,
            onComplete: function() {
                if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW) {
                    $NC.G_VAR.masterData.INOUT_CD = $NC.getValue("#cboInout_Cd");
                } else {
                    $NC.setValue("#cboInout_Cd", $NC.G_VAR.masterData.INOUT_CD);
                }
                onInoutCdChange($NC.G_VAR.masterData.INOUT_CD);
            }
        });
        // 택구분 콤보 세팅
        $NC.setInitComboData({
            selector: "#cboTag_Div",
            codeField: "COMMON_CD",
            nameField: "COMMON_NM",
            fullNameField: "COMMON_CD_F",
            data: $NC.toArray(multipleData.O_WC_POP_CMCODE_TAG_DIV),
            selectOption: $NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW ? "F" : null,
            onComplete: function() {
                if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW) {
                    $NC.G_VAR.masterData.TAG_DIV = $NC.getValue("#cboTag_Div");
                } else {
                    $NC.setValue("#cboTag_Div", $NC.G_VAR.masterData.TAG_DIV);
                }
            }
        });
    });
}

/**
 * 화면 리사이즈 Offset 세팅
 */
function _SetResizeOffset() {

}

/**
 * Window Resize Event - Window Size 조정시 호출 됨
 */
function _OnResize(parent, viewWidth, viewHeight) {

}

/**
 * 닫기,취소버튼 클릭 이벤트
 */
function onCancel() {

    $NC.setPopupCloseAction($ND.C_CANCEL);
    $NC.onPopupClose();
}

/**
 * 저장,확인버튼 클릭 이벤트
 */
function onClose() {

    $NC.setPopupCloseAction($ND.C_OK);
    $NC.onPopupClose();
}

/**
 * Input Change Event - Input, Select Change 시 호출 됨
 */
function _OnConditionChange(e, view, val) {

    var id = view.prop("id").substr(4).toUpperCase();
    switch (id) {
        case "BRAND_CD":
            $NP.onBuBrandChange(val, {
                P_BU_CD: $NC.getValue("#edtBu_Cd"),
                P_BRAND_CD: val
            }, onBuBrandPopup);
            return;
        case "ZONE_CD":
            if ($NC.isNull(val)) {
                $NC.setValue("#edtQZone_Nm");
                break;
            }
            if (val.length != Number($NC.G_VAR.policyVal.CM121)) {
                alert($NC.getDisplayMsg("JS.LCC01011P1.001", "로케이션 존코드 길이(" + $NC.G_VAR.policyVal.CM121 + "자리) 를 정확히 입력하여 주십시오.",
                    $NC.G_VAR.policyVal.CM121));
                $NC.setValue("#edtQZone_Cd");
                $NC.setValue("#edtQZone_Nm");
                $NC.setFocus("#edtQZone_Cd", true);
                break;
            }
            $NP.onZoneChange(val, {
                P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
                P_ZONE_CD: val,
                P_BANK_CD: "",
                P_BAY_CD: "",
                P_LEV_CD: "",
                P_LOCATION_CD: "",
                P_ZONE_DIV_ATTR01_CD: "1,2" // 1 - 일반, 2- 유통가공, 3 - 보세
            }, onQLocationPopup);
            return;
        case "BANK_CD":
            if ($NC.isNull(val)) {
                break;
            }
            if (val.length != Number($NC.G_VAR.policyVal.CM122)) {
                alert($NC.getDisplayMsg("JS.LCC01011P1.002", "로케이션 행코드 길이(" + $NC.G_VAR.policyVal.CM122 + "자리) 를 정확히 입력하여 주십시오.",
                    $NC.G_VAR.policyVal.CM122));
                $NC.setValue("#edtQBank_Cd");
                $NC.setFocus("#edtQBank_Cd", true);
            }
            break;
        case "BAY_CD":
            if ($NC.isNull(val)) {
                break;
            }
            if (val.length != Number($NC.G_VAR.policyVal.CM123)) {
                alert($NC.getDisplayMsg("JS.LCC01011P1.003", "로케이션 열코드 길이(" + $NC.G_VAR.policyVal.CM123 + "자리) 를 정확히 입력하여 주십시오.",
                    $NC.G_VAR.policyVal.CM123));
                $NC.setValue("#edtQBay_Cd");
                $NC.setFocus("#edtQBay_Cd", true);
            }
            break;
        case "LEV_CD":
            if ($NC.isNull(val)) {
                break;
            }
            if (val.length != Number($NC.G_VAR.policyVal.CM124)) {
                alert($NC.getDisplayMsg("JS.LCC01011P1.004", "로케이션 단코드 길이(" + $NC.G_VAR.policyVal.CM124 + "자리) 를 정확히 입력하여 주십시오.",
                    $NC.G_VAR.policyVal.CM124));
                $NC.setValue("#edtQLev_Cd");
                $NC.setFocus("#edtQLev_Cd", true);
            }
            break;
        case "STOCK_DATE":
            if ($NC.isNotNull(val)) {
                $NC.setValueDatePicker(view, val, $NC.getDisplayMsg("JS.LCC01011P1.005", "입고일자를 정확히 입력하십시오."));
            }
            break;
        case "VALID_DATE":
            if ($NC.isNotNull(val)) {
                $NC.setValueDatePicker(view, val, $NC.getDisplayMsg("JS.LCC01011P1.006", "유통기한를 정확히 입력하십시오."));
            }
            break;
    }
}

/**
 * Input Change Event - Input, Select Change 시 호출 됨
 */
function _OnInputChange(e, view, val) {

    var id = view.prop("id").substr(3).toUpperCase();
    masterDataOnChange(e, {
        view: view,
        col: id,
        val: val
    });
}

/**
 * 현재고 조회
 */
function _Inquiry() {

    // 현재 수정모드면
    if (G_GRDSUB1.view.getEditorLock().isActive()) {
        G_GRDSUB1.view.getEditorLock().commitCurrentEdit();
    }

    var BRAND_CD = $NC.getValue("#edtQBrand_Cd");
    var ITEM_CD = $NC.getValue("#edtQItem_Cd");
    var ITEM_STATE = $NC.getValue("#cboQItem_State");
    var STOCK_DATE = $NC.getValue("#dtpQStock_Date");
    var ZONE_CD = $NC.getValue("#edtQZone_Cd");
    var BANK_CD = $NC.getValue("#edtQBank_Cd");
    var BAY_CD = $NC.getValue("#edtQBay_Cd");
    var LEV_CD = $NC.getValue("#edtQLev_Cd");
    var TAG_DIV = $NC.getValue("#cboTag_Div");
    var YEAR_DIV = $NC.getValue("#cboQYear_Div");
    var SEASON_DIV = $NC.getValue("#cboQSeason_Div");
    var ITEM_DIV = $NC.getValue("#cboQItem_Div");

    if ($NC.isNull(BRAND_CD) && $NC.isNull(ITEM_CD) && $NC.isNull(STOCK_DATE) && $NC.isNull(ZONE_CD) && $NC.isNull(BANK_CD) && $NC.isNull(BAY_CD)
        && $NC.isNull(LEV_CD)) {
        alert($NC.getDisplayMsg("JS.LCC01011P1.007", "검색조건 중 하나는 반드시 입력 하셔야 합니다."));
        return;
    }

    if ($NC.isNull(ZONE_CD)) {
        ZONE_CD = $NC.G_VAR.DIV_LOC.substring(0, $NC.G_VAR.policyVal.CM121);
    }

    if ($NC.isNull(BANK_CD)) {
        BANK_CD = $NC.G_VAR.DIV_LOC.substring(0, $NC.G_VAR.policyVal.CM122);
    }

    if ($NC.isNull(BAY_CD)) {
        BAY_CD = $NC.G_VAR.DIV_LOC.substring(0, $NC.G_VAR.policyVal.CM123);
    }

    if ($NC.isNull(LEV_CD)) {
        LEV_CD = $NC.G_VAR.DIV_LOC.substring(0, $NC.G_VAR.policyVal.CM124);
    }

    var LOCATION_CD = "";
    switch ($NC.G_VAR.policyVal.CM120) {
        // 1:ZN-BK-BY-LV
        case "1":
            LOCATION_CD = ZONE_CD + "-" + BANK_CD + "-" + BAY_CD + "-" + LEV_CD;
            break;
        // 2:ZN-BK-BYLV
        case "2":
            LOCATION_CD = ZONE_CD + "-" + BANK_CD + "-" + BAY_CD + LEV_CD;
            break;
        // 3:ZN-BKBY-LV
        case "3":
            LOCATION_CD = ZONE_CD + "-" + BANK_CD + BAY_CD + "-" + LEV_CD;
            break;
        // 4:ZNBK-BY-LV
        case "4":
            LOCATION_CD = ZONE_CD + BANK_CD + "-" + BAY_CD + "-" + LEV_CD;
            break;
        // 5:ZN-BKBYLV
        case "5":
            LOCATION_CD = ZONE_CD + "-" + BANK_CD + BAY_CD + LEV_CD;
            break;
        // 6:ZNBK-BYLV
        case "6":
            LOCATION_CD = ZONE_CD + BANK_CD + "-" + BAY_CD + LEV_CD;
            break;
        // 7:ZNBKBY-LV
        case "7":
            LOCATION_CD = ZONE_CD + BANK_CD + BAY_CD + "-" + LEV_CD;
            break;
        // 8:ZNBKBYLV
        case "8":
            LOCATION_CD = ZONE_CD + BANK_CD + BAY_CD + LEV_CD;
            break;
    }

    $NC.setInitGridVar(G_GRDDETAIL);

    G_GRDDETAIL.queryParams = {
        P_CENTER_CD: $NC.G_VAR.masterData.CENTER_CD,
        P_BU_CD: $NC.G_VAR.masterData.BU_CD,
        P_BRAND_CD: BRAND_CD,
        P_ITEM_CD: ITEM_CD,
        P_ITEM_STATE: ITEM_STATE,
        P_LOCATION_CD: LOCATION_CD,
        P_STOCK_DATE: STOCK_DATE,
        P_TAG_DIV: TAG_DIV,
        P_YEAR_DIV: YEAR_DIV,
        P_SEASON_DIV: SEASON_DIV,
        P_ITEM_DIV: ITEM_DIV
    };
    // 데이터 조회
    $NC.serviceCall("/LCC01010E0/getDataSet.do", $NC.getGridParams(G_GRDDETAIL), onGetDetail);
}

/**
 * 기타출고 지시내역 화면의 추가 버튼 클릭 이벤트 처리
 */
function _New() {

    var newRowData;
    // 기타입고지시 화면의 상품추가 버튼 클릭 시
    if ($NC.G_VAR.masterData.INOUT_CD.startsWith($NC.G_VAR.INOUT_GRP_IN)) {

        // 마지막 선택 Row Validation 체크
        if (!$NC.isGridValidLastRow(G_GRDSUB2)) {
            return;
        }

        // 지시내역 그리드 설정할 로케이션 선택했을 경우
        newRowData = {
            CENTER_CD: $NC.G_VAR.masterData.CENTER_CD,
            BU_CD: $NC.G_VAR.masterData.BU_CD,
            BRAND_CD: "",
            BRAND_NM: "",
            ITEM_CD: "",
            ITEM_NM: "",
            ITEM_STATE: $ND.C_BASE_ITEM_STATE,
            ITEM_STATE_F: $NC.getGridComboName(G_GRDSUB2, {
                columnId: "ITEM_STATE_F",
                searchVal: $ND.C_BASE_ITEM_STATE,
                dataCodeField: "COMMON_CD",
                dataFullNameField: "COMMON_CD_F"
            }),
            ITEM_SPEC: "",
            ITEM_LOT: $ND.C_NULL,
            QTY_IN_BOX: "1",
            VALID_DATE: "",
            BATCH_NO: "",
            CONFIRM_QTY: "0",
            ETC_DIV: $ND.C_REASON_ETC_DIV,
            ETC_DIV_F: $NC.getGridComboName(G_GRDSUB2, {
                columnId: "ETC_DIV_F",
                searchVal: $ND.C_REASON_ETC_DIV,
                dataCodeField: "COMMON_CD",
                dataFullNameField: "COMMON_CD_F"
            }),
            ETC_COMMENT: "",
            STOCK_QTY: "0",
            PSTOCK_QTY: "0",
            OUT_WAIT_QTY: "0",
            LOCATION_CD: $NC.getValue("#edtLocation_Cd"),
            id: $NC.getGridNewRowId(),
            CRUD: $ND.C_DV_CRUD_N
        };

        // 신규 데이터 생성 및 이벤트 호출
        $NC.newGridRowData(G_GRDSUB2, newRowData);
    }
    // 기타출고지시 화면의 상품추가 버튼 클릭 시
    else if ($NC.G_VAR.masterData.INOUT_CD.startsWith($NC.G_VAR.INOUT_GRP_OUT)) {
        // 마지막 선택 Row Validation 체크
        if (!$NC.isGridValidLastRow(G_GRDSUB1)) {
            return;
        }

        // 마지막 선택 Row Validation 체크
        if (!$NC.isGridValidLastRow(G_GRDDETAIL)) {
            return;
        }

        // 선택 데이터 검색 -> Indexes
        var checkedRows = $NC.getGridSearchRows(G_GRDDETAIL, {
            searchKey: "CHECK_YN",
            searchVal: $ND.C_YES
        });
        if (checkedRows.length == 0) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.008", "추가할 재고내역 데이터를 선택하십시오."));
            return;
        }

        // 기등록 체크 키
        var searchKey = [
            "BRAND_CD",
            "ITEM_CD",
            "ITEM_STATE",
            "ITEM_LOT",
            "VALID_DATE",
            "BATCH_NO",
            "LOCATION_CD"
        ];

        var addedCount = 0;
        var rowData;
        G_GRDSUB1.data.beginUpdate();
        try {
            for (var rIndex = 0, rCount = checkedRows.length; rIndex < rCount; rIndex++) {
                // 선택 데이터
                rowData = G_GRDDETAIL.data.getItem(checkedRows[rIndex]);
                // 기등록 체크
                if ($NC.getGridSearchRow(G_GRDSUB1, {
                    searchKey: searchKey,
                    searchVal: [
                        rowData.BRAND_CD,
                        rowData.ITEM_CD,
                        rowData.ITEM_STATE,
                        rowData.ITEM_LOT,
                        rowData.VALID_DATE,
                        rowData.BATCH_NO,
                        rowData.LOCATION_CD
                    ]
                }) > -1) {
                    continue;
                }

                // 추가할 데이터
                newRowData = {
                    CENTER_CD: rowData.CENTER_CD,
                    BU_CD: rowData.BU_CD,
                    BRAND_CD: rowData.BRAND_CD,
                    BRAND_NM: rowData.BRAND_NM,
                    ITEM_CD: rowData.ITEM_CD,
                    ITEM_BAR_CD: rowData.ITEM_BAR_CD,
                    ITEM_NM: rowData.ITEM_NM,
                    ITEM_STATE: rowData.ITEM_STATE,
                    ITEM_STATE_F: rowData.ITEM_STATE_F,
                    ITEM_SPEC: rowData.ITEM_SPEC,
                    ITEM_LOT: rowData.ITEM_LOT,
                    QTY_IN_BOX: rowData.QTY_IN_BOX,
                    VALID_DATE: rowData.VALID_DATE,
                    BATCH_NO: rowData.BATCH_NO,
                    STOCK_DATE: rowData.STOCK_DATE,
                    CONFIRM_QTY: rowData.PSTOCK_QTY, // 이동수량
                    ETC_DIV: $ND.C_REASON_ETC_DIV,
                    ETC_DIV_F: $NC.getGridComboName(G_GRDSUB1, {
                        columnId: "ETC_DIV_F",
                        searchVal: $ND.C_REASON_ETC_DIV,
                        dataCodeField: "COMMON_CD",
                        dataFullNameField: "COMMON_CD_F"
                    }),
                    ETC_COMMENT: "",
                    STOCK_QTY: rowData.STOCK_QTY,
                    PSTOCK_QTY: rowData.PSTOCK_QTY,
                    OUT_WAIT_QTY: rowData.OUT_WAIT_QTY,
                    LOCATION_CD: rowData.LOCATION_CD,
                    id: $NC.getGridNewRowId(),
                    CRUD: $ND.C_DV_CRUD_C
                };
                G_GRDSUB1.data.addItem(newRowData);
                addedCount++;
            }
        } finally {
            G_GRDSUB1.data.endUpdate();
        }

        // 선택한 행이 모두 이미 지시내역 그리드에 존재할 경우
        if (addedCount == 0) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.009", "선택한 상품은 이미 추가된 재고내역입니다."));
            return;
        }

        $NC.setGridSelectRow(G_GRDSUB1, G_GRDSUB1.data.getLength() - 1);

        // 택구분 비활성화
        $NC.setEnable("#cboTag_Div", false);
        // 수정 상태로 변경
        G_GRDSUB1.lastRowModified = true;
        return;
    }
}

/**
 * 저장버튼 클릭 이벤트 처리
 */
function _Save() {

    var grdObject;
    if ($NC.G_VAR.masterData.INOUT_CD.startsWith($NC.G_VAR.INOUT_GRP_IN)) {
        grdObject = G_GRDSUB2;
    } else {
        grdObject = G_GRDSUB1;
    }

    if (grdObject.data.getLength() == 0) {
        alert($NC.getDisplayMsg("JS.LCC01011P1.010", "저장할 데이터가 없습니다."));
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.CENTER_CD)) {
        alert($NC.getDisplayMsg("JS.LCC01011P1.011", "물류센터를 입력하십시오."));
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.BU_CD)) {
        alert($NC.getDisplayMsg("JS.LCC01011P1.012", "사업부를 입력하십시오."));
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.INOUT_CD)) {
        alert($NC.getDisplayMsg("JS.LCC01011P1.013", "먼저 입출고구분을 선택하십시오."));
        $NC.setFocus("#cboInout_Cd");
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.ETC_DATE)) {
        alert($NC.getDisplayMsg("JS.LCC01011P1.014", "먼저 입출고일자를 입력하십시오."));
        $NC.setFocus("#dtpEtc_Date");
        return;
    }

    // 마지막 선택 Row Validation 체크
    if (!$NC.isGridValidLastRow(grdObject)) {
        return;
    }

    // 지시내역 그리드 저장
    var dsD = [ ];
    var dsC = [ ];
    var dsSub, rowData;
    var dsTarget = grdObject.data.getItems();
    for (var rIndex = 0, rCount = dsTarget.length; rIndex < rCount; rIndex++) {
        rowData = dsTarget[rIndex];
        if (rowData.CRUD == $ND.C_DV_CRUD_R || Number(rowData.CONFIRM_QTY) < 1) {
            continue;
        }
        if (rowData.CRUD == $ND.C_DV_CRUD_D) {
            dsSub = dsD;
        } else {
            dsSub = dsC;
        }

        dsSub.push({
            P_CENTER_CD: $NC.G_VAR.masterData.CENTER_CD,
            P_BU_CD: $NC.G_VAR.masterData.BU_CD,
            P_ETC_DATE: $NC.G_VAR.masterData.ETC_DATE,
            P_INOUT_CD: $NC.G_VAR.masterData.INOUT_CD,
            P_ETC_NO: $NC.G_VAR.masterData.ETC_NO,
            P_REMARK1: $NC.G_VAR.masterData.REMARK1,
            P_LINE_NO: rowData.LINE_NO, // 삭제시에 사용
            P_ETC_DIV: rowData.ETC_DIV,
            P_ETC_COMMENT: $NC.isNull(rowData.ETC_COMMENT) ? "" : rowData.ETC_COMMENT,
            P_LOCATION_CD: rowData.LOCATION_CD,
            P_BRAND_CD: rowData.BRAND_CD,
            P_ITEM_CD: rowData.ITEM_CD,
            P_ITEM_STATE: rowData.ITEM_STATE,
            P_ITEM_LOT: rowData.ITEM_LOT,
            P_VALID_DATE: $NC.isNull(rowData.VALID_DATE) ? "" : rowData.VALID_DATE,
            P_BATCH_NO: $NC.isNull(rowData.BATCH_NO) ? "" : rowData.BATCH_NO,
            P_STOCK_DATE: $NC.isNull(rowData.STOCK_DATE) ? "" : rowData.STOCK_DATE,
            P_CONFIRM_QTY: rowData.CONFIRM_QTY,
            P_CRUD: rowData.CRUD
        });
    }

    // 에러방지 위해, 신규 + 삭제 순으로 DS 구성
    dsSub = dsC.concat(dsD);

    if ($NC.G_VAR.masterData.CRUD == $ND.C_DV_CRUD_C) {
        if (dsSub.length == 0) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.015", "저장할 지시내역 정보가 없습니다."));
            return;
        }
    } else {
        if ($NC.G_VAR.masterData.CRUD != $ND.C_DV_CRUD_U && dsSub.length == 0) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.016", "수정 후 저장하십시오."));
            return;
        }
    }

    $NC.serviceCall("/LCC01010E0/save.do", {
        P_DS_MASTER: {
            P_CENTER_CD: $NC.G_VAR.masterData.CENTER_CD,
            P_BU_CD: $NC.G_VAR.masterData.BU_CD,
            P_ETC_DATE: $NC.G_VAR.masterData.ETC_DATE,
            P_ETC_NO: $NC.G_VAR.masterData.ETC_NO,
            P_INOUT_CD: $NC.G_VAR.masterData.INOUT_CD,
            P_REMARK1: $NC.G_VAR.masterData.REMARK1,
            P_POLICY_EM191: $NC.G_VAR.policyVal.EM191,
            P_CRUD: $NC.G_VAR.masterData.CRUD
        },
        P_DS_SUB: dsSub,
        P_PROCESS_CD: $NC.G_VAR.G_PARAMETER.P_PROCESS_CD,
        P_USER_ID: $NC.G_USERINFO.USER_ID
    }, onSave);
}

/**
 * 삭제 버튼 클릭 이벤트 처리
 */
function _Delete() {

    var grdObject;
    if ($NC.G_VAR.masterData.INOUT_CD.startsWith($NC.G_VAR.INOUT_GRP_IN)) {
        grdObject = G_GRDSUB2;
    } else {
        grdObject = G_GRDSUB1;
    }

    if (grdObject.data.getLength() == 0 || $NC.isNull(grdObject.lastRow)) {
        alert($NC.getDisplayMsg("JS.LCC01011P1.017", "삭제할 데이터가 없습니다."));
        return;
    }

    var rowData = grdObject.data.getItem(grdObject.lastRow);
    // 신규 데이터일 경우 Grid 데이터만 삭제, 그외 CRUD를 "D"로 변경
    $NC.deleteGridRowData(grdObject, rowData, true);
}

/**
 * 마스터 데이터 변경시 처리
 */
function masterDataOnChange(e, args) {

    switch (args.col) {
        case "LOCATION_CD":
            $NP.onLocationChange(args.val, {
                P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
                P_ZONE_CD: "",
                P_BANK_CD: "",
                P_BAY_CD: "",
                P_LEV_CD: "",
                P_LOCATION_CD: args.val,
                P_ZONE_DIV_ATTR01_CD: "1",// 1 - 일반, 2- 유통가공, 3 - 보세
                P_INOUT_DIV: "2",
                P_POLICY_VAL: $NC.G_VAR.policyVal.LC411
            }, onLocationPopup);
            return;
        case "ETC_DATE":
            $NC.setValueDatePicker(args.view, args.val, $NC.getDisplayMsg("JS.LCC01011P1.018", "입출고일자를 정확히 입력하십시오."));
            $NC.G_VAR.masterData.ETC_DATE = $NC.getValue("#dtpEtc_Date");
            break;
        case "INOUT_CD":
            onInoutCdChange(args.val);
            $NC.G_VAR.masterData.INOUT_CD = args.val;
            break;
        case "REMARK1":
            $NC.G_VAR.masterData.REMARK1 = args.val;
            break;
        case "TAG_DIV":
            $NC.clearGridData(G_GRDDETAIL);
            $NC.setValue("#edtQItem_Cd");
            $NC.setValue("#edtQItem_Nm");
            $NC.G_VAR.masterData.TAG_DIV = args.val;
            return;
        default:
            // 마스터 데이터 변경이 아닐 경우는 CRUD 변경하지 않기 위해 RETURN
            return;
    }

    if ($NC.G_VAR.masterData.CRUD == $ND.C_DV_CRUD_R) {
        $NC.G_VAR.masterData.CRUD = $ND.C_DV_CRUD_U;
    }
}

/**
 * 입출고구분에 따라 화면 표시 변환
 * 
 * @param inoutCd
 */
function onInoutCdChange(inoutCd) {

    if (inoutCd.startsWith($NC.G_VAR.INOUT_GRP_IN)) {
        $("#divDetailView").hide();
        $("#divSub1View").hide();
        $("#divStockCondition").hide();
        $("#divSub2View").show();
    } else {
        $("#divDetailView").show();
        $("#divSub1View").show();
        $("#divStockCondition").show();
        $("#divSub2View").hide();
    }
    $NC.onGlobalResize();
    $NC.setEnable("#edtQZone_Nm", false);
}

/**
 * Grid에서 CheckBox Fomatter를 사용할 경우 CheckBox Click 이벤트 처리
 * 
 * @param e
 * @param view
 *        대상 Object
 * @param args
 *        grid, row, cell, val
 */
function _OnGridCheckBoxFormatterClick(e, view, args) {

    var grdObject = $NC.getGridObject(args.grid);
    if (!grdObject.isValid) {
        return;
    }

    var columnId = grdObject.view.getColumnId(args.cell);
    if ($NC.isNull(columnId)) {
        return;
    }

    switch (columnId) {
        case "CHECK_YN":
            $NC.onGridCheckBoxFormatterChange(grdObject, e, args, true);
            break;
    }
}

function grdDetailOnGetColumns() {

    var columns = [ ];
    $NC.setGridColumn(columns, {
        id: "CHECK_YN",
        field: "CHECK_YN",
        resizable: false,
        cssClass: "styCenter",
        formatter: Slick.Formatters.CheckBox,
        editor: Slick.Editors.CheckBox,
        editorOptions: {
            valueChecked: $ND.C_YES,
            valueUnChecked: $ND.C_NO
        }
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_CD",
        field: "ITEM_CD",
        name: "상품코드"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_NM",
        field: "ITEM_NM",
        name: "상품명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_SPEC",
        field: "ITEM_SPEC",
        name: "규격"
    });
    $NC.setGridColumn(columns, {
        id: "BRAND_NM",
        field: "BRAND_NM",
        name: "브랜드명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_STATE_F",
        field: "ITEM_STATE_F",
        name: "상태",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "FLOCATION_CD",
        field: "FLOCATION_CD",
        name: "고정로케이션",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_LOT",
        field: "ITEM_LOT",
        name: "LOT번호"
    });
    $NC.setGridColumn(columns, {
        id: "QTY_IN_BOX",
        field: "QTY_IN_BOX",
        name: "입수",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "STOCK_QTY",
        field: "STOCK_QTY",
        name: "재고수량",
        cssClass: "styRight",
        // 기본 Formatter 자동 지정이 아닌 임의 지정
        formatter: Slick.Formatters.Number,
        formatterOptions: $NC.getGridNumberColumnOptions("FLOAT_QTY")
    });
    $NC.setGridColumn(columns, {
        id: "PSTOCK_QTY",
        field: "PSTOCK_QTY",
        name: "가용재고",
        cssClass: "styRight",
        // 기본 Formatter 자동 지정이 아닌 임의 지정
        formatter: Slick.Formatters.Number,
        formatterOptions: $NC.getGridNumberColumnOptions("FLOAT_QTY")
    });
    $NC.setGridColumn(columns, {
        id: "LOCATION_CD",
        field: "LOCATION_CD",
        name: "로케이션",
        cssClass: "styCenter"
    });
    // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
    $NC.setGridColumn(columns, {
        id: "VALID_DATE",
        field: "VALID_DATE",
        name: "유통기한",
        cssClass: "styCenter",
        initialHidden: true
    });
    $NC.setGridColumn(columns, {
        id: "BATCH_NO",
        field: "BATCH_NO",
        name: "제조배치번호",
        initialHidden: true
    });

    return $NC.setGridColumnDefaultFormatter(columns);
}

function grdDetailOnSetColumns() {

    // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
    $NC.setGridColumns(G_GRDDETAIL, [ // 숨김컬럼 세팅
        $NC.G_VAR.policyVal.LS210 != "2" ? "VALID_DATE,BATCH_NO" : ""
    ]);
}

/**
 * 상단그리드(상품정보) 초기값 설정
 */
function grdDetailInitialize() {

    var options = {
        editable: true,
        autoEdit: true,
        frozenColumn: 4
    };

    // Grid Object, DataView 생성 및 초기화
    $NC.setInitGridObject("#grdDetail", {
        columns: grdDetailOnGetColumns(),
        queryId: "LCC01010E1.RS_SUB1",
        sortCol: "LINE_NO",
        gridOptions: options,
        canExportExcel: false
    });

    G_GRDDETAIL.view.onSelectedRowsChanged.subscribe(grdDetailOnAfterScroll);
    G_GRDDETAIL.view.onHeaderClick.subscribe(grdDetailOnHeaderClick);
    G_GRDDETAIL.view.onClick.subscribe(grdDetailOnClick);

    $NC.setGridColumnHeaderCheckBox(G_GRDDETAIL, "CHECK_YN");
}

/**
 * 상단 그리드 행 선택 변경 했을 경우
 * 
 * @param e
 * @param args
 */
function grdDetailOnAfterScroll(e, args) {

    if (!$NC.isGridValidLastRow(G_GRDDETAIL, args.rows, e)) {
        return;
    }
    var row = args.rows[0];

    // 상단 현재로우/총건수 업데이트
    $NC.setGridDisplayRows(G_GRDDETAIL, row + 1);
}

/**
 * 상단 그리드의 전체체크 선택시 처리
 * 
 * @param e
 * @param args
 */
function grdDetailOnHeaderClick(e, args) {

    switch (args.column.id) {
        case "CHECK_YN":
            $NC.onGridColumnHeaderCheckBoxChange(G_GRDDETAIL, e, args);
            break;
    }
}

/**
 * 상단 그리드의 행 체크 클릭시 처리
 * 
 * @param e
 * @param args
 */
function grdDetailOnClick(e, args) {

    var columnId = G_GRDDETAIL.view.getColumnId(args.cell);
    if ($NC.isNull(columnId)) {
        return;
    }

    switch (columnId) {
        case "CHECK_YN":
            $NC.onGridCheckBoxEditorChange(G_GRDDETAIL, e, args);
            break;
    }
}

function grdSub1OnGetColumns() {

    var columns = [ ];
    $NC.setGridColumn(columns, {
        id: "ITEM_CD",
        field: "ITEM_CD",
        name: "상품코드"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_NM",
        field: "ITEM_NM",
        name: "상품명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_SPEC",
        field: "ITEM_SPEC",
        name: "규격"
    });
    $NC.setGridColumn(columns, {
        id: "BRAND_NM",
        field: "BRAND_NM",
        name: "브랜드명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_STATE_F",
        field: "ITEM_STATE_F",
        name: "상태",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_LOT",
        field: "ITEM_LOT",
        name: "LOT번호"
    });
    $NC.setGridColumn(columns, {
        id: "QTY_IN_BOX",
        field: "QTY_IN_BOX",
        name: "입수",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "STOCK_QTY",
        field: "STOCK_QTY",
        name: "재고수량",
        cssClass: "styRight",
        // 기본 Formatter 자동 지정이 아닌 임의 지정
        formatter: Slick.Formatters.Number,
        formatterOptions: $NC.getGridNumberColumnOptions("FLOAT_QTY")
    });
    $NC.setGridColumn(columns, {
        id: "PSTOCK_QTY",
        field: "PSTOCK_QTY",
        name: "가용재고",
        cssClass: "styRight",
        // 기본 Formatter 자동 지정이 아닌 임의 지정
        formatter: Slick.Formatters.Number,
        formatterOptions: $NC.getGridNumberColumnOptions("FLOAT_QTY")
    });
    $NC.setGridColumn(columns, {
        id: "CONFIRM_QTY",
        field: "CONFIRM_QTY",
        name: "등록수량",
        cssClass: "styRight",
        // 기본 editorOptions 자동 지정이 아닌 임의 지정
        editor: Slick.Editors.Number,
        editorOptions: $NC.getGridNumberColumnOptions({
            formatterType: "FLOAT_QTY",
            isKeyField: true
        })
    });
    $NC.setGridColumn(columns, {
        id: "ETC_DIV_F",
        field: "ETC_DIV_F",
        name: "사유구분",
        editor: Slick.Editors.ComboBox,
        editorOptions: $NC.getGridComboEditorOptions("/WC/getDataSet.do", {
            P_QUERY_ID: "WC.POP_CMCODE",
            P_QUERY_PARAMS: {
                P_COMMON_GRP: "ETC_DIV",
                P_COMMON_CD: $ND.C_ALL,
                P_ATTR02_CD: $ND.C_YES, // Y - 기타출고사유여부
                P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
            }
        }, {
            codeField: "ETC_DIV",
            dataCodeField: "COMMON_CD",
            dataFullNameField: "COMMON_CD_F",
            isKeyField: true
        })
    });
    $NC.setGridColumn(columns, {
        id: "ETC_COMMENT",
        field: "ETC_COMMENT",
        name: "사유내역",
        editor: Slick.Editors.Text
    });
    $NC.setGridColumn(columns, {
        id: "LOCATION_CD",
        field: "LOCATION_CD",
        name: "재고로케이션",
        cssClass: "styCenter"
    });
    // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
    $NC.setGridColumn(columns, {
        id: "VALID_DATE",
        field: "VALID_DATE",
        name: "유통기한",
        cssClass: "styCenter",
        initialHidden: true
    });
    $NC.setGridColumn(columns, {
        id: "BATCH_NO",
        field: "BATCH_NO",
        name: "제조배치번호",
        initialHidden: true
    });

    return $NC.setGridColumnDefaultFormatter(columns);
}

function grdSub1OnSetColumns() {

    // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
    $NC.setGridColumns(G_GRDSUB1, [ // 숨김컬럼 세팅
        $NC.G_VAR.policyVal.LS210 != "2" ? "VALID_DATE,BATCH_NO" : ""
    ]);
}

/**
 * 현재고 데이터 그리드 초기값 설정
 */
function grdSub1Initialize() {

    var options = {
        editable: true,
        autoEdit: true,
        frozenColumn: 4
    };

    // Grid Object, DataView 생성 및 초기화
    $NC.setInitGridObject("#grdSub1", {
        columns: grdSub1OnGetColumns(),
        queryId: "LCC01010E1.RS_T1_DETAIL",
        sortCol: "LINE_NO",
        gridOptions: options,
        canExportExcel: false,
        onFilter: grdSub1OnFilter
    });

    G_GRDSUB1.view.onSelectedRowsChanged.subscribe(grdSub1OnAfterScroll);
    G_GRDSUB1.view.onBeforeEditCell.subscribe(grdSub1OnBeforeEditCell);
    G_GRDSUB1.view.onCellChange.subscribe(grdSub1OnCellChange);
}

/**
 * 현재고 데이터 그리드 행 선택 변경 했을 경우
 * 
 * @param e
 * @param args
 */
function grdSub1OnAfterScroll(e, args) {

    if (!$NC.isGridValidLastRow(G_GRDSUB1, args.rows, e)) {
        return;
    }
    var row = args.rows[0];

    // 상단 현재로우/총건수 업데이트
    $NC.setGridDisplayRows(G_GRDSUB1, row + 1);
}

/**
 * 현재고 데이터 그리드 편집 불가 처리
 * 
 * @param e
 * @param args
 * @returns {Boolean}
 */
function grdSub1OnBeforeEditCell(e, args) {

    var rowData = args.item;
    // 신규일 경우 모두 수정 가능, 그외 아래 컬럼만 수정 가능
    if (rowData.CRUD == $ND.C_DV_CRUD_R || rowData.CRUD == $ND.C_DV_CRUD_U) {
        switch (args.column.id) {
            case "ETC_DIV_F":
            case "ETC_COMMENT":
                return true;
            default:
                return false;
        }
    }
    return true;
}

/**
 * 현재고 데이터 그리드의 편집 셀의 값 변경시 처리
 * 
 * @param e
 * @param args
 */
function grdSub1OnCellChange(e, args) {

    var rowData = args.item;
    switch (G_GRDSUB1.view.getColumnId(args.cell)) {
        case "CONFIRM_QTY":
            if (Number(rowData.PSTOCK_QTY) < Number(rowData.CONFIRM_QTY)) {
                alert($NC.getDisplayMsg("JS.LCC01011P1.019", "재고수량 보다 많은 수량을 입력하실 수 없습니다."));
                rowData.CONFIRM_QTY = args.oldItem.CONFIRM_QTY;
                $NC.setFocusGrid(G_GRDSUB1, args.row, "CONFIRM_QTY", true);
            }
            break;
    }

    // 마지막 선택 Row 수정 데이터 반영 및 상태 변경
    $NC.setGridApplyChange(G_GRDSUB1, rowData);
}

/**
 * grdSub2 데이터(기타입출고 지시 데이터) 필터링 이벤트
 */
function grdSub1OnFilter(item) {

    return item.CRUD != $ND.C_DV_CRUD_D;
}

/**
 * 그리드 신규 추가 버튼 클릭 후 포커스 설정
 * 
 * @param args
 */
function grdSub1OnNewRecord(args) {

    $NC.setFocusGrid(G_GRDSUB1, args.row, "CONFIRM_QTY", true);
}

/**
 * 그리드의 입력 체크
 */
function grdSubOnBeforePost(row) {

    // 입고지시 내역일 경우
    if ($NC.G_VAR.masterData.INOUT_CD.startsWith($NC.G_VAR.INOUT_GRP_IN)) {
        return grdSub2OnBeforePost(row);
        // 출고지시 내역일 경우
    } else {
        return grdSub1OnBeforePost(row);
    }

}

/**
 * 현재고 그리드 입력 체크
 */
function grdSub1OnBeforePost(row) {

    // Validation 대상인지 체크, 아니면 True로 리턴
    if (!$NC.isGridValidPostRow(G_GRDSUB1, row, "ITEM_CD")) {
        return true;
    }

    var rowData = G_GRDSUB1.data.getItem(row);
    if (rowData.CRUD != $ND.C_DV_CRUD_R) {
        if ($NC.isNull(rowData.CONFIRM_QTY)) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.020", "등록수량을 입력하십시오."));
            $NC.setFocusGrid(G_GRDSUB1, row, "CONFIRM_QTY", true);
            return false;
        }
    }

    // 신규 데이터 업데이트, N -> C
    $NC.setGridApplyPost(G_GRDSUB1, rowData);
    return true;
}

function grdSub2OnGetColumns() {

    var columns = [ ];
    $NC.setGridColumn(columns, {
        id: "ITEM_CD",
        field: "ITEM_CD",
        name: "상품코드",
        editor: Slick.Editors.Popup,
        editorOptions: {
            onPopup: grdSub2OnPopup,
            isKeyField: true
        }
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_NM",
        field: "ITEM_NM",
        name: "상품명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_SPEC",
        field: "ITEM_SPEC",
        name: "규격"
    });
    $NC.setGridColumn(columns, {
        id: "BRAND_NM",
        field: "BRAND_NM",
        name: "브랜드명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_STATE_F",
        field: "ITEM_STATE_F",
        name: "상태",
        cssClass: "styCenter",
        editor: Slick.Editors.ComboBox,
        editorOptions: $NC.getGridComboEditorOptions("/WC/getDataSet.do", {
            P_QUERY_ID: "WC.POP_CMCODE",
            P_QUERY_PARAMS: {
                P_COMMON_GRP: "ITEM_STATE",
                P_COMMON_CD: $ND.C_ALL,
                P_ATTR01_CD: "1",
                P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
            }
        }, {
            codeField: "ITEM_STATE",
            dataCodeField: "COMMON_CD",
            dataFullNameField: "COMMON_CD_F",
            isKeyField: true
        })
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_LOT",
        field: "ITEM_LOT",
        name: "LOT번호",
        editor: Slick.Editors.Text,
        editorOptions: {
            isKeyField: true
        }
    });
    $NC.setGridColumn(columns, {
        id: "LOCATION_CD",
        field: "LOCATION_CD",
        name: "로케이션",
        editor: Slick.Editors.Popup,
        cssClass: "styCenter",
        editorOptions: {
            onPopup: grdSub2OnPopup,
            isKeyField: true
        }
    });
    $NC.setGridColumn(columns, {
        id: "QTY_IN_BOX",
        field: "QTY_IN_BOX",
        name: "입수",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "CONFIRM_QTY",
        field: "CONFIRM_QTY",
        name: "등록수량",
        cssClass: "styRight",
        // 기본 editorOptions 자동 지정이 아닌 임의 지정
        editor: Slick.Editors.Number,
        editorOptions: $NC.getGridNumberColumnOptions({
            formatterType: "FLOAT_QTY",
            isKeyField: true
        })
    });
    // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
    $NC.setGridColumn(columns, {
        id: "VALID_DATE",
        field: "VALID_DATE",
        name: "유통기한",
        cssClass: "styCenter",
        editor: Slick.Editors.Date,
        initialHidden: true
    });
    $NC.setGridColumn(columns, {
        id: "BATCH_NO",
        field: "BATCH_NO",
        name: "제조배치번호",
        editor: Slick.Editors.Text,
        initialHidden: true
    });
    $NC.setGridColumn(columns, {
        id: "ETC_DIV_F",
        field: "ETC_DIV_F",
        name: "사유구분",
        editor: Slick.Editors.ComboBox,
        editorOptions: $NC.getGridComboEditorOptions("/WC/getDataSet.do", {
            P_QUERY_ID: "WC.POP_CMCODE",
            P_QUERY_PARAMS: {
                P_COMMON_GRP: "ETC_DIV",
                P_COMMON_CD: $ND.C_ALL,
                P_ATTR01_CD: $ND.C_YES, // Y - 기타입고사유여부
                P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
            }
        }, {
            codeField: "ETC_DIV",
            dataCodeField: "COMMON_CD",
            dataFullNameField: "COMMON_CD_F",
            isKeyField: true
        })
    });
    $NC.setGridColumn(columns, {
        id: "ETC_COMMENT",
        field: "ETC_COMMENT",
        name: "사유내역",
        editor: Slick.Editors.Text
    });

    return $NC.setGridColumnDefaultFormatter(columns);
}

function grdSub2OnSetColumns() {

    // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
    $NC.setGridColumns(G_GRDSUB2, [ // 숨김컬럼 세팅
        $NC.G_VAR.policyVal.LS210 != "2" ? "VALID_DATE,BATCH_NO" : ""
    ]);
}

/**
 * 기타입고 지시 데이터 그리드 초기값 설정
 */
function grdSub2Initialize() {

    var options = {
        editable: true,
        autoEdit: true,
        frozenColumn: 4
    };

    // Grid Object, DataView 생성 및 초기화
    $NC.setInitGridObject("#grdSub2", {
        columns: grdSub2OnGetColumns(),
        queryId: null,
        sortCol: "LINE_NO",
        gridOptions: options,
        canExportExcel: false,
        onFilter: grdSub2OnFilter
    });

    G_GRDSUB2.view.onSelectedRowsChanged.subscribe(grdSub2OnAfterScroll);
    G_GRDSUB2.view.onBeforeEditCell.subscribe(grdSub2OnBeforeEditCell);
    G_GRDSUB2.view.onCellChange.subscribe(grdSub2OnCellChange);
}

/**
 * grdSub2 데이터(기타입출고 지시 데이터) 필터링 이벤트
 */
function grdSub2OnFilter(item) {

    return item.CRUD != $ND.C_DV_CRUD_D;
}

/**
 * 그리드 신규 추가 버튼 클릭 후 포커스 설정
 * 
 * @param args
 */
function grdSub2OnNewRecord(args) {

    $NC.setFocusGrid(G_GRDSUB2, args.row, "ITEM_CD", true);
}

/**
 * 기타입출고 지시 데이터 그리드 행 선택 변경 했을 경우
 * 
 * @param e
 * @param args
 */
function grdSub2OnAfterScroll(e, args) {

    if (!$NC.isGridValidLastRow(G_GRDSUB2, args.rows, e)) {
        return;
    }
    var row = args.rows[0];

    // 상단 현재로우/총건수 업데이트
    $NC.setGridDisplayRows(G_GRDSUB2, row + 1);
}

/**
 * 기타입출고 지시 데이터 그리드 수정일 경우 편집 불가 처리
 * 
 * @param e
 * @param args
 * @returns {Boolean}
 */
function grdSub2OnBeforeEditCell(e, args) {

    var rowData = args.item;
    // 신규일 경우 모두 수정 가능, 그외 아래 컬럼만 수정 가능
    if (rowData.CRUD == $ND.C_DV_CRUD_R || rowData.CRUD == $ND.C_DV_CRUD_U) {
        switch (args.column.id) {
            case "ETC_DIV_F":
            case "ETC_COMMENT":
                return true;
            default:
                return false;
        }
    }
    return true;
}

/**
 * 기타입출고 지시 데이터 그리드의 편집 셀의 값 변경시 처리
 * 
 * @param e
 * @param args
 */
function grdSub2OnCellChange(e, args) {

    var rowData = args.item;
    switch (G_GRDSUB2.view.getColumnId(args.cell)) {
        case "LOCATION_CD":
            $NP.onLocationChange(rowData.LOCATION_CD, {
                P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
                P_ZONE_CD: "",
                P_BANK_CD: "",
                P_BAY_CD: "",
                P_LEV_CD: "",
                P_LOCATION_CD: rowData.LOCATION_CD,
                P_ZONE_DIV_ATTR01_CD: "1", // 1 - 일반, 2- 유통가공, 3 - 보세
                P_INOUT_DIV: "1",
                P_POLICY_VAL: $NC.G_VAR.policyVal.LC410
            }, grdSub2OnLocationPopup);
            return;
        case "ITEM_CD":
            $NP.onItemChange(rowData.ITEM_CD, {
                P_BU_CD: $NC.getValue("#edtBu_Cd"),
                P_ITEM_CD: rowData.ITEM_CD,
                P_VIEW_DIV: "1",
                P_DEPART_CD: $ND.C_ALL,
                P_LINE_CD: $ND.C_ALL,
                P_CLASS_CD: $ND.C_ALL,
                P_TAG_DIV: $NC.getValue("#cboTag_Div")
            }, grdSub2OnItemPopup);
            return;
        case "VALID_DATE":
            if ($NC.isNotNull(rowData.VALID_DATE)) {
                if (!$NC.isDate(rowData.VALID_DATE)) {
                    alert($NC.getDisplayMsg("JS.LCC01011P1.006", "유통기한을 정확히 입력하십시오."));
                    rowData.VALID_DATE = "";
                    G_GRDSUB2.data.updateItem(rowData.id, rowData);
                    $NC.setGridSelectRow(G_GRDSUB2, {
                        selectRow: args.row,
                        activeCell: G_GRDSUB2.view.getColumnIndex("VALID_DATE"),
                        editMode: true
                    });
                    return false;
                } else {
                    rowData.VALID_DATE = $NC.getDate(rowData.VALID_DATE);
                    G_GRDSUB2.data.updateItem(rowData.id, rowData);
                }
            }
            break;
    }

    // 마지막 선택 Row 수정 데이터 반영 및 상태 변경
    $NC.setGridApplyChange(G_GRDSUB2, rowData);
}

/**
 * 기타입고 지시내역 그리드 입력 체크
 */
function grdSub2OnBeforePost(row) {

    // Validation 대상인지 체크, 아니면 True로 리턴
    if (!$NC.isGridValidPostRow(G_GRDSUB2, row, "ITEM_CD")) {
        return true;
    }

    var rowData = G_GRDSUB2.data.getItem(row);
    if (rowData.CRUD != $ND.C_DV_CRUD_R) {
        if ($NC.isNull(rowData.ITEM_CD)) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.021", "상품코드를 선택하십시오."));
            $NC.setGridSelectRow(G_GRDSUB2, {
                selectRow: row,
                activeCell: G_GRDSUB2.view.getColumnIndex("ITEM_CD"),
                editMode: true
            });
            return false;
        }
        if ($NC.isNull(rowData.ITEM_STATE)) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.022", "상태를 선택하십시오."));
            $NC.setGridSelectRow(G_GRDSUB2, {
                selectRow: row,
                activeCell: G_GRDSUB2.view.getColumnIndex("ITEM_STATE_F"),
                editMode: true
            });
            return false;
        }
        if ($NC.isNull(rowData.ITEM_LOT)) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.023", "LOT번호를 입력하십시오."));
            $NC.setGridSelectRow(G_GRDSUB2, {
                selectRow: row,
                activeCell: G_GRDSUB2.view.getColumnIndex("ITEM_LOT"),
                editMode: true
            });
            return false;
        }
        if ($NC.isNull(rowData.LOCATION_CD)) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.024", "로케이션을 입력하십시오."));
            $NC.setGridSelectRow(G_GRDSUB2, {
                selectRow: row,
                activeCell: G_GRDSUB2.view.getColumnIndex("LOCATION_CD"),
                editMode: true
            });
            return false;
        }
        if ($NC.isNull(rowData.CONFIRM_QTY) || Number(rowData.CONFIRM_QTY) == 0) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.025", "등록수량에 0보다 큰 수량을 입력하십시오."));
            $NC.setGridSelectRow(G_GRDSUB2, {
                selectRow: row,
                activeCell: G_GRDSUB2.view.getColumnIndex("CONFIRM_QTY"),
                editMode: true
            });
            return false;
        }
        if ($NC.isNull(rowData.ETC_DIV)) {
            alert($NC.getDisplayMsg("JS.LCC01011P1.026", "사유구분을 선택하십시오."));
            $NC.setGridSelectRow(G_GRDSUB2, {
                selectRow: row,
                activeCell: G_GRDSUB2.view.getColumnIndex("ETC_DIV_F"),
                editMode: true
            });
            return false;
        }
    }

    // 신규 데이터 업데이트, N -> C
    $NC.setGridApplyPost(G_GRDSUB2, rowData);
    return true;
}

/**
 * 그리드의 로케이션 / 상품의 검색 버튼 클릭시 처리
 */
function grdSub2OnPopup(e, args) {

    switch (args.column.id) {
        case "LOCATION_CD":
            $NP.showLocationPopup({
                P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
                P_ZONE_CD: "",
                P_BANK_CD: "",
                P_BAY_CD: "",
                P_LEV_CD: "",
                P_LOCATION_CD: $ND.C_ALL,
                P_ZONE_DIV_ATTR01_CD: "1", // 1 - 일반, 2- 유통가공, 3 - 보세
                P_INOUT_DIV: "1",
                P_POLICY_VAL: $NC.G_VAR.policyVal.LC410
            }, grdSub2OnLocationPopup, function() {
                $NC.setFocusGrid(G_GRDSUB2, args.row, args.cell, true, true);
            });
            return;
        case "ITEM_CD":
            $NP.showItemPopup({
                P_BU_CD: $NC.G_VAR.G_PARAMETER.P_BU_CD,
                P_ITEM_CD: $ND.C_ALL,
                P_VIEW_DIV: "1",
                P_DEPART_CD: $ND.C_ALL,
                P_LINE_CD: $ND.C_ALL,
                P_CLASS_CD: $ND.C_ALL,
                P_TAG_DIV: $NC.getValue("#cboTag_Div")
            }, grdSub2OnItemPopup, function() {
                $NC.setFocusGrid(G_GRDSUB2, args.row, args.cell, true, true);
            });
            return;
    }
}

/**
 * 기타입고 지시내역 그리드의 로케이션 검색 팝업창에서 행 클릭 혹은 취소 했을 경우 처리
 * 
 * @param resultInfo
 */

function grdSub2OnLocationPopup(resultInfo) {

    var rowData = G_GRDSUB2.data.getItem(G_GRDSUB2.lastRow);
    if ($NC.isNull(rowData)) {
        return;
    }

    var focusCol;
    if ($NC.isNotNull(resultInfo)) {
        rowData.LOCATION_CD = resultInfo.LOCATION_CD;

        focusCol = G_GRDSUB2.view.getColumnIndex("CONFIRM_QTY");
    } else {
        rowData.LOCATION_CD = "";

        focusCol = G_GRDSUB2.view.getColumnIndex("LOCATION_CD");
    }

    // 마지막 선택 Row 수정 데이터 반영 및 상태 변경
    $NC.setGridApplyChange(G_GRDSUB2, rowData);

    $NC.setFocusGrid(G_GRDSUB2, G_GRDSUB2.lastRow, focusCol, true, true);
}

/**
 * (그리드) 상품 검색 팝업에서 상품선택 혹은 취소 했을 경우
 */
function grdSub2OnItemPopup(resultInfo) {

    var rowData = G_GRDSUB2.data.getItem(G_GRDSUB2.lastRow);
    if ($NC.isNull(rowData)) {
        return;
    }
    var focusCol;
    if ($NC.isNotNull(resultInfo)) {
        rowData.ITEM_CD = resultInfo.ITEM_CD;
        rowData.ITEM_NM = resultInfo.ITEM_NM;
        rowData.ITEM_SPEC = resultInfo.ITEM_SPEC;
        rowData.QTY_IN_BOX = resultInfo.QTY_IN_BOX;
        rowData.BRAND_CD = resultInfo.BRAND_CD;
        rowData.BRAND_NM = resultInfo.BRAND_NM;

        if ($NC.isNull(rowData.LOCATION_CD)) {
            focusCol = G_GRDSUB2.view.getColumnIndex("LOCATION_CD");
        } else {
            focusCol = G_GRDSUB2.view.getColumnIndex("CONFIRM_QTY");
        }
    } else {
        rowData.ITEM_CD = "";
        rowData.ITEM_NM = "";
        rowData.ITEM_SPEC = "";
        rowData.QTY_IN_BOX = "1";
        rowData.BRAND_CD = "";
        rowData.BRAND_NM = "";

        focusCol = G_GRDSUB2.view.getColumnIndex("ITEM_CD");
    }

    // 마지막 선택 Row 수정 데이터 반영 및 상태 변경
    $NC.setGridApplyChange(G_GRDSUB2, rowData);

    $NC.setFocusGrid(G_GRDSUB2, G_GRDSUB2.lastRow, focusCol, true, true);
}

/**
 * 현재고 검색후 처리
 * 
 * @param ajaxData
 */
function onGetDetail(ajaxData) {

    $NC.setInitGridData(G_GRDDETAIL, ajaxData);
    $NC.setInitGridAfterOpen(G_GRDDETAIL, [
        "BRAND_CD",
        "ITEM_CD",
        "ITEM_STATE",
        "ITEM_LOT",
        "VALID_DATE",
        "BATCH_NO",
        "LOCATION_CD"
    ]);
}

/**
 * 저장후 처리
 * 
 * @param ajaxData
 */
function onSave(ajaxData) {

    var resultData = $NC.toObject(ajaxData);
    var oMsg = $NC.getOutMessage(resultData);
    if (oMsg != $ND.C_OK) {
        alert(oMsg);
        return;
    }

    onClose();
}

/**
 * 전역 변수에 정책 값 정보 세팅
 */
function setPolicyValInfo() {

    $NC.setPolicyValInfo({
        P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
        P_BU_CD: $NC.G_VAR.G_PARAMETER.P_BU_CD
    }, function() {
        // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
        if ($NC.G_VAR.policyVal.LS210 == "2") {
            // 컬럼 표시 조정
            grdDetailOnSetColumns();
            grdSub1OnSetColumns();
            grdSub2OnSetColumns();
        }
    });
}

/**
 * 현재고 검색의 로케이션 검색 이미지 클릭
 */
function showQLocationPopup() {

    $NP.showLocationPopup({
        P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
        P_ZONE_CD: "",
        P_BANK_CD: "",
        P_BAY_CD: "",
        P_LEV_CD: "",
        P_LOCATION_CD: $ND.C_ALL,
        P_ZONE_DIV_ATTR01_CD: "1", // 1 - 일반, 2- 유통가공, 3 - 보세
        P_INOUT_DIV: "2",
        P_POLICY_VAL: $NC.G_VAR.policyVal.LC411
    }, onQLocationPopup, function() {
        $NC.setFocus("#edtQZone_Cd", true);
    });
}

/**
 * 현재고 검색의 로케이션 검색 팝업창에서 행 클릭 했을 경우 처리
 * 
 * @param resultInfo
 */

function onQLocationPopup(resultInfo) {

    if ($NC.isNotNull(resultInfo)) {
        $NC.setValue("#edtQZone_Cd", resultInfo.ZONE_CD);
        $NC.setValue("#edtQZone_Nm", resultInfo.ZONE_NM);
        $NC.setValue("#edtQBank_Cd", resultInfo.BANK_CD);
        $NC.setValue("#edtQBay_Cd", resultInfo.BAY_CD);
        $NC.setValue("#edtQLev_Cd", resultInfo.LEV_CD);
    } else {
        $NC.setValue("#edtQZone_Cd");
        $NC.setValue("#edtQZone_Nm");
        $NC.setFocus("#edtQZone_Cd", true);
    }
}

/**
 * 기타입고 지시내역의 로케이션 검색 이미지 클릭
 */
function showLocationPopup() {

    $NP.showLocationPopup({
        P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
        P_ZONE_CD: "",
        P_BANK_CD: "",
        P_BAY_CD: "",
        P_LEV_CD: "",
        P_LOCATION_CD: $ND.C_ALL,
        P_ZONE_DIV_ATTR01_CD: "1", // 1 - 일반, 2- 유통가공, 3 - 보세
        P_INOUT_DIV: "1",
        P_POLICY_VAL: $NC.G_VAR.policyVal.LC410
    }, onLocationPopup, function() {
        $NC.setFocus("#edtLocation_Cd", true);
    });
}

/**
 * 로케이션 검색 팝업창에서 행 클릭 했을 경우 처리
 * 
 * @param resultInfo
 */

function onLocationPopup(resultInfo) {

    if ($NC.isNotNull(resultInfo)) {
        $NC.setValue("#edtLocation_Cd", resultInfo.LOCATION_CD);
    } else {
        $NC.setValue("#edtLocation_Cd");
        $NC.setFocus("#edtLocation_Cd", true);
    }
}

/**
 * 상품 검색 팝업 표시
 */
function showQItemPopup() {

    $NP.showItemPopup({
        P_BU_CD: $NC.G_VAR.G_PARAMETER.P_BU_CD,
        P_BRAND_CD: $NC.getValue("#edtQBrand_Cd"),
        P_ITEM_CD: $ND.C_ALL,
        P_VIEW_DIV: "2",
        P_DEPART_CD: $ND.C_ALL,
        P_LINE_CD: $ND.C_ALL,
        P_CLASS_CD: $ND.C_ALL,
        P_TAG_DIV: $NC.getValue("#cboTag_Div")
    }, onQItemPopup, function() {
        $NC.setFocus("#edtQItem_Cd", true);
    });
}

/**
 * 상품 검색 팝업에서 상품선택 혹은 취소 했을 경우
 */
function onQItemPopup(resultInfo) {

    if ($NC.isNotNull(resultInfo)) {
        $NC.setValue("#edtQItem_Cd", resultInfo.ITEM_CD);
        $NC.setValue("#edtQItem_Nm", resultInfo.ITEM_NM);

    } else {
        $NC.setValue("#edtQItem_Cd");
        $NC.setValue("#edtQItem_Nm");
        $NC.setFocus("#edtQItem_Cd", true);
    }
}

/**
 * 검색조건의 브랜드 검색 팝업 클릭
 */
function showBuBrandPopup() {

    var BU_CD = $NC.getValue("#edtBu_Cd");

    $NP.showBuBrandPopup({
        P_BU_CD: BU_CD,
        P_BRAND_CD: $ND.C_ALL
    }, onBuBrandPopup, function() {
        $NC.setFocus("#edtQBrand_Cd", true);
    });
}

/**
 * 브랜드 검색 결과
 * 
 * @param resultInfo
 */
function onBuBrandPopup(resultInfo) {

    if ($NC.isNotNull(resultInfo)) {
        $NC.setValue("#edtQBrand_Cd", resultInfo.BRAND_CD);
        $NC.setValue("#edtQBrand_Nm", resultInfo.BRAND_NM);
    } else {
        $NC.setValue("#edtQBrand_Cd");
        $NC.setValue("#edtQBrand_Nm");
        $NC.setFocus("#edtQBrand_Cd", true);
    }
    $NC.setValue("#edtQItem_Cd");
    $NC.setValue("#edtQItem_Nm");

}
