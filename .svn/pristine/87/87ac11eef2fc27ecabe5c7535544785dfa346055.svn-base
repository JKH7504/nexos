<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // 입고작업비등록 화면
  // Author : ASETEC
  // Date : 2023-03-09
  // Description
  // 입고수기정산 화면 CRUD Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PROGRAM_MAPPER('LIC05090E0' ,'LI020NM;LI090NM' ,NULL ,'N' ,NULL ,NULL) AS SQLMAP_TEXT
    FROM DUAL;
  -->
<mapper namespace="LIC05090E0">
  <!--
  //====================================================================================================================
  // SELECT SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="LIC05090E0_VIRTUALMAP" type="hashmap"></resultMap>

  <!-- [S] - LIC05090E0.RS_MASTER -->
  <select id="RS_MASTER" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LIC05090E0_VIRTUALMAP} = call LIC05090E0.RS_MASTER
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_INBOUND_DATE1           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_INBOUND_DATE2           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_INOUT_CD                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_VENDOR_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EXTRA_WORK_DIV1         ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EXTRA_WORK_DIV2         ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BRAND_CD                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_NM                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LIC05090E0.RS_MASTER -->


  <!-- [S] - LIC05090E0.RS_DETAIL -->
  <select id="RS_DETAIL" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LIC05090E0_VIRTUALMAP} = call LIC05090E0.RS_DETAIL
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_INBOUND_DATE            ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_INBOUND_NO              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LIC05090E0.RS_DETAIL -->


  <!-- [S] - LIC05090E0.RS_SUB1 -->
  <select id="RS_SUB1" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LIC05090E0_VIRTUALMAP} = call LIC05090E0.RS_SUB1
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_INBOUND_DATE            ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_INBOUND_NO              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_LINE_NO                 ,mode=IN    ,jdbcType=NUMERIC    ,javaType=BigDecimal})
    }
  </select>
  <!-- [E] - LIC05090E0.RS_SUB1 -->


  <!--
  //====================================================================================================================
  // INSERT/UPDATE/DELETE SQLMAP
  //====================================================================================================================
  -->
  <!-- [S] - UPDATE_LI020NM [입고마스터] -->
  <update id="UPDATE_LI020NM" parameterType="hashmap">
    UPDATE LI020NM
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_INOUT_CD                != null">,INOUT_CD                 = #{P_INOUT_CD}               </if>
          <if test="P_INBOUND_STATE           != null">,INBOUND_STATE            = #{P_INBOUND_STATE}          </if>
          <if test="P_CUST_CD                 != null">,CUST_CD                  = #{P_CUST_CD}                </if>
          <if test="P_VENDOR_CD               != null">,VENDOR_CD                = #{P_VENDOR_CD}              </if>
          <if test="P_IN_CAR_DIV              != null">,IN_CAR_DIV               = #{P_IN_CAR_DIV}             </if>
          <if test="P_CAR_NO                  != null">,CAR_NO                   = #{P_CAR_NO}                 </if>
          <if test="P_PLANED_DATETIME         != null">
          ,PLANED_DATETIME          = DECODE(#{P_PLANED_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_PLANED_DATETIME}))
          </if>
          <if test="P_PALLET_ID_CNT           != null">,PALLET_ID_CNT            = #{P_PALLET_ID_CNT}          </if>
          <if test="P_ASSORT_DIV              != null">,ASSORT_DIV               = #{P_ASSORT_DIV}             </if>
          <if test="P_ORDER_BOX_QTY           != null">,ORDER_BOX_QTY            = #{P_ORDER_BOX_QTY}          </if>
          <if test="P_ENTRY_BOX_QTY           != null">,ENTRY_BOX_QTY            = #{P_ENTRY_BOX_QTY}          </if>
          <if test="P_CONFIRM_BOX_QTY         != null">,CONFIRM_BOX_QTY          = #{P_CONFIRM_BOX_QTY}        </if>
          <if test="P_DIRECT_YN               != null">,DIRECT_YN                = #{P_DIRECT_YN}              </if>
          <if test="P_SHIPMENT_NO             != null">,SHIPMENT_NO              = #{P_SHIPMENT_NO}            </if>
          <if test="P_BILL_PLT_QTY            != null">,BILL_PLT_QTY             = #{P_BILL_PLT_QTY}           </if>
          <if test="P_BILL_BOX_QTY            != null">,BILL_BOX_QTY             = #{P_BILL_BOX_QTY}           </if>
          <if test="P_BILL_EA_QTY             != null">,BILL_EA_QTY              = #{P_BILL_EA_QTY}            </if>
          <if test="P_BILL_USER_ID            != null">,BILL_USER_ID             = #{P_BILL_USER_ID}           </if>
          <if test="P_BILL_DATETIME           != null">
          ,BILL_DATETIME            = DECODE(#{P_BILL_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_BILL_DATETIME}))
          </if>
          <if test="P_VCONFIRM_YN             != null">,VCONFIRM_YN              = #{P_VCONFIRM_YN}            </if>
          <if test="P_TRANS_ETC_DATE          != null">,TRANS_ETC_DATE           = #{P_TRANS_ETC_DATE}         </if>
          <if test="P_TRANS_ETC_NO            != null">,TRANS_ETC_NO             = #{P_TRANS_ETC_NO}           </if>
          <if test="P_DATA_DIV                != null">,DATA_DIV                 = #{P_DATA_DIV}               </if>
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_ENTRY_USER_ID           != null">,ENTRY_USER_ID            = #{P_ENTRY_USER_ID}          </if>
          <if test="P_ENTRY_DATETIME          != null">
          ,ENTRY_DATETIME           = DECODE(#{P_ENTRY_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_ENTRY_DATETIME}))
          </if>
          <if test="P_DIRECTIONS_USER_ID      != null">,DIRECTIONS_USER_ID       = #{P_DIRECTIONS_USER_ID}     </if>
          <if test="P_DIRECTIONS_DATETIME     != null">
          ,DIRECTIONS_DATETIME      = DECODE(#{P_DIRECTIONS_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_DIRECTIONS_DATETIME}))
          </if>
          <if test="P_CONFIRM_USER_ID         != null">,CONFIRM_USER_ID          = #{P_CONFIRM_USER_ID}        </if>
          <if test="P_CONFIRM_DATETIME        != null">
          ,CONFIRM_DATETIME         = DECODE(#{P_CONFIRM_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_CONFIRM_DATETIME}))
          </if>
          <if test="P_PUTAWAY_USER_ID         != null">,PUTAWAY_USER_ID          = #{P_PUTAWAY_USER_ID}        </if>
          <if test="P_PUTAWAY_DATETIME        != null">
          ,PUTAWAY_DATETIME         = DECODE(#{P_PUTAWAY_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_PUTAWAY_DATETIME}))
          </if>
     WHERE CENTER_CD                = #{P_CENTER_CD}
       AND BU_CD                    = #{P_BU_CD}
       AND INBOUND_DATE             = #{P_INBOUND_DATE}
       AND INBOUND_NO               = #{P_INBOUND_NO}
  </update>
  <!-- [E] - UPDATE_LI020NM [입고마스터] -->


  <!-- [S] - INSERT_LI090NM [입고추가작업비] -->
  <insert id="INSERT_LI090NM" parameterType="hashmap">
    INSERT INTO LI090NM
               (
                CENTER_CD
               ,BU_CD
               ,INBOUND_DATE
               ,INBOUND_NO
               <if test="P_EXTRA_WORK_DIV          != null and P_EXTRA_WORK_DIV          != ''">,EXTRA_WORK_DIV              </if>
               <if test="P_EXTRA_WORK_QTY          != null and P_EXTRA_WORK_QTY          != ''">,EXTRA_WORK_QTY              </if>
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,REMARK1                     </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               ,LAST_USER_ID
               ,LAST_DATETIME
               )
         VALUES
               (
                #{P_CENTER_CD}
               ,#{P_BU_CD}
               ,#{P_INBOUND_DATE}
               ,#{P_INBOUND_NO}
               <if test="P_EXTRA_WORK_DIV          != null and P_EXTRA_WORK_DIV          != ''">,#{P_EXTRA_WORK_DIV}         </if>
               <if test="P_EXTRA_WORK_QTY          != null and P_EXTRA_WORK_QTY          != ''">,#{P_EXTRA_WORK_QTY}         </if>
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,#{P_REMARK1}                </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               ,#{P_USER_ID}
               ,SYSDATE
               )
  </insert>
  <!-- [E] - INSERT_LI090NM [입고추가작업비] -->


  <!-- [S] - UPDATE_LI090NM [입고추가작업비] -->
  <update id="UPDATE_LI090NM" parameterType="hashmap">
    UPDATE LI090NM
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_EXTRA_WORK_QTY          != null">,EXTRA_WORK_QTY           = #{P_EXTRA_WORK_QTY}         </if>
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_REG_USER_ID             != null">,REG_USER_ID              = #{P_REG_USER_ID}            </if>
          <if test="P_REG_DATETIME            != null">
          ,REG_DATETIME             = DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
          </if>
     WHERE CENTER_CD                = #{P_CENTER_CD}
       AND BU_CD                    = #{P_BU_CD}
       AND INBOUND_DATE             = #{P_INBOUND_DATE}
       AND INBOUND_NO               = #{P_INBOUND_NO}
       AND EXTRA_WORK_DIV           = #{P_EXTRA_WORK_DIV}
  </update>
  <!-- [E] - UPDATE_LI090NM [입고추가작업비] -->


  <!-- [S] - DELETE_LI090NM [입고추가작업비] -->
  <delete id="DELETE_LI090NM" parameterType="hashmap">
    DELETE 
      FROM LI090NM
     WHERE CENTER_CD                = #{P_CENTER_CD}
     <!--<if test="P_BU_CD                   != null and P_BU_CD                   != ''">-->
       AND BU_CD                    = #{P_BU_CD}
     <!--</if>-->
     <!--<if test="P_INBOUND_DATE            != null and P_INBOUND_DATE            != ''">-->
       AND INBOUND_DATE             = #{P_INBOUND_DATE}
     <!--</if>-->
     <!--<if test="P_INBOUND_NO              != null and P_INBOUND_NO              != ''">-->
       AND INBOUND_NO               = #{P_INBOUND_NO}
     <!--</if>-->
  </delete>
  <!-- [E] - DELETE_LI090NM [입고추가작업비] -->


</mapper>