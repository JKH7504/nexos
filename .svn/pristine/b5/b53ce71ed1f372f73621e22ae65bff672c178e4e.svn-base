<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // EDIFAPI 관련 Package
  // Author : ASETEC
  // Date : 2023-05-18
  // Description
  // EDIFAPI 관련 Package Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_package_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PACKAGE_MAPPER('EDIFAPI' ,NULL ,NULL) AS SQLMAP_TEXT
    FROM DUAL;
  //====================================================================================================================
  // ※ Package 호출 관련 Mapper의 Namespace는 "Package명" 으로 처리
  //====================================================================================================================
  -->
<mapper namespace="EDIFAPI">
  <!--
  //====================================================================================================================
  // SELECT SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="EDIFAPI_VIRTUALMAP" type="hashmap"></resultMap>

  <!-- [S] - EDIFAPI.GET_SPEC_WCSLCMOVERESULT -->
  <select id="GET_SPEC_WCSLCMOVERESULT" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDIFAPI_VIRTUALMAP} = call EDIFAPI.GET_SPEC_WCSLCMOVERESULT()
    }
  </select>
  <!-- [E] - EDIFAPI.GET_SPEC_WCSLCMOVERESULT -->


  <!-- [S] - EDIFAPI.GET_SPEC_WCSLOASSRESULT -->
  <select id="GET_SPEC_WCSLOASSRESULT" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDIFAPI_VIRTUALMAP} = call EDIFAPI.GET_SPEC_WCSLOASSRESULT()
    }
  </select>
  <!-- [E] - EDIFAPI.GET_SPEC_WCSLOASSRESULT -->


  <!-- [S] - EDIFAPI.GET_SPEC_WCSLODASRESULT -->
  <select id="GET_SPEC_WCSLODASRESULT" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDIFAPI_VIRTUALMAP} = call EDIFAPI.GET_SPEC_WCSLODASRESULT()
    }
  </select>
  <!-- [E] - EDIFAPI.GET_SPEC_WCSLODASRESULT -->


  <!-- [S] - EDIFAPI.GET_SPEC_WCSLODPCRESULT -->
  <select id="GET_SPEC_WCSLODPCRESULT" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDIFAPI_VIRTUALMAP} = call EDIFAPI.GET_SPEC_WCSLODPCRESULT()
    }
  </select>
  <!-- [E] - EDIFAPI.GET_SPEC_WCSLODPCRESULT -->


  <!--
  //====================================================================================================================
  // PROCEDURE SQLMAP
  //====================================================================================================================
  -->
  <!-- [S] - EDIFAPI.PROCESSING_WCSLCMOVERESULT -->
  <select id="PROCESSING_WCSLCMOVERESULT" statementType="CALLABLE" parameterType="hashmap">
    {  call EDIFAPI.PROCESSING_WCSLCMOVERESULT
      (#{P_RECV_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDIFAPI.PROCESSING_WCSLCMOVERESULT -->


  <!-- [S] - EDIFAPI.PROCESSING_WCSLOASSRESULT -->
  <select id="PROCESSING_WCSLOASSRESULT" statementType="CALLABLE" parameterType="hashmap">
    {  call EDIFAPI.PROCESSING_WCSLOASSRESULT
      (#{P_RECV_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDIFAPI.PROCESSING_WCSLOASSRESULT -->


  <!-- [S] - EDIFAPI.PROCESSING_WCSLODASRESULT -->
  <select id="PROCESSING_WCSLODASRESULT" statementType="CALLABLE" parameterType="hashmap">
    {  call EDIFAPI.PROCESSING_WCSLODASRESULT
      (#{P_RECV_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDIFAPI.PROCESSING_WCSLODASRESULT -->


  <!-- [S] - EDIFAPI.PROCESSING_WCSLODPCRESULT -->
  <select id="PROCESSING_WCSLODPCRESULT" statementType="CALLABLE" parameterType="hashmap">
    {  call EDIFAPI.PROCESSING_WCSLODPCRESULT
      (#{P_RECV_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDIFAPI.PROCESSING_WCSLODPCRESULT -->


  <!--
  //====================================================================================================================
  // INSERT/UPDATE/DELETE SQLMAP
  //====================================================================================================================
  -->


</mapper>