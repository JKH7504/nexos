/**
 * <pre>
 *  ==================================================================================================================================================
 *  프로그램ID         : commonpopup
 *  프로그램명         : 공통코드검색 팝업
 *  프로그램설명       : 공통코드검색 팝업 화면 Javascript
 *  작성자             : Copyright (c) 2013 ASETEC Corporation. All rights reserved.
 *  작성일자           : 2016-12-14
 *  버전               : 1.0
 * 
 *  --------------------------------------------------------------------------------------------------------------------------------------------------
 *  버전       작성일자      작성자           설명
 *  ---------  ------------  ---------------  --------------------------------------------------------------------------------------------------------
 *  1.0        2016-12-14    ASETEC           신규작성
 *  --------------------------------------------------------------------------------------------------------------------------------------------------
 * 
 *  ==================================================================================================================================================
 * </pre>
 */

/**
 * 화면 초기화 - 화면 로드시 자동 호출 됨
 */
function _Initialize() {

    // 단위화면에서 사용될 일반 전역 변수 정의
    $NC.setGlobalVar({
        autoResizeView: {
            container: "#ctrMasterView",
            grids: [
                "#grdMaster"
            ],
            exceptHeight: $NC.getViewHeight("#ctrPopupView")
        }
    });

    // 그리드 초기화
    grdMasterInitialize();

    $("#btnSearch").click(btnSearchOnClick);
    $("#btnOk").click(onClose);
    $("#btnCancel").click(onCancel);

    // 전체 조회가 불가능하면 필수로 CSS 변경
    if (!$NC.G_VAR.G_PARAMETER.queryCanAll) {
        $("#edtQSearchVal").removeClass("edtNormal").addClass("edtKey");
    }
}

/**
 * 화면 리사이즈 Offset 세팅
 */
function _SetResizeOffset() {

}

/**
 * Window Resize Event - Window Size 조정시 호출 됨
 */
function _OnResize(parent, viewWidth, viewHeight) {

}

/**
 * Load Complete Event
 */
function _OnLoaded() {

    $NC.setValue("#ctrTitle_grdMaster", $NC.G_VAR.G_PARAMETER.title.replace(" " + $NC.getDisplayMsg("JS.COMMONPOPUP.001", "검색"), ""));
    G_GRDMASTER.queryParams = $NC.G_VAR.G_PARAMETER.queryParams;

    // 데이터를 넘겨 받으면 데이터 그냥 표시
    if ($NC.G_VAR.G_PARAMETER.queryData) {
        $NC.showProgressMessage();
        try {
            $NC.setValue("#edtQSearchVal", $NC.G_VAR.G_PARAMETER.queryParams[$NC.G_VAR.G_PARAMETER.querySearchParam]);
            onGetDataSet({
                data: $NC.G_VAR.G_PARAMETER.queryData
            });
            $NC.setFocus("#edtQSearchVal");
        } finally {
            $NC.hideProgressMessage();
        }
    }
    // 서비스 호출
    else {
        // 자동 조회
        if ($NC.G_VAR.G_PARAMETER.autoInquiry === true) {
            // 조회 파라메터 값 읽기
            var value = $NC.G_VAR.G_PARAMETER.queryParams[$NC.G_VAR.G_PARAMETER.querySearchParam];

            // 전체 조회를 할 수 없을 경우 파라메터 값이 전체면 조회 안함
            if (($NC.isNull(value) || value == $ND.C_ALL) && !$NC.G_VAR.G_PARAMETER.queryCanAll) {
                return;
            }
            btnSearchOnClick();
        }
        // 기타
        else {
            $NC.setFocus("#edtQSearchVal");
        }
    }
}

function _OnInputKeyUp(e, view) {

    if (e.which != 13) {
        return;
    }

    if (view[0].id == "edtQSearchVal") {
        $("#btnSearch").click();
    }
}

function btnSearchOnClick() {

    var searchVal = $NC.getValue("#edtQSearchVal", $ND.C_ALL);
    // 전체 조회를 할 수 없을 경우 파라메터 값이 전체면 조회 안함
    if (searchVal == $ND.C_ALL && !$NC.G_VAR.G_PARAMETER.queryCanAll) {
        alert($NC.getDisplayMsg("JS.COMMONPOPUP.002", "검색 값을 입력해야 조회할 수 있습니다."));
        $NC.setFocus("#edtQSearchVal");
        return;
    }

    var queryParams = $.extend(true, {}, $NC.G_VAR.G_PARAMETER.queryParams);
    // 검색 값 입력
    queryParams[$NC.G_VAR.G_PARAMETER.querySearchParam] = searchVal;

    G_GRDMASTER.queryParams = queryParams;

    // 데이터 조회
    $NC.serviceCall($NC.G_VAR.G_PARAMETER.requestUrl, $NC.getGridParams(G_GRDMASTER), onGetDataSet);
}

function onCancel() {

    $NC.setPopupCloseAction($ND.C_CANCEL);
    $NC.onPopupClose();
}

function onClose() {

    if (G_GRDMASTER.lastRow == null) {
        alert($NC.getDisplayMsg("JS.COMMONPOPUP.003", "선택한 데이터가 없습니다."));
        $NC.setFocus("#edtQSearchVal");
        return;
    }

    var resultInfo;
    // 멀티선택일 경우
    if ($NC.G_VAR.G_PARAMETER.multiSelect) {
        // 선택 데이터 검색
        var searchRows = $NC.getGridSearchRows(G_GRDMASTER, {
            searchKey: "CHECK_YN",
            searchVal: $ND.C_YES
        });

        if (searchRows.length == 0) {
            alert($NC.getDisplayMsg("JS.COMMONPOPUP.003", "선택한 데이터가 없습니다."));
            $NC.setFocus("#edtQSearchVal");
            return;
        }

        resultInfo = [];
        for (var rIndex = 0, rCount = searchRows.length; rIndex < rCount; rIndex++) {
            var rowData = G_GRDMASTER.data.getItem(searchRows[rIndex]);
            resultInfo.push(rowData);
        }
    }
    // 단일선택일 경우
    else {
        resultInfo = G_GRDMASTER.data.getItem(G_GRDMASTER.lastRow);
    }

    $NC.setPopupCloseAction($ND.C_OK, resultInfo);
    $NC.onPopupClose();
}

function grdMasterInitialize() {

    var options = {};

    // Grid Object, DataView 생성 및 초기화
    $NC.setInitGridObject("#grdMaster", {
        columns: $NC.G_VAR.G_PARAMETER.columns,
        queryId: $NC.G_VAR.G_PARAMETER.queryId,
        sortCol: $NC.G_VAR.G_PARAMETER.columns[0].field,
        gridOptions: options
    });

    // 로딩 후 조회가 되었는지 여부
    G_GRDMASTER.INQUERY_YN = $ND.C_NO;

    // Grid 더블클릭 이벤트
    G_GRDMASTER.view.onDblClick.subscribe(grdMasterOnDblClick);
    // Grid 로우체인지 이벤트
    G_GRDMASTER.view.onSelectedRowsChanged.subscribe(grdMasterOnAfterScroll);
    G_GRDMASTER.view.onKeyDown.subscribe(grdMasterOnKeyDown);
    // 멀티선택, 헤더체크박스 추가, 선택 처리를 위한 이벤트 추가 바인딩
    if ($NC.G_VAR.G_PARAMETER.multiSelect) {
        G_GRDMASTER.view.onHeaderClick.subscribe(grdMasterOnHeaderClick);
        G_GRDMASTER.view.onClick.subscribe(grdMasterOnClick);

        $NC.setGridColumnHeaderCheckBox(G_GRDMASTER, "CHECK_YN");
    }
}

function grdMasterOnAfterScroll(e, args) {

    if (!$NC.isGridValidLastRow(G_GRDMASTER, args.rows, e)) {
        return;
    }
    var row = args.rows[0];

    // 상단 현재로우/총건수 업데이트
    $NC.setGridDisplayRows(G_GRDMASTER, row + 1);
}

function grdMasterOnKeyDown(e, args) {

    if ((e.ctrlKey || e.metaKey) && e.which == 13) {
        if (G_GRDMASTER.lastRow != null) {
            e.isImmediatePropagationStopped();

            onClose();
        }
    }
}

function grdMasterOnDblClick(e, args) {

    // 멀티선택일 경우 선택(체크) 처리
    if ($NC.G_VAR.G_PARAMETER.multiSelect) {
        var rowData = G_GRDMASTER.data.getItem(args.row);
        rowData.CHECK_YN = rowData.CHECK_YN == $ND.C_YES ? $ND.C_NO : $ND.C_YES;
        $NC.setGridApplyChange(G_GRDMASTER, rowData);
        return;
    }

    onClose();
}

function grdMasterOnHeaderClick(e, args) {

    switch (args.column.id) {
        case "CHECK_YN":
            $NC.onGridColumnHeaderCheckBoxChange(G_GRDMASTER, e, args);
            break;
    }
}

function grdMasterOnClick(e, args) {

    var columnId = G_GRDMASTER.view.getColumnId(args.cell);
    if ($NC.isNull(columnId)) {
        return;
    }

    switch (columnId) {
        case "CHECK_YN":
            $NC.onGridCheckBoxEditorChange(G_GRDMASTER, e, args);
            break;
    }
}

function onGetDataSet(ajaxData) {

    $NC.setInitGridData(G_GRDMASTER, ajaxData);
    if ($NC.setInitGridAfterOpen(G_GRDMASTER)) {
        var searchVal = $NC.getValue("#edtQSearchVal", $ND.C_ALL);
        if ($NC.isNotNull($NC.G_VAR.G_PARAMETER.addBase) && (searchVal == $ND.C_ALL || searchVal != $NC.G_VAR.G_PARAMETER.addBase)) {
            var newRowData = {
                id: $NC.getGridNewRowId()
            };
            newRowData[$NC.G_VAR.G_PARAMETER.columns[0].field] = $NC.G_VAR.G_PARAMETER.addBase;
            newRowData[$NC.G_VAR.G_PARAMETER.columns[1].field] = $ND.C_BASE_NM;
            G_GRDMASTER.data.insertItem(0, newRowData);
        }
        // 멀티선택일 경우
        if ($NC.G_VAR.G_PARAMETER.multiSelect) {
            var searchKey = $NC.G_VAR.G_PARAMETER.querySearchParam.replace("P_", ""), rowData;
            if (G_GRDMASTER.INQUERY_YN == $ND.C_NO) {
                // 멀티 선택
                if ($NC.isNotNull($NC.G_VAR.G_PARAMETER.multiValue)) {
                    // 멀티 선택 값 분리, array로
                    var dsMultiValue = $NC.G_VAR.G_PARAMETER.multiValue.split($ND.C_DV_SEPARATOR);
                    outerFor: for (var rIndex = 0, rCount = G_GRDMASTER.data.getLength(); rIndex < rCount; rIndex++) {
                        rowData = G_GRDMASTER.data.getItem(rIndex);
                        // 데이터 선택(체크)
                        innerFor: for (var dIndex = 0, dCount = dsMultiValue.length; dIndex < dCount; dIndex++) {
                            // 존재하면 선택(체크)
                            if (rowData[searchKey] == dsMultiValue[dIndex]) {
                                rowData.CHECK_YN = $ND.C_YES;
                                $NC.setGridApplyChange(G_GRDMASTER, rowData);
                                // 배열에서 제거
                                dsMultiValue.splice(dIndex, 1);
                                // 모두 선택(체크)했으면 중지
                                if (dsMultiValue.length == 0) {
                                    break outerFor;
                                }
                                break innerFor;
                            }
                        }
                    }
                }
            }
            // 로딩 이후 검색했을 경우 검색한 데이터를 선택
            else {
                if (searchVal != $ND.C_ALL) {
                    var searchRow = $NC.getGridSearchRow(G_GRDMASTER, {
                        searchKey: searchKey,
                        searchVal: searchVal
                    });
                    if (searchRow != -1) {
                        rowData = G_GRDMASTER.data.getItem(searchRow);
                        rowData.CHECK_YN = $ND.C_YES;
                        $NC.setGridApplyChange(G_GRDMASTER, rowData);
                    }
                }
            }
        }
    }

    // 초기 조회시 조회여부 Y로 세팅
    if (G_GRDMASTER.INQUERY_YN == $ND.C_NO) {
        G_GRDMASTER.INQUERY_YN = $ND.C_YES;
    }

    $NC.setFocus("#edtQSearchVal");
}

/**
 * Grid에서 CheckBox Fomatter를 사용할 경우 CheckBox Click 이벤트 처리
 * 
 * @param e
 * @param view
 *        대상 Object
 * @param args
 *        grid, row, cell, val
 */
function _OnGridCheckBoxFormatterClick(e, view, args) {

    var grdObject = $NC.getGridObject(args.grid);
    if (!grdObject.isValid) {
        return;
    }

    var columnId = grdObject.view.getColumnId(args.cell);
    if ($NC.isNull(columnId)) {
        return;
    }

    switch (columnId) {
        case "CHECK_YN":
            $NC.onGridCheckBoxFormatterChange(grdObject, e, args, true);
            break;
    }
}