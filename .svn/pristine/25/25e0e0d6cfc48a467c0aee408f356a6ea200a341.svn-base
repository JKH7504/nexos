/**
 * Inquiry Button Event - 메인 상단 조회 버튼 클릭시 호출 됨
 */
function _InquiryB(args) {

    // 조회시 전역 변수 값 초기화
    $NC.setInitGridVar(G_GRDMASTERB);
    // 파라메터 세팅
    G_GRDMASTERB.queryParams = {
        P_CENTER_CD: args.CENTER_CD,
        P_BU_CD: args.BU_CD,
        P_OUTBOUND_DATE: args.OUTBOUND_DATE,
        P_ORDER_DATE1: args.ORDER_DATE1,
        P_ORDER_DATE2: args.ORDER_DATE2,
        P_INOUT_CD: args.INOUT_CD,
        P_BU_NO: args.BU_NO,
        P_SO_NO: args.SO_NO,
        P_BRAND_CD: args.BRAND_CD,
        P_ITEM_CD: args.ITEM_CD,
        P_ITEM_NM: args.ITEM_NM,
        P_ITEM_BAR_CD: args.ITEM_BAR_CD,
        P_ITEM_STATE: args.ITEM_STATE,
        P_DELIVERY_CD: args.DELIVERY_CD,
        P_RDELIVERY_CD: args.RDELIVERY_CD,
        P_RDELIVERY_DIV: args.RDELIVERY_DIV,
        P_YEAR_DIV: args.YEAR_DIV,
        P_SEASON_DIV: args.SEASON_DIV,
        P_ITEM_DIV: args.ITEM_DIV,
        P_ERP_BATCH: args.ERP_BATCH,
        P_DISTRIBUTE_DIV: args.DISTRIBUTE_DIV,
        P_CAR_DIV: args.CAR_DIV,
        P_STATE_PRE_YN: args.STATE_PRE_YN,
        P_STATE_CUR_YN: args.STATE_CUR_YN
    };
    // 데이터 조회
    $NC.serviceCall("/LOB02010E0/getDataSet.do", $NC.getGridParams(G_GRDMASTERB), onGetMasterB);
}

/**
 * New Button Event - 메인 상단 신규 버튼 클릭시 호출 됨
 */
function _NewB() {

    if ($NC.G_VAR.activeView.PROCESS_CD != $ND.C_PROCESS_ENTRY) {
        return;
    }
    if ($NC.G_VAR.policyVal.LO210 == $ND.C_NO && $NC.G_VAR.policyVal.LO212 == $ND.C_NO) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.024", "출고등록 신규처리가 불가능한 사업부입니다."));
        return;
    }

    var CENTER_CD = $NC.getValue("#cboQCenter_Cd");
    var CENTER_CD_F = $NC.getValueCombo("#cboQCenter_Cd", "F");
    var BU_CD = $NC.getValue("#edtQBu_Cd");
    var BU_NM = $NC.getValue("#edtQBu_Nm");
    var CUST_CD = $NC.getValue("#edtQCust_Cd");
    var OUTBOUND_DATE = $NC.getValue("#dtpQOutbound_Date");
    var permission = $NC.getProgramPermission();

    $NC.showProgramSubPopup({
        PROGRAM_ID: "LOB02011P1",
        PROGRAM_NM: $NC.getDisplayMsg("JS.LOB02011P1.001", "출고등록/수정"),
        url: "lo/LOB02011P1.html",
        width: 1024,
        height: 600,
        G_PARAMETER: {
            P_PROCESS_CD: $ND.C_PROCESS_ENTRY_CREATE,
            P_CENTER_CD: CENTER_CD,
            P_CENTER_CD_F: CENTER_CD_F,
            P_BU_CD: BU_CD,
            P_BU_NM: BU_NM,
            P_CUST_CD: CUST_CD,
            P_OUTBOUND_DATE: OUTBOUND_DATE,
            P_PROCESS_STATE_FW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM,
            P_PROCESS_STATE_BW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CANCEL,
            P_POLICY_LO190: $NC.G_VAR.policyVal.LO190,
            P_POLICY_LO210: $NC.G_VAR.policyVal.LO210,
            P_POLICY_LO212: $NC.G_VAR.policyVal.LO212,
            P_POLICY_LO230: $NC.G_VAR.policyVal.LO230,
            P_POLICY_LO250: $NC.G_VAR.policyVal.LO250,
            P_POLICY_LS210: $NC.G_VAR.policyVal.LS210,
            P_POLICY_LO720: $NC.G_VAR.policyVal.LO720,
            P_MASTER_DS: {},
            P_DETAIL_DS: [],
            P_PERMISSION: permission
        },
        onOk: function() {
            onSaveB($NC.toJson({
                RESULT_DATA: $ND.C_OK
            }));
        }
    });
}

/**
 * Save Button Event - 메인 상단 저장 버튼 클릭시 호출 됨
 */
function _SaveB() {

}

/**
 * Delete Button Event - 메인 상단 삭제 버튼 클릭시 호출 됨
 */
function _DeleteB() {

}

/**
 * Cancel Button Event - 메인 상단 취소 버튼 클릭시 호출 됨
 */
function _CancelB() {

}

function onProcessPreB() {

    var rCount = G_GRDMASTERB.data.getLength();
    if (rCount == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.020", "조회 후 처리하십시오."));
        return;
    }
    if ($NC.G_VAR.PROCESS_YN != $ND.C_YES) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.027", "수행 가능한 프로세스가 없습니다.\n사업부별 프로세스관리에서 수행 프로세스를 등록 후 처리하십시오."));
        return;
    }

    if (!confirm($NC.getDisplayMsg("JS.LOB02010E1.028", "출고등록 취소 처리하시겠습니까?"))) {
        return;
    }

    if (G_GRDMASTERB.view.getEditorLock().isActive()) {
        G_GRDMASTERB.view.getEditorLock().commitCurrentEdit();
    }

    var dsMaster = [];
    var PROCESS_STATE = $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CANCEL;
    var checkedCount = 0;
    var rowData;
    for (var rIndex = 0; rIndex < rCount; rIndex++) {
        rowData = G_GRDMASTERB.data.getItem(rIndex);
        if (rowData.CHECK_YN != $ND.C_YES) {
            continue;
        }
        checkedCount++;
        // 출고등록 상태인 전표만 대상
        if (rowData.OUTBOUND_STATE != PROCESS_STATE) {
            continue;
        }
        dsMaster.push({
            P_CENTER_CD: rowData.CENTER_CD,
            P_BU_CD: rowData.BU_CD,
            P_OUTBOUND_DATE: rowData.OUTBOUND_DATE,
            P_OUTBOUND_NO: rowData.OUTBOUND_NO
        });
    }
    if (checkedCount == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.029", "출고등록 취소 처리할 데이터를 선택하십시오."));
        return;
    }
    if (dsMaster.length == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.030", "선택한 데이터 중 출고등록 취소 처리 가능한 데이터가 없습니다."));
        return;
    }

    $NC.serviceCall("/LOB02010E0/callLOProcessing.do", {
        P_PROCESS_CD: $ND.C_PROCESS_ENTRY,
        P_DIRECTION: $ND.C_DIRECTION_BW,
        P_PROCESS_STATE_FW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM,
        P_PROCESS_STATE_BW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CANCEL,
        // -- PROCESS_ENTRY, DIRECTION_FW 처리에 사용 -------
        P_OUTBOUND_DATE_B: "",
        P_DELIVERY_BATCH: "",
        P_DELIVERY_BATCH_NM: "",
        // -- PROCESS_DIRECTIONS, DIRECTION_FW 처리에 사용 --
        P_OUTBOUND_BATCH: "",
        P_OUTBOUND_BATCH_NM: "",
        P_DIRECTIONS_DIV: "",
        P_EQUIP_DIV: "",
        // --------------------------------------------------
        P_DS_MASTER: dsMaster,
        P_USER_ID: $NC.G_USERINFO.USER_ID
    }, onSuccessB, onSaveErrorB, 2);
}

function onProcessNxtB() {

    var rCount = G_GRDMASTERB.data.getLength();
    if (rCount == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.020", "조회 후 처리하십시오."));
        return;
    }
    if ($NC.G_VAR.PROCESS_YN != $ND.C_YES) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.027", "수행 가능한 프로세스가 없습니다.\n사업부별 프로세스관리에서 수행 프로세스를 등록 후 처리하십시오."));
        return;
    }

    var OUTBOUND_DATE_B = $NC.getValue("#dtpOutbound_DateB");
    if ($NC.isNull(OUTBOUND_DATE_B)) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.031", "출고일자를 먼저 입력하십시오."));
        $NC.setFocus("#dtpOutbound_DateB");
        return;
    }
    var DELIVERY_BATCH;
    var DELIVERY_BATCH_NM;
    var DELIVERY_BATCH_F;
    if ($NC.G_VAR.policyVal.LO720 == $ND.C_YES) {
        DELIVERY_BATCH = $NC.getValue("#cboDelivery_BatchB");
        DELIVERY_BATCH_NM = $NC.getValue("#edtDelivery_Batch_NmB");
        DELIVERY_BATCH_F = $NC.getValueCombo("#cboDelivery_BatchB", "F");
    } else {
        DELIVERY_BATCH = "999";
        DELIVERY_BATCH_NM = "999차수";
    }

    if ($NC.isNotNull(DELIVERY_BATCH_F)) {
        if (!confirm($NC.getDisplayMsg("JS.LOB02010E1.032", "출고등록 처리하시겠습니까?\n운송차수(" + DELIVERY_BATCH_F + ")", DELIVERY_BATCH_F))) {
            return;
        }
    } else {
        if (!confirm($NC.getDisplayMsg("JS.LOB02010E1.033", "출고등록 처리하시겠습니까?"))) {
            return;
        }
    }

    if (G_GRDMASTERB.view.getEditorLock().isActive()) {
        G_GRDMASTERB.view.getEditorLock().commitCurrentEdit();
    }

    var dsMaster = [];
    var PROCESS_STATE = $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM;
    var checkedCount = 0;
    var rowData;
    for (var rIndex = 0; rIndex < rCount; rIndex++) {
        rowData = G_GRDMASTERB.data.getItem(rIndex);
        if (rowData.CHECK_YN != $ND.C_YES) {
            continue;
        }
        checkedCount++;
        // 출고예정 상태인 전표만 대상 "10"
        if (rowData.OUTBOUND_STATE != PROCESS_STATE) {
            continue;
        }
        // 차량구분특성이 택배이고 주소정제 성공인 정제만
        if (rowData.CAR_SUB_CD == "2" && rowData.ACS_ERROR_CD != $ND.C_BASE_CD_L1) {
            continue;
        }
        dsMaster.push({
            P_CENTER_CD: rowData.CENTER_CD,
            P_BU_CD: rowData.BU_CD,
            P_OUTBOUND_DATE: rowData.ORDER_DATE,
            P_OUTBOUND_NO: rowData.ORDER_NO
        });
    }
    if (checkedCount == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.034", "출고등록 처리할 데이터를 선택하십시오."));
        return;
    }
    if (dsMaster.length == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.035", "선택한 데이터 중 출고등록 처리 가능한 데이터가 없습니다."));
        return;
    }

    $NC.serviceCall("/LOB02010E0/callLOProcessing.do", {
        P_PROCESS_CD: $ND.C_PROCESS_ENTRY,
        P_DIRECTION: $ND.C_DIRECTION_FW,
        P_PROCESS_STATE_FW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM,
        P_PROCESS_STATE_BW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CANCEL,
        // -- PROCESS_ENTRY, DIRECTION_FW 처리에 사용 -------
        P_OUTBOUND_DATE_B: OUTBOUND_DATE_B,
        P_DELIVERY_BATCH: DELIVERY_BATCH,
        P_DELIVERY_BATCH_NM: DELIVERY_BATCH_NM,
        // -- PROCESS_DIRECTIONS, DIRECTION_FW 처리에 사용 --
        P_OUTBOUND_BATCH: "",
        P_OUTBOUND_BATCH_NM: "",
        P_DIRECTIONS_DIV: "",
        P_EQUIP_DIV: "",
        // --------------------------------------------------
        P_DS_MASTER: dsMaster,
        P_USER_ID: $NC.G_USERINFO.USER_ID
    }, onSuccessB, onSaveErrorB, 2);
}

function grdMasterBOnGetColumns() {

    var columns = [];
    $NC.setGridColumn(columns, {
        id: "OUTBOUND_STATE_P",
        field: "OUTBOUND_STATE",
        name: "P",
        resizable: false,
        formatter: window.getGridProcessFormatter
    });
    $NC.setGridColumn(columns, {
        id: "OUTBOUND_STATE_S",
        field: "OUTBOUND_STATE",
        name: "S",
        resizable: false,
        formatter: window.getGridStateFormatter
    });
    $NC.setGridColumn(columns, {
        id: "CHECK_YN",
        field: "CHECK_YN",
        resizable: false,
        cssClass: "styCenter",
        formatter: Slick.Formatters.CheckBox,
        editor: Slick.Editors.CheckBox,
        editorOptions: {
            valueChecked: $ND.C_YES,
            valueUnChecked: $ND.C_NO
        }
    });
    $NC.setGridColumn(columns, {
        id: "OUTBOUND_DATE",
        field: "OUTBOUND_DATE",
        name: "출고일자",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "OUTBOUND_NO",
        field: "OUTBOUND_NO",
        name: "출고번호",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "OUTBOUND_STATE_D",
        field: "OUTBOUND_STATE_D",
        name: "진행상태",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "INOUT_NM",
        field: "INOUT_NM",
        name: "출고구분"
    });
    $NC.setGridColumn(columns, {
        id: "DELIVERY_CD",
        field: "DELIVERY_CD",
        name: "배송처"
    });
    $NC.setGridColumn(columns, {
        id: "DELIVERY_NM",
        field: "DELIVERY_NM",
        name: "배송처명"
    });
    $NC.setGridColumn(columns, {
        id: "RDELIVERY_CD",
        field: "RDELIVERY_CD",
        name: "실배송처"
    });
    $NC.setGridColumn(columns, {
        id: "RDELIVERY_NM",
        field: "RDELIVERY_NM",
        name: "실배송처명"
    });
    $NC.setGridColumn(columns, {
        id: "DISTRIBUTE_DIV_F",
        field: "DISTRIBUTE_DIV_F",
        name: "유통구분"
    });
    $NC.setGridColumn(columns, {
        id: "ACS_ERROR_CD_D",
        field: "ACS_ERROR_CD_D",
        name: "주소정제상태",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "CARRIER_CD_F",
        field: "CARRIER_CD_F",
        name: "운송사"
    });
    $NC.setGridColumn(columns, {
        id: "CAR_DIV_F",
        field: "CAR_DIV_F",
        name: "차량구분"
    });
    $NC.setGridColumn(columns, {
        id: "SHIP_RCP_NO",
        field: "SHIP_RCP_NO",
        name: "운송접수번호"
    });
    $NC.setGridColumn(columns, {
        id: "ERP_BATCH",
        field: "ERP_BATCH",
        name: "ERP차수"
    });
    $NC.setGridColumn(columns, {
        id: "BU_DATE",
        field: "BU_DATE",
        name: "전표일자",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "BU_NO",
        field: "BU_NO",
        name: "전표번호"
    });
    $NC.setGridColumn(columns, {
        id: "SO_DATE",
        field: "SO_DATE",
        name: "주문일자",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "SO_NO",
        field: "SO_NO",
        name: "주문번호"
    });
    $NC.setGridColumn(columns, {
        id: "ORDER_DATE",
        field: "ORDER_DATE",
        name: "예정일자",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "ORDER_NO",
        field: "ORDER_NO",
        name: "예정번호",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "INOUT_DATE",
        field: "INOUT_DATE",
        name: "거래명세서일자",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "ORDER_DIV_D",
        field: "ORDER_DIV_D",
        name: "주문구분"
    });
    $NC.setGridColumn(columns, {
        id: "TOT_ENTRY_QTY",
        field: "TOT_ENTRY_QTY",
        name: "총수량",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "TOTAL_AMT",
        field: "TOTAL_AMT",
        name: "총금액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "CAR_CD",
        field: "CAR_CD",
        name: "차량코드"
    });
    $NC.setGridColumn(columns, {
        id: "CAR_NM",
        field: "CAR_NM",
        name: "차량명"
    });
    $NC.setGridColumn(columns, {
        id: "HOLD_YN",
        field: "HOLD_YN",
        name: "보류여부",
        cssClass: "styCenter",
        formatter: Slick.Formatters.CheckBox
    });
    $NC.setGridColumn(columns, {
        id: "PLANED_DATETIME",
        field: "PLANED_DATETIME",
        name: "납품예정일시",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "ACS_ERROR_MSG_D",
        field: "ACS_ERROR_MSG_D",
        name: "주소정제오류메시지"
    });
    $NC.setGridColumn(columns, {
        id: "REMARK1",
        field: "REMARK1",
        name: "비고"
    });

    return $NC.setGridColumnDefaultFormatter(columns);
}

/**
 * 출고등록 마스터 그리드 초기화
 */
function grdMasterBInitialize() {

    var options = {
        frozenColumn: 3,
        specialRow: {
            compareFn: function(specialRow, rowData, column, row, cell, colspan) {
                if (rowData.BACKORDER_YN == $ND.C_YES) {
                    return "stySpecial ";
                }
                // 주소정제 대상일 경우 주소정제 오류는 색상 지정
                if (rowData.OUTBOUND_STATE != $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM) {
                    return;
                }
                // CAR_DIV - ATTR01_CD, 차량구분(운영구분) - 택배차일 경우만 처리
                if (rowData.CAR_SUB_CD != "2") {
                    return;
                }
                // 주소정제하는 택배사인 경우만
                if (rowData.ACS_YN != $ND.C_YES) {
                    return;
                }
                // 주소정제 후 오류일 경우만
                if (rowData.ACS_ERROR_CD != $ND.C_NO && rowData.ACS_ERROR_CD != $ND.C_BASE_CD_L1) {
                    return "styImportant";
                }
            }
        }
    };

    // Grid Object, DataView 생성 및 초기화
    $NC.setInitGridObject("#grdMasterB", {
        columns: grdMasterBOnGetColumns(),
        queryId: "LOB02010E1.RS_T1A_MASTER",
        sortCol: "ORDER_DATE",
        gridOptions: options,
        canDblClick: true
    });

    G_GRDMASTERB.view.onSelectedRowsChanged.subscribe(grdMasterBOnAfterScroll);
    G_GRDMASTERB.view.onHeaderClick.subscribe(grdMasterBOnHeaderClick);
    G_GRDMASTERB.view.onClick.subscribe(grdMasterBOnClick);
    G_GRDMASTERB.view.onDblClick.subscribe(grdMasterBOnDblClick);

    $NC.setGridColumnHeaderCheckBox(G_GRDMASTERB, "CHECK_YN");
}

function grdMasterBOnAfterScroll(e, args) {

    if (!$NC.isGridValidLastRow(G_GRDMASTERB, args.rows, e)) {
        return;
    }
    var row = args.rows[0];
    var rowData = G_GRDMASTERB.data.getItem(row);

    // 조회시 전역 변수 값 초기화
    $NC.clearGridData(G_GRDDETAILB);
    G_GRDDETAILB.queryParams = {
        P_CENTER_CD: rowData.CENTER_CD,
        P_BU_CD: rowData.BU_CD,
        P_ORDER_DATE: rowData.ORDER_DATE,
        P_ORDER_NO: rowData.ORDER_NO,
        P_OUTBOUND_DATE: rowData.OUTBOUND_DATE,
        P_OUTBOUND_NO: rowData.OUTBOUND_NO
    };
    // 데이터 조회
    $NC.serviceCall("/LOB02010E0/getDataSet.do", $NC.getGridParams(G_GRDDETAILB), onGetDetailB);

    // 디테일 그리드 컬럼타이틀 변경
    if (rowData.OUTBOUND_STATE == $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CANCEL) {
        G_GRDDETAILB.view.updateColumnHeader("ENTRY_BOX", "등록BOX");
        G_GRDDETAILB.view.updateColumnHeader("ENTRY_EA", "등록EA");
        G_GRDDETAILB.view.updateColumnHeader("ENTRY_WEIGHT", "등록중량");
    } else {
        G_GRDDETAILB.view.updateColumnHeader("ENTRY_BOX", "예정BOX");
        G_GRDDETAILB.view.updateColumnHeader("ENTRY_EA", "예정EA");
        G_GRDDETAILB.view.updateColumnHeader("ENTRY_WEIGHT", "예정중량");
    }

    // 상단 현재로우/총건수 업데이트
    $NC.setGridDisplayRows(G_GRDMASTERB, row + 1);
}

function grdMasterBOnHeaderClick(e, args) {

    switch (args.column.id) {
        case "CHECK_YN":
            $NC.onGridColumnHeaderCheckBoxChange(G_GRDMASTERB, e, args, null, false);
            break;
    }
}

function grdMasterBOnClick(e, args) {

    var columnId = G_GRDMASTERB.view.getColumnId(args.cell);
    if ($NC.isNull(columnId)) {
        return;
    }

    switch (columnId) {
        case "CHECK_YN":
            $NC.onGridCheckBoxEditorChange(G_GRDMASTERB, e, args, null, false);
            break;
    }
}

function grdMasterBOnDblClick(e, args) {

    var permission = $NC.getProgramPermission();
    if (!permission.canSave) {
        alert($NC.getDisplayMsg("JS.MAIN.001", "해당 프로그램의 저장권한이 없습니다."));
        return;
    }

    var refRowData = G_GRDMASTERB.data.getItem(args.row);
    if ($NC.isNull(refRowData)) {
        return;
    }

    if (refRowData.HOLD_YN == $ND.C_YES) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.036", "보류상태인 전표는 팝업화면에서 작업하실 수 없습니다."));
        return;
    }

    // 택배주문의 경우 주소정제 성공 후 팝업 작업 가능
    if (refRowData.CAR_SUB_CD == "2" && refRowData.ACS_ERROR_CD != $ND.C_BASE_CD_L1
        && refRowData.OUTBOUND_STATE == $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "주소 정제 후 팝업화면에서 작업하실 수 있습니다."));
        return;
    }

    var PROCESS_CD, OUTBOUND_DATE, OUTBOUND_NO;
    // 예정일 경우
    if (refRowData.OUTBOUND_STATE == $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM) {
        PROCESS_CD = $ND.C_PROCESS_ORDER;
        OUTBOUND_DATE = refRowData.ORDER_DATE;
        OUTBOUND_NO = refRowData.ORDER_NO;
    }
    // 등록일 경우
    else {
        PROCESS_CD = $ND.C_PROCESS_ENTRY_UPDATE;
        OUTBOUND_DATE = refRowData.OUTBOUND_DATE;
        OUTBOUND_NO = refRowData.OUTBOUND_NO;
    }

    // 진행상태 체크 후 처리 가능시 팝업 표시
    window.getOutboundState({
        P_CENTER_CD: refRowData.CENTER_CD,
        P_BU_CD: refRowData.BU_CD,
        P_OUTBOUND_DATE: OUTBOUND_DATE,
        P_OUTBOUND_NO: OUTBOUND_NO,
        P_LINE_NO: "",
        P_PROCESS_CD: PROCESS_CD, // 프로세스코드([A]예정, [B]등록)
        P_STATE_DIV: $ND.C_STATE_MIN
    // 상태구분([1]MIN, [2]MAX)
    }, //
    // ServiceCall SuccessCallback
    function(ajaxData) {
        var resultData = $NC.toObject(ajaxData);
        if ($NC.isEmpty(resultData)) {
            alert($NC.getDisplayMsg("JS.LOB02010E1.037", "출고진행상태를 확인하지 못했습니다.\n다시 처리하십시오."));
            return;
        }
        var oMsg = $NC.getOutMessage(resultData);
        if (oMsg != $ND.C_OK) {
            alert(oMsg);
            return;
        }
        if (refRowData.OUTBOUND_STATE != resultData.O_OUTBOUND_STATE) {
            alert($NC.getDisplayMsg("JS.LOB02010E1.038", "[진행상태 : " + resultData.O_OUTBOUND_STATE + "] 데이터가 변경되었습니다.\n다시 조회 후 데이터를 확인하십시오.",
                resultData.O_OUTBOUND_STATE, resultData.O_OUTBOUND_STATE));
            return;
        }

        // 디테일 데이터 재조회 후 처리, 다른 사용자에 의해 변경될 수 있음
        $NC.clearGridData(G_GRDDETAILB);
        G_GRDDETAILB.queryParams = {
            P_CENTER_CD: refRowData.CENTER_CD,
            P_BU_CD: refRowData.BU_CD,
            P_ORDER_DATE: refRowData.ORDER_DATE,
            P_ORDER_NO: refRowData.ORDER_NO,
            P_OUTBOUND_DATE: refRowData.OUTBOUND_DATE,
            P_OUTBOUND_NO: refRowData.OUTBOUND_NO
        };
        // 데이터 조회, Synchronize
        var serviceCallError = false;
        $NC.serviceCallAndWait("/LOB02010E0/getDataSet.do", $NC.getGridParams(G_GRDDETAILB), onGetDetailB, function(subAjaxData) {
            $NC.onError(subAjaxData);
            serviceCallError = true;
        });
        if (serviceCallError) {
            return;
        }

        var dsDetail = G_GRDDETAILB.data.getItems();
        if (dsDetail.length == 0) {
            alert($NC.getDisplayMsg("JS.LOB02010E1.039", "등록/수정할 데이터가 존재하지 않습니다. 다시 조회 후 데이터를 확인하십시오."));
            return;
        }

        var CENTER_CD = $NC.getValue("#cboQCenter_Cd");
        var CENTER_CD_F = $NC.getValueCombo("#cboQCenter_Cd", "F");
        var BU_CD = $NC.getValue("#edtQBu_Cd");
        var BU_NM = $NC.getValue("#edtQBu_Nm");
        var CUST_CD = $NC.getValue("#edtQCust_Cd");

        $NC.showProgramSubPopup({
            PROGRAM_ID: "LOB02011P1",
            PROGRAM_NM: $NC.getDisplayMsg("JS.LOB02011P1.001", "출고등록/수정"),
            url: "lo/LOB02011P1.html",
            width: 1024,
            height: 600,
            G_PARAMETER: {
                P_PROCESS_CD: PROCESS_CD,
                P_CENTER_CD: CENTER_CD,
                P_CENTER_CD_F: CENTER_CD_F,
                P_BU_CD: BU_CD,
                P_BU_NM: BU_NM,
                P_CUST_CD: CUST_CD,
                P_PROCESS_STATE_FW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM,
                P_PROCESS_STATE_BW: $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CANCEL,
                P_POLICY_LO190: $NC.G_VAR.policyVal.LO190,
                P_POLICY_LO210: $NC.G_VAR.policyVal.LO210,
                P_POLICY_LO212: $NC.G_VAR.policyVal.LO212,
                P_POLICY_LO230: $NC.G_VAR.policyVal.LO230,
                P_POLICY_LO250: $NC.G_VAR.policyVal.LO250,
                P_POLICY_LS210: $NC.G_VAR.policyVal.LS210,
                P_POLICY_LO720: $NC.G_VAR.policyVal.LO720,
                P_MASTER_DS: refRowData,
                P_DETAIL_DS: dsDetail,
                P_PERMISSION: permission
            },
            onOk: function() {
                onSaveB($NC.toJson({
                    RESULT_DATA: $ND.C_OK
                }));
            }
        });
    });
}

function grdDetailBOnGetColumns() {

    var columns = [];
    $NC.setGridColumn(columns, {
        id: "LINE_NO",
        field: "LINE_NO",
        name: "순번",
        resizable: false,
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_CD",
        field: "ITEM_CD",
        name: "상품코드"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_NM",
        field: "ITEM_NM",
        name: "상품명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_SPEC",
        field: "ITEM_SPEC",
        name: "규격"
    });
    $NC.setGridColumn(columns, {
        id: "BRAND_NM",
        field: "BRAND_NM",
        name: "브랜드명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_STATE_F",
        field: "ITEM_STATE_F",
        name: "상태",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_LOT",
        field: "ITEM_LOT",
        name: "LOT번호"
    });
    $NC.setGridColumn(columns, {
        id: "QTY_IN_BOX",
        field: "QTY_IN_BOX",
        name: "입수",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ORDER_QTY",
        field: "ORDER_QTY",
        name: "예정수량",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_QTY",
        field: "ENTRY_QTY",
        name: "등록수량",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_BOX",
        field: "ENTRY_BOX",
        name: "등록BOX",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_EA",
        field: "ENTRY_EA",
        name: "등록EA",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "VALID_DATE",
        field: "VALID_DATE",
        name: "유통기한",
        cssClass: "styCenter",
        initialHidden: true
    });
    $NC.setGridColumn(columns, {
        id: "BATCH_NO",
        field: "BATCH_NO",
        name: "제조배치번호",
        initialHidden: true
    });
    $NC.setGridColumn(columns, {
        id: "LOCATION_CD",
        field: "LOCATION_CD",
        name: "로케이션",
        cssClass: "styCenter"
    });
    $NC.setGridColumn(columns, {
        id: "BOX_WEIGHT",
        field: "BOX_WEIGHT",
        name: "박스중량",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_WEIGHT",
        field: "ENTRY_WEIGHT",
        name: "등록중량",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "MARGIN_RATE",
        field: "MARGIN_RATE",
        name: "마진율",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "SUPPLY_PRICE",
        field: "SUPPLY_PRICE",
        name: "공급단가",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "DC_PRICE",
        field: "DC_PRICE",
        name: "할인단가",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "APPLY_PRICE",
        field: "APPLY_PRICE",
        name: "적용단가",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "SUPPLY_AMT",
        field: "SUPPLY_AMT",
        name: "공급금액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "VAT_AMT",
        field: "VAT_AMT",
        name: "부가세액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "DC_AMT",
        field: "DC_AMT",
        name: "할인금액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "TOTAL_AMT",
        field: "TOTAL_AMT",
        name: "합계금액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_ORDER_DIV_F",
        field: "ITEM_ORDER_DIV_F",
        name: "상품주문유형"
    });
    $NC.setGridColumn(columns, {
        id: "ORDER_LINE_NO",
        field: "ORDER_LINE_NO",
        name: "예정순번",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "BU_LINE_NO",
        field: "BU_LINE_NO",
        name: "전표순번"
    });
    $NC.setGridColumn(columns, {
        id: "BU_KEY",
        field: "BU_KEY",
        name: "전표키"
    });
    $NC.setGridColumn(columns, {
        id: "SO_LINE_NO",
        field: "SO_LINE_NO",
        name: "주문순번"
    });
    $NC.setGridColumn(columns, {
        id: "SO_KEY",
        field: "SO_KEY",
        name: "주문키"
    });
    $NC.setGridColumn(columns, {
        id: "SHORTAGE_DIV_F",
        field: "SHORTAGE_DIV_F",
        name: "미출고사유"
    });
    $NC.setGridColumn(columns, {
        id: "SHORTAGE_COMMENT",
        field: "SHORTAGE_COMMENT",
        name: "미출고사유내역"
    });
    $NC.setGridColumn(columns, {
        id: "REMARK1",
        field: "REMARK1",
        name: "비고"
    });

    return $NC.setGridColumnDefaultFormatter(columns);
}

function grdDetailBOnSetColumns() {

    // 재고 관리 기준 : 2 - 입고일자, 유효일자, 배치번호별 관리
    $NC.setGridColumns(G_GRDDETAILB, [ // 숨김컬럼 세팅
        $NC.G_VAR.policyVal.LS210 != "2" || $NC.G_VAR.policyVal.LO250 != "2" ? "VALID_DATE,BATCH_NO" : ""
    ]);
}

function grdDetailBInitialize() {

    var options = {
        frozenColumn: 3
    };

    // Grid Object, DataView 생성 및 초기화
    $NC.setInitGridObject("#grdDetailB", {
        columns: grdDetailBOnGetColumns(),
        queryId: "LOB02010E1.RS_T1A_DETAIL",
        sortCol: "LINE_NO",
        gridOptions: options
    });

    G_GRDDETAILB.view.onSelectedRowsChanged.subscribe(grdDetailBOnAfterScroll);
}

function grdDetailBOnAfterScroll(e, args) {

    if (!$NC.isGridValidLastRow(G_GRDDETAILB, args.rows, e)) {
        return;
    }
    var row = args.rows[0];

    // 상단 현재로우/총건수 업데이트
    $NC.setGridDisplayRows(G_GRDDETAILB, row + 1);
}

function onGetMasterB(ajaxData) {

    $NC.setInitGridData(G_GRDMASTERB, ajaxData);
    if (!$NC.setInitGridAfterOpen(G_GRDMASTERB, "OUTBOUND_NO", true)) {
        // 디테일 초기화
        $NC.clearGridData(G_GRDDETAILB);

        // 마스터 총수량 초기화
        $NC.setValue("#edtTotal_Order_QtyB");
        $NC.setValue("#edtTotal_Entry_QtyB");
        $NC.setValue("#edtTotal_Rdelivery_CntB");
    } else {
        // 마스터 총수량 세팅
        var rowData = G_GRDMASTERB.data.getItem(0);
        $NC.setValue("#edtTotal_Order_QtyB", $NC.getDisplayNumber(rowData.TOTAL_ORDER_QTY));
        $NC.setValue("#edtTotal_Entry_QtyB", $NC.getDisplayNumber(rowData.TOTAL_ENTRY_QTY));
        $NC.setValue("#edtTotal_Rdelivery_CntB", $NC.getDisplayNumber(rowData.TOTAL_RDELIVERY_CNT));
    }

    // 전표 건수 정보 업데이트
    window.setMasterSummaryInfo();

    // 공통 버튼 활성화
    window.setTopButtons();

    setUserProgramPermissionB();
}

function onGetDetailB(ajaxData) {

    $NC.setInitGridData(G_GRDDETAILB, ajaxData);
    $NC.setInitGridAfterOpen(G_GRDDETAILB);
}

function onSaveB(ajaxData) {

    var resultData = $NC.toObject(ajaxData);
    var oMsg = $NC.getOutMessage(resultData);
    if (oMsg != $ND.C_OK) {
        alert(oMsg);
        return;
    }

    onReinquiryB();
}

function onSaveErrorB(ajaxData) {

    $NC.onError(ajaxData);
    window.setMasterSummaryInfo();
}

function onSuccessB(ajaxData) {

    var resultData = $NC.toObject(ajaxData);
    var oMsg = $NC.getOutMessage(resultData);
    if (oMsg != $ND.C_OK) {
        alert(oMsg);
        // 선택 처리, 오류 메시지 표시 후 재조회
        // return;
    }

    onReinquiryB();
}

function onSaveAcsB(ajaxData) {

    var resultData = $NC.toObject(ajaxData);
    var oMsg = $NC.getOutMessage(resultData);
    if (oMsg != $ND.C_OK) {
        alert(oMsg);
    } else {
        var acsTotal = $NC.toNumber(resultData.O_TOTAL_CNT);
        var acsProcess = $NC.toNumber(resultData.O_PROCESS_CNT);
        var acsError = $NC.toNumber(resultData.O_ERROR_CNT);
        if (resultData.O_ACS_ERROR_MSG == $ND.C_OK) {
            if (acsError > 0) {
                alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "주소정제에 실패한 데이터가 존재합니다. 데이터를 확인하십시오.\n" //
                    + "(전체건수: " + acsTotal + ", 정제호출: " + acsProcess + ", 정제오류: " + acsError + ")", acsTotal, acsProcess, acsError));
            }
        } else {
            alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "주소정제 처리 중 오류가 발생했습니다.\n" //
                + "(전체건수: " + acsTotal + ", 정제호출: " + acsProcess + ", 정제오류: " + acsError + ")", acsTotal, acsProcess, acsError) + "\n"
                + resultData.O_ACS_ERROR_MSG);
        }
    }

    onReinquiryB();
}

function onReinquiryB() {

    $NC.setValue("#edtDelivery_Batch_NmB");
    // 운송차수 콤보 재생성
    window.setDeliveryBatchCombo($ND.C_PROCESS_ENTRY);
    window.setDeliveryBatchCombo($ND.C_PROCESS_ENTRY_BATCH);

    var lastKeyVal = $NC.getGridLastKeyVal(G_GRDMASTERB, {
        selectKey: "OUTBOUND_NO"
    });
    window._Inquiry();
    G_GRDMASTERB.lastKeyVal = lastKeyVal;
}

function setUserProgramPermissionB() {

    var enable = G_GRDMASTERB.data.getLength() > 0;
    var canSave = $NC.getProgramPermission().canSave;

    $NC.setEnable("#btnAcsGetAddress", canSave && enable);
    $NC.setEnable("#cboCarrier_CdB", enable);
    $NC.setEnable("#btnSetCarrierCdB", canSave && enable);
}

function btnAcsGetAddressOnClick() {

    if (G_GRDMASTERB.data.getLength() == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.022", "조회 후 처리하십시오."));
        return;
    }

    if (!$NC.getProgramPermission().canSave) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "해당 프로그램의 저장권한이 없습니다."));
        return;
    }

    if (!confirm($NC.getDisplayMsg("JS.LOB02010E1.XXX", "주소정제 처리하시겠습니까?"))) {
        return;
    }

    if (G_GRDMASTERB.view.getEditorLock().isActive()) {
        G_GRDMASTERB.view.getEditorLock().commitCurrentEdit();
    }

    var CHECK_STATE = $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM;

    var checkedCount = 0;
    var dsMaster = [];
    for (var rIndex = 0, rCount = G_GRDMASTERB.data.getLength(); rIndex < rCount; rIndex++) {
        var rowData = G_GRDMASTERB.data.getItem(rIndex);
        // 선택
        if (rowData.CHECK_YN != $ND.C_YES) {
            continue;
        }
        checkedCount++;
        // 진행상태: 출고예정 상태일 경우만 처리
        if (rowData.OUTBOUND_STATE != CHECK_STATE) {
            continue;
        }
        // CAR_DIV - ATTR01_CD, 차량구분(운영구분) - 택배차일 경우만 처리
        if (rowData.CAR_SUB_CD != "2") {
            continue;
        }
        // 주소정제하는 택배사인 경우만
        if (rowData.ACS_YN != $ND.C_YES) {
            continue;
        }
        // 주소정제를 하지 않았거나 오류일 경우만
        if (rowData.ACS_ERROR_CD == $ND.C_BASE_CD_L1) {
            continue;
        }

        // 운송사 변경 및 주소정제 초기화 값 입력
        dsMaster.push({
            // 출고예정 정보
            P_CENTER_CD: rowData.CENTER_CD,
            P_BU_CD: rowData.BU_CD,
            P_ORDER_DATE: rowData.ORDER_DATE,
            P_ORDER_NO: rowData.ORDER_NO,
            // 주소정제 택배사 정보
            P_HDC_CUST_CD: rowData.HDC_CUST_CD,
            P_CARRIER_CD: rowData.CARRIER_CD,
            P_HDC_DIV: rowData.HDC_DIV
        });
    }

    if (checkedCount == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "주소정제 처리할 데이터를 선택하십시오."));
        return;
    }

    if (dsMaster.length == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "선택한 데이터 중 주소정제 가능한 데이터가 없습니다."));
        return;
    }

    $NC.serviceCall("/LOB02010E0/callAcsGetAddress.do", {
        // 출고예정으로 주소정제
        P_PROCESS_CD: $ND.C_PROCESS_ORDER,
        P_DS_MASTER: dsMaster,
        P_USER_ID: $NC.G_USERINFO.USER_ID
    }, onSaveAcsB, onSaveErrorB, {
        type: 2,
        message: $NC.getDisplayMsg("JS.LOB02010E1.XXX", "주소정제 처리 중 입니다. 잠시만 기다려 주십시오...")
    });
}

function btnSetCarrierCdBOnClick() {

    if (G_GRDMASTERB.data.getLength() == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.022", "조회 후 처리하십시오."));
        return;
    }

    if (!$NC.getProgramPermission().canSave) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "해당 프로그램의 저장권한이 없습니다."));
        return;
    }
    var carrierData = $NC.getComboData("#cboCarrier_CdB", -1);
    if ($NC.isNull(carrierData.CARRIER_CD)) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "변경할 운송사를 선택하십시오."));
        $NC.setFocus("#cboCarrier_CdB");
        return;
    }

    if (!confirm($NC.getDisplayMsg("JS.LOB02010E1.XXX", "운송사를 변경하시겠습니까?"))) {
        return;
    }

    if (G_GRDMASTERB.view.getEditorLock().isActive()) {
        G_GRDMASTERB.view.getEditorLock().commitCurrentEdit();
    }

    var CHECK_STATE = $NC.G_VAR.stateFWBW[$NC.G_VAR.activeView.PROCESS_CD].CONFIRM;

    var checkedCount = 0;
    var dsMaster = [];
    for (var rIndex = 0, rCount = G_GRDMASTERB.data.getLength(); rIndex < rCount; rIndex++) {
        var rowData = G_GRDMASTERB.data.getItem(rIndex);
        // 선택
        if (rowData.CHECK_YN != $ND.C_YES) {
            continue;
        }
        checkedCount++;
        // 진행상태: 출고예정 상태일 경우만 처리
        if (rowData.OUTBOUND_STATE != CHECK_STATE) {
            continue;
        }
        // CAR_DIV - ATTR01_CD, 차량구분(운영구분) - 택배차일 경우만 처리
        // if (rowData.CAR_SUB_CD != "2") {
        // continue;
        // }
        // 현재 운송사와 변경 운송사가 다를 경우만 처리
        if (rowData.CARRIER_CD == carrierData.CARRIER_CD && rowData.HDC_DIV == carrierData.HDC_DIV) {
            continue;
        }

        // 운송사 변경 및 주소정제 초기화 값 입력
        dsMaster.push({
            P_CENTER_CD: rowData.CENTER_CD,
            P_BU_CD: rowData.BU_CD,
            P_ORDER_DATE: rowData.ORDER_DATE,
            P_ORDER_NO: rowData.ORDER_NO,
            P_ACS_ERROR_CD: $ND.C_NO,
            P_ACS_ERROR_MSG: "",
            P_ACS_USER_ID: "",
            P_ACS_DATETIME: "",
            P_ACS_EXEC_TIME: "",
            P_HDC_CUST_CD: carrierData.HDC_CUST_CD || "",
            P_CARRIER_CD: carrierData.CARRIER_CD || "",
            P_HDC_DIV: carrierData.HDC_DIV || "",
            P_CAR_DIV: carrierData.CAR_DIV || "",
            P_WB_NO: "",
            P_CRUD: $ND.C_DV_CRUD_U
        });
    }

    if (checkedCount == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "운송사 변경할 데이터를 선택하십시오."));
        return;
    }

    if (dsMaster.length == 0) {
        alert($NC.getDisplayMsg("JS.LOB02010E1.XXX", "선택한 데이터 중 운송사 변경 가능한 데이터가 없습니다."));
        return;
    }

    $NC.serviceCall("/LOB02010E0/saveOrder.do", {
        P_DS_MASTER: dsMaster,
        P_USER_ID: $NC.G_USERINFO.USER_ID
    }, onSaveB, onSaveErrorB);
}