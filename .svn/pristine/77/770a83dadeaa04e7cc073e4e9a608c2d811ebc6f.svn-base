/**
 * <pre>
 *  ==================================================================================================================================================
 *  프로그램ID         : RIB02011P1
 *  프로그램명         : 반입등록 팝업
 *  프로그램설명       : 반입등록 팝업 화면 Javascript
 *  작성자             : Copyright (c) 2013 ASETEC Corporation. All rights reserved.
 *  작성일자           : 2018-08-16
 *  버전               : 1.0
 * 
 *  --------------------------------------------------------------------------------------------------------------------------------------------------
 *  버전       작성일자      작성자           설명
 *  ---------  ------------  ---------------  --------------------------------------------------------------------------------------------------------
 *  1.0        2018-08-16    ASETEC           신규작성
 *  --------------------------------------------------------------------------------------------------------------------------------------------------
 * 
 *  ==================================================================================================================================================
 * </pre>
 */

/**
 * 화면 초기화 - 화면 로드시 자동 호출 됨
 */
function _Initialize() {

    // 단위화면에서 사용될 일반 전역 변수 정의
    $NC.setGlobalVar({
        autoResizeView: {
            container: "#divDetailView",
            grids: [
                "#grdDetail"
            ],
            exceptHeight: $NC.getViewHeight("#ctrPopupView")
        },
        // 예정이 존재하는 데이터인지...
        ORDER_YN: $ND.C_NO,
        // 마스터 데이터
        masterData: null
    });

    // ================================================================================================================
    // $NC.G_VAR.G_PARAMETER.P_PROCESS_CD
    // N: 신규 등록
    // BP: 등록 수정
    // A : 예정으로 등록
    // ================================================================================================================

    $NC.setInitDatePicker("#dtpInbound_Date");

    $NC.setInitCombo("/WC/getDataSet.do", {
        P_QUERY_ID: "WC.POP_CMCODE",
        P_QUERY_PARAMS: {
            P_COMMON_GRP: "ITEM_STATE",
            P_COMMON_CD: $ND.C_ALL,
            P_ATTR01_CD: "1",
            P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
        }
    }, {
        selector: "#cboItem_State",
        codeField: "COMMON_CD",
        nameField: "COMMON_NM",
        fullNameField: "COMMON_CD_F"
    });

    // 버튼 클릭 이벤트 연결
    $("#btnClose").click(onCancel);
    $("#btnDelivery_Cd").click(showDeliveryPopup);
    $("#btnRDelivery_Cd").click(showRDeliveryPopup);
    $("#btnCar_Cd").click(showCarPopup);
    $("#btnStateSwap").click(btnStateSwapOnClick); // 상품상태 일괄변경 버튼

    $("#btnEntryNew").click(_New);
    $("#btnEntryDelete").click(_Delete);
    $("#btnEntrySave").click(_Save);

    // 그리드 초기화
    grdDetailInitialize();

    // 신규/삭제/저장 버튼 툴팁 세팅
    $NC.setTooltip("#btnEntryNew", $NC.getDisplayMsg("JS.RIB02011P1.001", "신규"));
    $NC.setTooltip("#btnEntryDelete", $NC.getDisplayMsg("JS.RIB02011P1.002", "삭제"));
    $NC.setTooltip("#btnEntrySave", $NC.getDisplayMsg("JS.RIB02011P1.003", "저장"));
}

/**
 * 등록팝업 Open 시 호출 됨
 */
function _OnLoaded() {

    $NC.setValue("#edtCenter_Cd_F", $NC.G_VAR.G_PARAMETER.P_CENTER_CD_F);
    $NC.setValue("#edtBu_Cd", $NC.G_VAR.G_PARAMETER.P_BU_CD);
    $NC.setValue("#edtBu_Nm", $NC.G_VAR.G_PARAMETER.P_BU_NM);
    $NC.setValue("#edtCust_Cd", $NC.G_VAR.G_PARAMETER.P_CUST_CD);

    var INBOUND_DATE;
    // 신규 등록
    if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW) {

        INBOUND_DATE = $NC.getValue("#dtpInbound_Date");
        // 마스터 데이터 세팅
        $NC.G_VAR.masterData = {
            CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
            BU_CD: $NC.G_VAR.G_PARAMETER.P_BU_CD,
            INBOUND_DATE: INBOUND_DATE,
            INBOUND_NO: "",
            INOUT_CD: "",
            INBOUND_STATE: $ND.C_STATE_ENTRY,
            CUST_CD: $NC.G_VAR.G_PARAMETER.P_CUST_CD,
            DELIVERY_CD: "",
            RDELIVERY_CD: "",
            CAR_CD: "",
            CAR_NM: "",
            PLANED_DATETIME: "",
            PALLET_ID_CNT: "",
            DATA_DIV: "00",
            MALL_MSG: "",
            ORDERER_CD: "",
            ORDERER_NM: "",
            ORDERER_TEL: "",
            ORDERER_HP: "",
            ORDERER_EMAIL: "",
            ORDERER_MSG: "",
            SHIPPER_NM: "",
            SHIPPER_TEL: "",
            SHIPPER_HP: "",
            SHIPPER_ZIP_CD: "",
            SHIPPER_ADDR_BASIC: "",
            SHIPPER_ADDR_DETAIL: "",
            REMARK1: "",
            ORDER_DATE: "",
            ORDER_NO: "",
            BU_DATE: "",
            BU_NO: "",
            ORG_BU_NO: "",
            RETURN_TYPE: "",
            BOX_SEQ: "",
            CRUD: $ND.C_DV_CRUD_C
        };

        $NC.setFocus("#edtDelivery_Cd");
    }
    // 예정 -> 등록, 등록 수정
    else {

        var INBOUND_NO;
        var INBOUND_STATE;
        var CRUD;
        var dsMaster = $NC.G_VAR.G_PARAMETER.P_MASTER_DS;
        if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ORDER) {
            INBOUND_DATE = $NC.getValue("#dtpInbound_Date");
            INBOUND_NO = "";
            INBOUND_STATE = $ND.C_STATE_ENTRY;
            CRUD = $ND.C_DV_CRUD_C;
        } else {
            INBOUND_DATE = dsMaster.INBOUND_DATE;
            INBOUND_NO = dsMaster.INBOUND_NO;
            INBOUND_STATE = null;// dsMaster.INBOUND_STATE;
            CRUD = $ND.C_DV_CRUD_R;
            $NC.setValue("#dtpInbound_Date", INBOUND_DATE);
            $NC.setValue("#edtInbound_No", INBOUND_NO);
        }

        // 마스터 데이터 세팅
        $NC.setValue("#edtDelivery_Cd", dsMaster.DELIVERY_CD);
        $NC.setValue("#edtDelivery_Nm", dsMaster.DELIVERY_NM);
        $NC.setValue("#edtRDelivery_Cd", dsMaster.RDELIVERY_CD);
        $NC.setValue("#edtRDelivery_Nm", dsMaster.RDELIVERY_NM);
        $NC.setValue("#edtCar_Cd", dsMaster.CAR_CD);
        $NC.setValue("#edtCar_Nm", dsMaster.CAR_NM);
        $NC.setValue("#edtRemark1", dsMaster.REMARK1);
        $NC.setValue("#edtPallet_Id_Cnt", dsMaster.PALLET_ID_CNT);

        $NC.setValue("#edtOrder_Date", dsMaster.ORDER_DATE);
        $NC.setValue("#edtOrder_No", dsMaster.ORDER_NO);
        $NC.setValue("#edtBu_Date", dsMaster.BU_DATE);
        $NC.setValue("#edtBu_No", dsMaster.BU_NO);

        $NC.G_VAR.masterData = {
            CENTER_CD: dsMaster.CENTER_CD,
            BU_CD: dsMaster.BU_CD,
            INBOUND_DATE: INBOUND_DATE,
            INBOUND_NO: INBOUND_NO,
            INOUT_CD: dsMaster.INOUT_CD,
            INBOUND_STATE: INBOUND_STATE,
            CUST_CD: dsMaster.CUST_CD,
            DELIVERY_CD: dsMaster.DELIVERY_CD,
            DELIVERY_NM: dsMaster.DELIVERY_NM,
            RDELIVERY_CD: dsMaster.RDELIVERY_CD,
            RDELIVERY_NM: dsMaster.RDELIVERY_NM,
            CAR_CD: dsMaster.CAR_CD,
            CAR_NM: dsMaster.CAR_NM,
            PLANED_DATETIME: dsMaster.PLANED_DATETIME,
            PALLET_ID_CNT: dsMaster.PALLET_ID_CNT,
            DATA_DIV: dsMaster.DATA_DIV,
            MALL_MSG: dsMaster.MALL_MSG,
            ORDERER_CD: dsMaster.ORDERER_CD,
            ORDERER_NM: dsMaster.ORDERER_NM,
            ORDERER_TEL: dsMaster.ORDERER_TEL,
            ORDERER_HP: dsMaster.ORDERER_HP,
            ORDERER_EMAIL: dsMaster.ORDERER_EMAIL,
            ORDERER_MSG: dsMaster.ORDERER_MSG,
            SHIPPER_NM: dsMaster.SHIPPER_NM,
            SHIPPER_TEL: dsMaster.SHIPPER_TEL,
            SHIPPER_HP: dsMaster.SHIPPER_HP,
            SHIPPER_ZIP_CD: dsMaster.SHIPPER_ZIP_CD,
            SHIPPER_ADDR_BASIC: dsMaster.SHIPPER_ADDR_BASIC,
            SHIPPER_ADDR_DETAIL: dsMaster.SHIPPER_ADDR_DETAIL,
            REMARK1: dsMaster.REMARK1,
            ORDER_DATE: dsMaster.ORDER_DATE,
            ORDER_NO: dsMaster.ORDER_NO,
            BU_DATE: dsMaster.BU_DATE,
            BU_NO: dsMaster.BU_NO,
            ORG_BU_NO: dsMaster.ORG_BU_NO,
            RETURN_TYPE: dsMaster.RETURN_TYPE,
            BOX_SEQ: dsMaster.BOX_SEQ,
            CRUD: CRUD
        };

        // 디테일 데이터 세팅
        var dsDetail = $NC.G_VAR.G_PARAMETER.P_DETAIL_DS;
        var rowData, newRowData;
        G_GRDDETAIL.data.beginUpdate();
        try {
            for (var rIndex = 0, rCount = dsDetail.length; rIndex < rCount; rIndex++) {
                rowData = $.extend({}, dsDetail[rIndex]);
                if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ORDER) {
                    rowData.INBOUND_DATE = INBOUND_DATE;
                    rowData.INBOUND_NO = INBOUND_NO;
                    rowData.INBOUND_STATE = INBOUND_STATE;
                    rowData.LINE_NO = "";
                    // 반품회수 시 등록수량은 회수수량으로 기본 처리
                    if (dsMaster.RETRIEVE_YN == $ND.C_YES) {
                        rowData.ENTRY_QTY = rowData.RETRIEVE_QTY;
                        rowData.CONFIRM_QTY = rowData.RETRIEVE_QTY;
                        rowData.PUTAWAY_QTY = rowData.RETRIEVE_QTY;
                    } else {
                        rowData.ENTRY_QTY = rowData.ORDER_QTY;
                        rowData.CONFIRM_QTY = rowData.ORDER_QTY;
                        rowData.PUTAWAY_QTY = rowData.ORDER_QTY;
                    }
                } else {
                    rowData.INBOUND_STATE = null;
                }

                newRowData = {
                    CENTER_CD: rowData.CENTER_CD,
                    BU_CD: rowData.BU_CD,
                    INBOUND_DATE: rowData.INBOUND_DATE,
                    INBOUND_NO: rowData.INBOUND_NO,
                    LINE_NO: rowData.LINE_NO,
                    INBOUND_STATE: rowData.INBOUND_STATE,
                    BRAND_CD: rowData.BRAND_CD,
                    BRAND_NM: rowData.BRAND_NM,
                    ITEM_CD: rowData.ITEM_CD,
                    ITEM_NM: rowData.ITEM_NM,
                    ITEM_SPEC: rowData.ITEM_SPEC,
                    ITEM_STATE: rowData.ITEM_STATE,
                    ITEM_STATE_F: rowData.ITEM_STATE_F,
                    ITEM_LOT: rowData.ITEM_LOT,
                    QTY_IN_BOX: rowData.QTY_IN_BOX,
                    VALID_DATE: rowData.VALID_DATE,
                    BATCH_NO: rowData.BATCH_NO,
                    ORDER_QTY: rowData.ORDER_QTY,
                    ENTRY_QTY: rowData.ENTRY_QTY,
                    ENTRY_BOX: rowData.ENTRY_BOX,
                    ENTRY_EA: rowData.ENTRY_EA,
                    CONFIRM_QTY: rowData.CONFIRM_QTY,
                    PUTAWAY_QTY: rowData.PUTAWAY_QTY,
                    BOX_WEIGHT: rowData.BOX_WEIGHT,
                    ENTRY_WEIGHT: rowData.ENTRY_WEIGHT,
                    SUPPLY_PRICE: rowData.SUPPLY_PRICE,
                    DC_PRICE: rowData.DC_PRICE,
                    APPLY_PRICE: rowData.APPLY_PRICE,
                    SUPPLY_AMT: rowData.SUPPLY_AMT,
                    VAT_YN: rowData.VAT_YN,
                    VAT_AMT: rowData.VAT_AMT,
                    DC_AMT: rowData.DC_AMT,
                    TOTAL_AMT: rowData.TOTAL_AMT,
                    DRUG_DIV_D: rowData.DRUG_DIV_D,
                    MEDICATION_DIV_D: rowData.MEDICATION_DIV_D,
                    KEEP_DIV_D: rowData.KEEP_DIV_D,
                    DRUG_CD: rowData.DRUG_CD,
                    RETURN_DIV: rowData.RETURN_DIV,
                    RETURN_DIV_F: rowData.RETURN_DIV_F,
                    RETURN_COMMENT: rowData.RETURN_COMMENT,
                    ORDER_DATE: rowData.ORDER_DATE,
                    ORDER_NO: rowData.ORDER_NO,
                    ORDER_LINE_NO: rowData.ORDER_LINE_NO,
                    BU_DATE: dsMaster.BU_DATE,
                    BU_NO: dsMaster.BU_NO,
                    ORG_BU_NO: dsMaster.ORG_BU_NO,
                    BU_LINE_NO: rowData.BU_LINE_NO,
                    BU_KEY: rowData.BU_KEY,
                    BU_DATETIME: rowData.BU_DATETIME,
                    REMARK1: rowData.REMARK1,
                    SPARE1_NOTE: rowData.SPARE1_NOTE,
                    SPARE2_NOTE: rowData.SPARE2_NOTE,
                    SPARE3_NOTE: rowData.SPARE3_NOTE,
                    SPARE4_NOTE: rowData.SPARE4_NOTE,
                    SPARE5_NOTE: rowData.SPARE5_NOTE,
                    id: $NC.getGridNewRowId(),
                    CRUD: CRUD
                };
                G_GRDDETAIL.data.addItem(newRowData);
            }
        } finally {
            G_GRDDETAIL.data.endUpdate();
        }

        // 예정으로 등록/ 등록수정
        $NC.setEnable("#cboInout_Cd", false);
        $NC.setEnable("#edtDelivery_Cd", false);
        $NC.setEnable("#btnDelivery_Cd", false);
        // 예정으로 등록
        if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ORDER) {
        }
        // 등록수정
        else if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_POPUP) {
            $NC.setEnable("#dtpInbound_Date", false);
        }

        setPalletIdCnt();

        $NC.G_VAR.ORDER_YN = $NC.isNotNull($NC.getValue("#edtOrder_No")) ? $ND.C_YES : $ND.C_NO;
        $NC.setFocus("#edtCar_Cd");
        $NC.setGridSelectRow(G_GRDDETAIL, 0);
    }

    // 반입구분 세팅
    $NC.setInitCombo("/WC/getDataSet.do", {
        P_QUERY_ID: "WC.POP_CMCODE",
        P_QUERY_PARAMS: {
            P_COMMON_GRP: "INOUT_CD",
            P_COMMON_CD: $ND.C_ALL,
            P_ATTR01_CD: $ND.C_INOUT_GRP_E3,
            P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
        }
    }, {
        selector: "#cboInout_Cd",
        codeField: "COMMON_CD",
        nameField: "COMMON_NM",
        fullNameField: "COMMON_CD_F",
        selectOption: $NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW ? "F" : null,
        onComplete: function() {
            if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ENTRY_NEW) {
                $NC.G_VAR.masterData.INOUT_CD = $NC.getValue("#cboInout_Cd");
            } else {
                $NC.setValue("#cboInout_Cd", $NC.G_VAR.masterData.INOUT_CD);
            }
        }
    });

    // [B2B]상품상태 변경 기준에 따른 상태 일괄변경 활성화 처리
    $NC.setEnable("#cboItem_State", $NC.G_VAR.G_PARAMETER.P_POLICY_RI250 == $ND.C_YES);
    $NC.setEnable("#btnStateSwap", $NC.G_VAR.G_PARAMETER.P_POLICY_RI250 == $ND.C_YES);

    // 프로그램 사용 권한 설정
    setUserProgramPermission();
}

/**
 * 화면 리사이즈 Offset 세팅
 */
function _SetResizeOffset() {

}

/**
 * Window Resize Event - Window Size 조정시 호출 됨
 */
function _OnResize(parent, viewWidth, viewHeight) {

}

/**
 * 닫기,취소버튼 클릭 이벤트
 */
function onCancel() {

    $NC.setPopupCloseAction($ND.C_CANCEL);
    $NC.onPopupClose();
}

/**
 * 저장,확인버튼 클릭 이벤트
 */
function onClose() {

    $NC.setPopupCloseAction($ND.C_OK);
    $NC.onPopupClose();
}

/**
 * Input Change Event - Input, Select Change 시 호출 됨
 */
function _OnInputChange(e, view, val) {

    var id = view.prop("id").substr(3).toUpperCase();
    masterDataOnChange(e, {
        view: view,
        col: id,
        val: val
    });
}

/**
 * 조회
 */
function _Inquiry() {

}

/**
 * 신규
 */
function _New() {

    var DELIVERY_CD = $NC.getValue("#edtDelivery_Cd");
    if ($NC.isNull(DELIVERY_CD)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.004", "먼저 배송처 코드를 입력하십시오."));
        $NC.setFocus("#edtDelivery_Cd");
        return;
    }

    var RDELIVERY_CD = $NC.getValue("#edtRDelivery_Cd");
    if ($NC.isNull(RDELIVERY_CD)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.005", "먼저 실배송처 코드를 입력하십시오."));
        $NC.setFocus("#edtRDelivery_Cd");
        return;
    }

    // 마지막 선택 Row Validation 체크
    if (!$NC.isGridValidLastRow(G_GRDDETAIL)) {
        return;
    }

    // 신규 데이터는 CRUD를 "N"으로 하고 데이터 입력 후 다른 Row로 이동하면 "C"로 변경
    var newRowData = {
        CENTER_CD: $NC.G_VAR.masterData.CENTER_CD,
        BU_CD: $NC.G_VAR.masterData.BU_CD,
        INBOUND_DATE: $NC.G_VAR.masterData.INBOUND_DATE,
        INBOUND_NO: $NC.G_VAR.masterData.INBOUND_NO,
        LINE_NO: "",
        INBOUND_STATE: $NC.G_VAR.masterData.INBOUND_STATE || $ND.C_STATE_ENTRY,
        BRAND_CD: "",
        BRAND_NM: "",
        ITEM_CD: "",
        ITEM_NM: "",
        ITEM_SPEC: "",
        ITEM_STATE: $NC.G_VAR.G_PARAMETER.P_POLICY_RI240,
        ITEM_STATE_F: $NC.getGridComboName(G_GRDDETAIL, {
            columnId: "ITEM_STATE_F",
            searchVal: $NC.G_VAR.G_PARAMETER.P_POLICY_RI240,
            dataCodeField: "COMMON_CD",
            dataFullNameField: "COMMON_CD_F"
        }),
        ITEM_LOT: $ND.C_BASE_ITEM_LOT,
        QTY_IN_BOX: 1,
        VALID_DATE: "",
        BATCH_NO: "",
        ORDER_QTY: 0,
        ENTRY_QTY: 0,
        ENTRY_BOX: 0,
        ENTRY_EA: 0,
        CONFIRM_QTY: 0,
        PUTAWAY_QTY: 0,
        BOX_WEIGHT: 0,
        ENTRY_WEIGHT: 0,
        SUPPLY_PRICE: 0,
        DC_PRICE: 0,
        APPLY_PRICE: 0,
        SUPPLY_AMT: 0,
        VAT_AMT: 0,
        DC_AMT: 0,
        TOTAL_AMT: 0,
        ORDER_DATE: $NC.G_VAR.masterData.ORDER_DATE,
        ORDER_NO: $NC.G_VAR.masterData.ORDER_NO,
        ORDER_LINE_NO: "",
        RETURN_DIV: $ND.C_REASON_ETC_DIV,
        RETURN_DIV_F: $NC.getGridComboName(G_GRDDETAIL, {
            columnId: "RETURN_DIV_F",
            searchVal: $ND.C_REASON_ETC_DIV,
            dataCodeField: "COMMON_CD",
            dataFullNameField: "COMMON_CD_F"
        }),
        RETURN_COMMENT: "",
        BU_DATE: $NC.G_VAR.masterData.BU_DATE,
        BU_NO: $NC.G_VAR.masterData.BU_NO,
        ORG_BU_NO: $NC.G_VAR.masterData.ORG_BU_NO,
        BU_LINE_NO: "",
        BU_KEY: "",
        REMARK1: "",
        VAT_YN: $ND.C_NO,
        id: $NC.getGridNewRowId(),
        CRUD: $ND.C_DV_CRUD_N
    };

    // 신규 데이터 생성 및 이벤트 호출
    $NC.newGridRowData(G_GRDDETAIL, newRowData);
}

/**
 * 저장
 */
function _Save() {

    if (G_GRDDETAIL.data.getLength() == 0) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.006", "저장할 데이터가 없습니다."));
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.CENTER_CD)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.007", "물류센터가 지정되어 있지 않습니다. 다시 작업하십시오."));
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.BU_CD)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.008", "사업부가 지정되어 있지 않습니다. 다시 작업하십시오."));
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.INBOUND_DATE)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.009", "먼저 반입일자를 입력하십시오."));
        $NC.setFocus("#dtpInbound_Date");
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.INOUT_CD)) {
        $NC.G_VAR.masterData.INOUT_CD = $NC.getValue("#cboInout_Cd");
    }

    if ($NC.isNull($NC.G_VAR.masterData.INOUT_CD)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.010", "먼저 반입구분을 선택하십시오."));
        $NC.setFocus("#cboInout_Cd");
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.DELIVERY_CD)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.004", "먼저 배송처 코드를 입력하십시오."));
        $NC.setFocus("#edtDelivery_Cd");
        return;
    }

    if ($NC.isNull($NC.G_VAR.masterData.RDELIVERY_CD)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.005", "먼저 실배송처 코드를 입력하십시오."));
        $NC.setFocus("#edtRDelivery_Cd");
        return;
    }

    // 마지막 선택 Row Validation 체크
    if (!$NC.isGridValidLastRow(G_GRDDETAIL)) {
        return;
    }

    var dsD = [ ];
    var dsCU = [ ];
    // 필터링 된 데이터라 전체 데이터를 기준으로 처리
    var dsTarget = G_GRDDETAIL.data.getItems();
    var dsDetail, rowData;
    for (var rIndex = 0, rCount = dsTarget.length; rIndex < rCount; rIndex++) {
        rowData = dsTarget[rIndex];
        if (rowData.CRUD == $ND.C_DV_CRUD_R) {
            continue;
        } else if (rowData.CRUD == $ND.C_DV_CRUD_D) {
            dsDetail = dsD;
        } else {
            dsDetail = dsCU;
        }
        dsDetail.push({
            P_CENTER_CD: $NC.G_VAR.masterData.CENTER_CD,
            P_BU_CD: $NC.G_VAR.masterData.BU_CD,
            P_INBOUND_DATE: $NC.G_VAR.masterData.INBOUND_DATE,
            P_INBOUND_NO: $NC.G_VAR.masterData.INBOUND_NO,
            P_LINE_NO: rowData.LINE_NO,
            P_INBOUND_STATE: rowData.INBOUND_STATE,
            P_BRAND_CD: rowData.BRAND_CD,
            P_ITEM_CD: rowData.ITEM_CD,
            P_ITEM_STATE: rowData.ITEM_STATE,
            P_ITEM_LOT: rowData.ITEM_LOT,
            P_VALID_DATE: rowData.VALID_DATE,
            P_BATCH_NO: rowData.BATCH_NO,
            P_ORDER_QTY: rowData.ORDER_QTY,
            P_ENTRY_QTY: rowData.ENTRY_QTY,
            P_CONFIRM_QTY: rowData.CONFIRM_QTY,
            P_PUTAWAY_QTY: rowData.PUTAWAY_QTY,
            P_SUPPLY_PRICE: rowData.SUPPLY_PRICE,
            P_DC_PRICE: rowData.DC_PRICE,
            P_APPLY_PRICE: rowData.APPLY_PRICE,
            P_SUPPLY_AMT: rowData.SUPPLY_AMT,
            P_VAT_AMT: rowData.VAT_AMT,
            P_VAT_YN: rowData.VAT_YN,
            P_DC_AMT: rowData.DC_AMT,
            P_TOTAL_AMT: rowData.TOTAL_AMT,
            P_RETURN_DIV: rowData.RETURN_DIV,
            P_RETURN_COMMENT: rowData.RETURN_COMMENT,
            P_ORDER_DATE: rowData.ORDER_DATE,
            P_ORDER_NO: rowData.ORDER_NO,
            P_ORDER_LINE_NO: rowData.ORDER_LINE_NO,
            P_BU_DATE: rowData.BU_DATE,
            P_BU_NO: rowData.BU_NO,
            P_ORG_BU_NO: rowData.ORG_BU_NO,
            P_BU_LINE_NO: rowData.BU_LINE_NO,
            P_BU_KEY: rowData.BU_KEY,
            P_REMARK1: rowData.REMARK1,
            P_SPARE1_NOTE: rowData.SPARE1_NOTE,
            P_SPARE2_NOTE: rowData.SPARE2_NOTE,
            P_SPARE3_NOTE: rowData.SPARE3_NOTE,
            P_SPARE4_NOTE: rowData.SPARE4_NOTE,
            P_SPARE5_NOTE: rowData.SPARE5_NOTE,
            P_CRUD: rowData.CRUD
        });
    }
    dsDetail = dsD.concat(dsCU);

    if ($NC.G_VAR.masterData.CRUD == $ND.C_DV_CRUD_R && dsDetail.length == 0) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.011", "수정 후 저장하십시오."));
        return;
    }

    $NC.serviceCall("/RIB02010E0/save.do", {
        P_DS_MASTER: {
            P_CENTER_CD: $NC.G_VAR.masterData.CENTER_CD,
            P_BU_CD: $NC.G_VAR.masterData.BU_CD,
            P_INBOUND_DATE: $NC.G_VAR.masterData.INBOUND_DATE,
            P_INBOUND_NO: $NC.G_VAR.masterData.INBOUND_NO,
            P_INOUT_CD: $NC.G_VAR.masterData.INOUT_CD,
            P_INBOUND_STATE: $NC.G_VAR.masterData.INBOUND_STATE,
            P_CUST_CD: $NC.G_VAR.masterData.CUST_CD,
            P_DELIVERY_CD: $NC.G_VAR.masterData.DELIVERY_CD,
            P_RDELIVERY_CD: $NC.G_VAR.masterData.RDELIVERY_CD,
            P_CAR_CD: $NC.G_VAR.masterData.CAR_CD,
            P_PLANED_DATETIME: $NC.G_VAR.masterData.PLANED_DATETIME,
            P_PALLET_ID_CNT: $NC.G_VAR.masterData.PALLET_ID_CNT,
            P_DATA_DIV: $NC.G_VAR.masterData.DATA_DIV,
            P_MALL_MSG: $NC.G_VAR.masterData.MALL_MSG,
            P_ORDERER_CD: $NC.G_VAR.masterData.ORDERER_CD,
            P_ORDERER_NM: $NC.G_VAR.masterData.ORDERER_NM,
            P_ORDERER_TEL: $NC.G_VAR.masterData.ORDERER_TEL,
            P_ORDERER_HP: $NC.G_VAR.masterData.ORDERER_HP,
            P_ORDERER_EMAIL: $NC.G_VAR.masterData.ORDERER_EMAIL,
            P_ORDERER_MSG: $NC.G_VAR.masterData.ORDERER_MSG,
            P_SHIPPER_NM: $NC.G_VAR.masterData.SHIPPER_NM,
            P_SHIPPER_TEL: $NC.G_VAR.masterData.SHIPPER_TEL,
            P_SHIPPER_HP: $NC.G_VAR.masterData.SHIPPER_HP,
            P_SHIPPER_ZIP_CD: $NC.G_VAR.masterData.SHIPPER_ZIP_CD,
            P_SHIPPER_ADDR_BASIC: $NC.G_VAR.masterData.SHIPPER_ADDR_BASIC,
            P_SHIPPER_ADDR_DETAIL: $NC.G_VAR.masterData.SHIPPER_ADDR_DETAIL,
            P_REMARK1: $NC.G_VAR.masterData.REMARK1,
            P_ORDER_DATE: $NC.G_VAR.masterData.ORDER_DATE,
            P_ORDER_NO: $NC.G_VAR.masterData.ORDER_NO,
            P_BU_DATE: $NC.G_VAR.masterData.BU_DATE,
            P_BU_NO: $NC.G_VAR.masterData.BU_NO,
            P_ORG_BU_NO: $NC.G_VAR.masterData.ORG_BU_NO,
            P_RETURN_TYPE: $NC.G_VAR.masterData.RETURN_TYPE,
            P_BOX_SEQ: $NC.G_VAR.masterData.BOX_SEQ,
            P_CRUD: $NC.G_VAR.masterData.CRUD
        },
        P_DS_DETAIL: dsDetail,
        P_PROCESS_CD: $NC.G_VAR.G_PARAMETER.P_PROCESS_CD,
        P_PROCESS_STATE_BW: $NC.G_VAR.G_PARAMETER.P_PROCESS_STATE_BW,
        P_PROCESS_STATE_FW: $NC.G_VAR.G_PARAMETER.P_PROCESS_STATE_FW,
        P_USER_ID: $NC.G_USERINFO.USER_ID
    }, onSave);
}

/**
 * 삭제
 */
function _Delete() {

    if (G_GRDDETAIL.data.getLength() == 0 || $NC.isNull(G_GRDDETAIL.lastRow)) {
        alert($NC.getDisplayMsg("JS.RIB02011P1.012", "삭제할 데이터가 없습니다."));
        return;
    }

    var rowData = G_GRDDETAIL.data.getItem(G_GRDDETAIL.lastRow);
    // 신규 데이터일 경우 Grid 데이터만 삭제, 그외 CRUD로 "D"로 변경
    $NC.deleteGridRowData(G_GRDDETAIL, rowData, true);
}

function masterDataOnChange(e, args) {

    switch (args.col) {
        case "DELIVERY_CD":
            $NP.onDeliveryChange(args.val, {
                P_CUST_CD: $NC.getValue("#edtCust_Cd"),
                P_DELIVERY_CD: args.val,
                P_DELIVERY_DIV: $ND.C_ALL,
                P_VIEW_DIV: "1"
            }, onDeliveryPopup);
            return;
        case "RDELIVERY_CD":
            $NP.onDeliveryChange(args.val, {
                P_CUST_CD: $NC.getValue("#edtCust_Cd"),
                P_DELIVERY_CD: args.val,
                P_DELIVERY_DIV: $ND.C_ALL,
                P_VIEW_DIV: "1"
            }, onRDeliveryPopup);
            return;
        case "CAR_CD":
            $NP.onCarChange(args.val, {
                P_CENTER_CD: $NC.G_VAR.G_PARAMETER.P_CENTER_CD,
                P_CAR_CD: args.val,
                P_VIEW_DIV: "1"
            }, onCarPopup);
            return;
        case "INOUT_CD":
            $NC.G_VAR.masterData.INOUT_CD = args.val;
            break;
        case "INBOUND_DATE":
            $NC.setValueDatePicker(args.view, args.val, $NC.getDisplayMsg("JS.RIB02011P1.013", "반입일자를 정확히 입력하십시오."));
            $NC.G_VAR.masterData.INBOUND_DATE = $NC.getValue(args.view);
            break;
        case "REMARK1":
            $NC.G_VAR.masterData.REMARK1 = args.val;
            break;
        case "PALLET_ID_CNT":
            $NC.G_VAR.masterData.PALLET_ID_CNT = args.val;
            break;
    }
    if ($NC.G_VAR.masterData.CRUD == $ND.C_DV_CRUD_R) {
        $NC.G_VAR.masterData.CRUD = $ND.C_DV_CRUD_U;
    }
}

function grdDetailOnGetColumns() {

    var columns = [ ];
    $NC.setGridColumn(columns, {
        id: "LINE_NO",
        field: "LINE_NO",
        name: "순번",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_CD",
        field: "ITEM_CD",
        name: "상품코드",
        editor: Slick.Editors.Popup,
        editorOptions: {
            isKeyField: true,
            onPopup: grdDetailOnPopup
        }
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_NM",
        field: "ITEM_NM",
        name: "상품명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_SPEC",
        field: "ITEM_SPEC",
        name: "규격"
    });
    $NC.setGridColumn(columns, {
        id: "BRAND_NM",
        field: "BRAND_NM",
        name: "브랜드명"
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_STATE_F",
        field: "ITEM_STATE_F",
        name: "상태",
        cssClass: "styCenter",
        editor: Slick.Editors.ComboBox,
        editorOptions: $NC.getGridComboEditorOptions("/WC/getDataSet.do", {
            P_QUERY_ID: "WC.POP_CMCODE",
            P_QUERY_PARAMS: {
                P_COMMON_GRP: "ITEM_STATE",
                P_COMMON_CD: $ND.C_ALL,
                P_ATTR01_CD: "1",
                P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
            }
        }, {
            codeField: "ITEM_STATE",
            dataCodeField: "COMMON_CD",
            dataFullNameField: "COMMON_CD_F",
            isKeyField: true
        })
    });
    $NC.setGridColumn(columns, {
        id: "ITEM_LOT",
        field: "ITEM_LOT",
        name: "LOT번호",
        editor: Slick.Editors.Text,
        editorOptions: {
            isKeyField: true
        }
    });
    $NC.setGridColumn(columns, {
        id: "QTY_IN_BOX",
        field: "QTY_IN_BOX",
        name: "입수",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ORDER_QTY",
        field: "ORDER_QTY",
        name: "예정수량",
        cssClass: "styRight",
        // 기본 Formatter 자동 지정이 아닌 임의 지정
        formatter: Slick.Formatters.Number,
        formatterOptions: $NC.getGridNumberColumnOptions("FLOAT_QTY")
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_QTY",
        field: "ENTRY_QTY",
        name: "등록수량",
        cssClass: "styRight",
        // 기본 editorOptions 자동 지정이 아닌 임의 지정
        editor: Slick.Editors.Number,
        editorOptions: $NC.getGridNumberColumnOptions({
            formatterType: "FLOAT_QTY",
            isKeyField: true
        })
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_BOX",
        field: "ENTRY_BOX",
        name: "등록BOX",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_EA",
        field: "ENTRY_EA",
        name: "등록EA",
        cssClass: "styRight",
        // 기본 Formatter 자동 지정이 아닌 임의 지정
        formatter: Slick.Formatters.Number,
        formatterOptions: $NC.getGridNumberColumnOptions("FLOAT_QTY")
    });
    $NC.setGridColumn(columns, {
        id: "RETURN_DIV_F",
        field: "RETURN_DIV_F",
        name: "반품사유구분",
        editor: Slick.Editors.ComboBox,
        editorOptions: $NC.getGridComboEditorOptions("/WC/getDataSet.do", {
            P_QUERY_ID: "WC.POP_CMCODE",
            P_QUERY_PARAMS: {
                P_COMMON_GRP: "RI.RETURN_DIV",
                P_COMMON_CD: $ND.C_ALL,
                P_VIEW_DIV: "1" // 1:등록팝업, 2:조회팝업
            }
        }, {
            codeField: "RETURN_DIV",
            dataCodeField: "COMMON_CD",
            dataFullNameField: "COMMON_CD_F",
            isKeyField: true
        })
    });
    $NC.setGridColumn(columns, {
        id: "RETURN_COMMENT",
        field: "RETURN_COMMENT",
        name: "반품사유내역",
        editor: Slick.Editors.Text
    });
    // 정책에 따른 컬럼 표시
    if ($NC.G_VAR.G_PARAMETER.P_POLICY_LS210 == "2") {
        $NC.setGridColumn(columns, {
            id: "VALID_DATE",
            field: "VALID_DATE",
            name: "유통기한",
            cssClass: "styCenter",
            editor: Slick.Editors.Date
        });
        $NC.setGridColumn(columns, {
            id: "BATCH_NO",
            field: "BATCH_NO",
            name: "제조배치번호",
            editor: Slick.Editors.Text
        });
    }
    $NC.setGridColumn(columns, {
        id: "BOX_WEIGHT",
        field: "BOX_WEIGHT",
        name: "박스중량",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "ENTRY_WEIGHT",
        field: "ENTRY_WEIGHT",
        name: "등록중량",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "SUPPLY_PRICE",
        field: "SUPPLY_PRICE",
        name: "공급단가",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "DC_PRICE",
        field: "DC_PRICE",
        name: "할인단가",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "APPLY_PRICE",
        field: "APPLY_PRICE",
        name: "적용단가",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "SUPPLY_AMT",
        field: "SUPPLY_AMT",
        name: "공급금액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "VAT_AMT",
        field: "VAT_AMT",
        name: "부가세액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "DC_AMT",
        field: "DC_AMT",
        name: "할인금액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "TOTAL_AMT",
        field: "TOTAL_AMT",
        name: "합계금액",
        cssClass: "styRight"
    });
    $NC.setGridColumn(columns, {
        id: "DRUG_DIV_D",
        field: "DRUG_DIV_D",
        name: "약품구분"
    });
    $NC.setGridColumn(columns, {
        id: "MEDICATION_DIV_D",
        field: "MEDICATION_DIV_D",
        name: "투여구분"
    });
    $NC.setGridColumn(columns, {
        id: "KEEP_DIV_D",
        field: "KEEP_DIV_D",
        name: "보관구분"
    });
    $NC.setGridColumn(columns, {
        id: "DRUG_CD",
        field: "DRUG_CD",
        name: "보험코드"
    });
    $NC.setGridColumn(columns, {
        id: "BU_LINE_NO",
        field: "BU_LINE_NO",
        name: "전표순번"
    });
    $NC.setGridColumn(columns, {
        id: "BU_KEY",
        field: "BU_KEY",
        name: "전표키"
    });
    $NC.setGridColumn(columns, {
        id: "REMARK1",
        field: "REMARK1",
        name: "비고",
        editor: Slick.Editors.Text
    });

    return $NC.setGridColumnDefaultFormatter(columns);

}

function grdDetailInitialize() {

    var options = {
        editable: true,
        autoEdit: true,
        frozenColumn: 3,
        specialRow: {
            compareFn: function(specialRow, rowData, column, row, cell, colspan) {
                if (rowData.ORDER_QTY > rowData.ENTRY_QTY) {
                    return "styUnder";
                }
            }
        }
    };

    // Grid Object, DataView 생성 및 초기화
    $NC.setInitGridObject("#grdDetail", {
        columns: grdDetailOnGetColumns(),
        queryId: null,
        sortCol: "LINE_NO",
        gridOptions: options,
        canExportExcel: false,
        onFilter: grdDetailOnFilter
    });

    G_GRDDETAIL.view.onSelectedRowsChanged.subscribe(grdDetailOnAfterScroll);
    G_GRDDETAIL.view.onBeforeEditCell.subscribe(grdDetailOnBeforeEditCell);
    G_GRDDETAIL.view.onCellChange.subscribe(grdDetailOnCellChange);

}

/**
 * grdDetail 데이터 필터링 이벤트
 */
function grdDetailOnFilter(item) {

    return item.CRUD != $ND.C_DV_CRUD_D;
}

function grdDetailOnNewRecord(args) {

    $NC.setFocusGrid(G_GRDDETAIL, args.row, "ITEM_CD", true);
}

function grdDetailOnBeforeEditCell(e, args) {

    var rowData = args.item;
    var isNew = (rowData.CRUD == $ND.C_DV_CRUD_N || rowData.CRUD == $ND.C_DV_CRUD_C) && $NC.isNull(rowData.ORDER_LINE_NO);
    switch (args.column.id) {
        case "ITEM_CD":
        case "ITEM_LOT":
            return isNew;
        case "ITEM_STATE_F":
            // [B2B]상품상태 변경 기준 - 상품상태 변경 가능
            return $NC.G_VAR.G_PARAMETER.P_POLICY_RI250 == $ND.C_YES || $NC.G_VAR.G_PARAMETER.P_POLICY_RI250 == $ND.C_NO && isNew;
        case "VALID_DATE":
        case "BATCH_NO":
            // 재고관리 기준 - 입고일자, 유효일자, 배치번호별 관리
            return $NC.G_VAR.G_PARAMETER.P_POLICY_LS210 == "2";
    }

    return true;
}

function grdDetailOnCellChange(e, args) {

    var rowData = args.item;
    switch (G_GRDDETAIL.view.getColumnId(args.cell)) {
        case "ITEM_CD":
            $NP.onItemChange(rowData.ITEM_CD, {
                P_BU_CD: rowData.BU_CD,
                P_ITEM_CD: rowData.ITEM_CD,
                P_VIEW_DIV: "1",
                P_DEPART_CD: $ND.C_ALL,
                P_LINE_CD: $ND.C_ALL,
                P_CLASS_CD: $ND.C_ALL
            }, onItemPopup);
            return;
        case "ENTRY_QTY":
            var CHECK_QTY = $NC.isNull(rowData.ORDER_LINE_NO) ? 1 : 0;
            var ENTRY_QTY = Number(rowData.ENTRY_QTY) || 0;
            if (ENTRY_QTY < CHECK_QTY) {
                alert($NC.getDisplayMsg("JS.RIB02011P1.014", "등록수량이 " + CHECK_QTY + "보다 작을 수 없습니다.", CHECK_QTY));
                rowData.ENTRY_QTY = args.oldItem.ENTRY_QTY;
                $NC.setFocusGrid(G_GRDDETAIL, args.row, args.cell, true);
                break;
            }
            rowData.ENTRY_QTY = ENTRY_QTY;
            rowData = grdDetailOnCalc(rowData);
            break;
        case "VALID_DATE":
            if ($NC.isNotNull(rowData.VALID_DATE)) {
                if (!$NC.isDate(rowData.VALID_DATE)) {
                    alert($NC.getDisplayMsg("JS.RIB02011P1.015", "유통기한을 정확히 입력하십시오."));
                    rowData.VALID_DATE = "";
                    $NC.setFocusGrid(G_GRDDETAIL, args.row, args.cell, true);
                } else {
                    rowData.VALID_DATE = $NC.getDate(rowData.VALID_DATE);
                }
            }
            break;
    }

    // 마지막 선택 Row 수정 데이터 반영 및 상태 변경
    $NC.setGridApplyChange(G_GRDDETAIL, rowData);
}

function grdDetailOnBeforePost(row) {

    // Validation 대상인지 체크, 아니면 True로 리턴
    if (!$NC.isGridValidPostRow(G_GRDDETAIL, row, "ITEM_CD")) {
        return true;
    }

    var rowData = G_GRDDETAIL.data.getItem(row);
    if (rowData.CRUD != $ND.C_DV_CRUD_R) {
        if ($NC.isNull(rowData.ITEM_CD) || $NC.isNull(rowData.ITEM_NM)) {
            alert($NC.getDisplayMsg("JS.RIB02011P1.016", "상품코드를 입력하십시오."));
            $NC.setFocusGrid(G_GRDDETAIL, row, "ITEM_CD", true);
            return false;
        }
        if ($NC.isNull(rowData.ITEM_STATE)) {
            alert($NC.getDisplayMsg("JS.RIB02011P1.017", "상태를 선택하십시오."));
            $NC.setFocusGrid(G_GRDDETAIL, row, "ITEM_STATE", true);
            return false;
        }
        if ($NC.isNull(rowData.ITEM_LOT)) {
            alert($NC.getDisplayMsg("JS.RIB02011P1.018", "LOT번호를 입력하십시오."));
            $NC.setFocusGrid(G_GRDDETAIL, row, "ITEM_LOT", true);
            return false;
        }
        if ($NC.isNull(rowData.ENTRY_QTY)) {
            alert($NC.getDisplayMsg("JS.RIB02011P1.019", "등록수량을 입력하십시오."));
            $NC.setFocusGrid(G_GRDDETAIL, row, "ENTRY_QTY", true);
            return false;
        }
    }

    // 신규 데이터 업데이트, N -> C
    $NC.setGridApplyPost(G_GRDDETAIL, rowData);
    return true;
}

function grdDetailOnAfterScroll(e, args) {

    if (!$NC.isGridValidLastRow(G_GRDDETAIL, args.rows, e)) {
        return;
    }
    var row = args.rows[0];

    // 상단 현재로우/총건수 업데이트
    $NC.setGridDisplayRows(G_GRDDETAIL, row + 1);
}

function grdDetailOnPopup(e, args) {

    var rowData = args.item;
    switch (args.column.id) {
        case "ITEM_CD":
            $NP.showItemPopup({
                P_BU_CD: rowData.BU_CD,
                P_ITEM_CD: $ND.C_ALL,
                P_VIEW_DIV: "1",
                P_DEPART_CD: $ND.C_ALL,
                P_LINE_CD: $ND.C_ALL,
                P_CLASS_CD: $ND.C_ALL
            }, onItemPopup, function() {
                $NC.setFocusGrid(G_GRDDETAIL, G_GRDDETAIL.lastRow, "ITEM_CD", true, true);
            });
            break;
    }
}

function grdDetailOnCalc(rowData, entryQty) {

    if ($NC.isNotNull(entryQty)) {
        rowData.ENTRY_QTY = Number(entryQty);
    }

    rowData.ENTRY_BOX = $NC.getBBox(rowData.ENTRY_QTY, rowData.QTY_IN_BOX);
    rowData.ENTRY_EA = $NC.getBEa(rowData.ENTRY_QTY, rowData.QTY_IN_BOX);
    rowData.ENTRY_WEIGHT = $NC.getWeight(rowData.ENTRY_QTY, rowData.QTY_IN_BOX, rowData.BOX_WEIGHT);

    var calcParams = {
        ITEM_PRICE: rowData.SUPPLY_PRICE,// 매입단가 또는 공급단가
        APPLY_PRICE: rowData.APPLY_PRICE,// 적용단가
        ITEM_QTY: rowData.ENTRY_QTY,// 상품수량
        ITEM_AMT: rowData.SUPPLY_AMT,// 매입금액 또는 공급금액
        VAT_YN: rowData.VAT_YN,// 과세여부가 NULL일 경우는 부가세금액이 있는지로 체크
        VAT_AMT: rowData.VAT_AMT,// 부가세
        DC_AMT: rowData.DC_AMT,// 할인금액
        TOTAL_AMT: rowData.TOTAL_AMT,// 합계금액
        POLICY_VAL: $NC.G_VAR.G_PARAMETER.P_POLICY_RI190
    };

    rowData.SUPPLY_AMT = $NC.getItemAmt(calcParams);
    rowData.VAT_AMT = $NC.getVatAmt(calcParams);
    rowData.TOTAL_AMT = $NC.getTotalAmt(calcParams);

    rowData.CONFIRM_QTY = rowData.ENTRY_QTY;
    rowData.PUTAWAY_QTY = rowData.ENTRY_QTY;

    return rowData;
}

function showDeliveryPopup() {

    var CUST_CD = $NC.getValue("#edtCust_Cd");

    $NP.showDeliveryPopup({
        queryParams: {
            P_CUST_CD: CUST_CD,
            P_DELIVERY_CD: $ND.C_ALL,
            P_DELIVERY_DIV: $ND.C_ALL,
            P_VIEW_DIV: "1"
        }
    }, onDeliveryPopup, function() {
        $NC.setFocus("#edtDelivery_Cd", true);
    });
}

function onDeliveryPopup(resultInfo) {

    if ($NC.isNotNull(resultInfo)) {
        $NC.G_VAR.masterData.DELIVERY_CD = resultInfo.DELIVERY_CD;
        $NC.setValue("#edtDelivery_Cd", resultInfo.DELIVERY_CD);
        $NC.setValue("#edtDelivery_Nm", resultInfo.DELIVERY_NM);
        if ($NC.isNull($NC.G_VAR.masterData.RDELIVERY_CD) || !$NC.isVisible("#edtRDelivery_Cd")) {
            $NC.G_VAR.masterData.RDELIVERY_CD = resultInfo.DELIVERY_CD;
            $NC.setValue("#edtRDelivery_Cd", resultInfo.DELIVERY_CD);
            $NC.setValue("#edtRDelivery_Nm", resultInfo.DELIVERY_NM);
        }
        $NC.setFocus("#edtCar_Cd", true);

    } else {
        $NC.G_VAR.masterData.DELIVERY_CD = "";
        $NC.setValue("#edtDelivery_Cd");
        $NC.setValue("#edtDelivery_Nm");
        if (!$NC.isVisible("#edtRDelivery_Cd")) {
            $NC.G_VAR.masterData.RDELIVERY_CD = "";
            $NC.setValue("#edtRDelivery_Cd");
            $NC.setValue("#edtRDelivery_Nm");
        }
        $NC.setFocus("#edtDelivery_Cd", true);
    }
    if ($NC.G_VAR.masterData.CRUD == $ND.C_DV_CRUD_R) {
        $NC.G_VAR.masterData.CRUD = $ND.C_DV_CRUD_U;
    }
}

function showRDeliveryPopup() {

    var CUST_CD = $NC.getValue("#edtCust_Cd");

    $NP.showDeliveryPopup({
        queryParams: {
            P_CUST_CD: CUST_CD,
            P_DELIVERY_CD: $ND.C_ALL,
            P_DELIVERY_DIV: $ND.C_ALL,
            P_VIEW_DIV: "1"
        }
    }, onRDeliveryPopup, function() {
        $NC.setFocus("#edtRDelivery_Cd", true);
    });
}

function onRDeliveryPopup(resultInfo) {

    if ($NC.isNotNull(resultInfo)) {
        $NC.G_VAR.masterData.RDELIVERY_CD = resultInfo.DELIVERY_CD;
        $NC.setValue("#edtRDelivery_Cd", resultInfo.DELIVERY_CD);
        $NC.setValue("#edtRDelivery_Nm", resultInfo.DELIVERY_NM);
        $NC.setFocus("#edtCar_Cd", true);
    } else {
        $NC.G_VAR.masterData.RDELIVERY_CD = "";
        $NC.setValue("#edtRDelivery_Cd");
        $NC.setValue("#edtRDelivery_Nm");
        $NC.setFocus("#edtRDelivery_Cd", true);
    }
    if ($NC.G_VAR.masterData.CRUD == $ND.C_DV_CRUD_R) {
        $NC.G_VAR.masterData.CRUD = $ND.C_DV_CRUD_U;
    }
}

function showCarPopup() {

    var CENTER_CD = $NC.G_VAR.G_PARAMETER.P_CENTER_CD;

    $NP.showCarPopup({
        P_CENTER_CD: CENTER_CD,
        P_CAR_CD: $ND.C_ALL,
        P_VIEW_DIV: "1"
    }, onCarPopup, function() {
        $NC.setFocus("#edtCar_Cd", true);
    });
}

function onCarPopup(resultInfo) {

    if ($NC.isNotNull(resultInfo)) {
        $NC.G_VAR.masterData.CAR_CD = resultInfo.CAR_CD;
        $NC.setValue("#edtCar_Cd", resultInfo.CAR_CD);
        $NC.setValue("#edtCar_Nm", resultInfo.CAR_NM);
    } else {
        $NC.G_VAR.masterData.CAR_CD = "";
        $NC.setValue("#edtCar_Cd");
        $NC.setValue("#edtCar_Nm");
        $NC.setFocus("#edtCar_Cd", true);
    }
    if ($NC.G_VAR.masterData.CRUD == $ND.C_DV_CRUD_R) {
        $NC.G_VAR.masterData.CRUD = $ND.C_DV_CRUD_U;
    }
}

function onItemPopup(resultInfo) {

    var rowData = G_GRDDETAIL.data.getItem(G_GRDDETAIL.lastRow);
    if ($NC.isNull(rowData)) {
        return;
    }

    var focusCol;
    if ($NC.isNotNull(resultInfo)) {
        rowData.BRAND_CD = resultInfo.BRAND_CD;
        rowData.BRAND_NM = resultInfo.BRAND_NM;
        rowData.ITEM_CD = resultInfo.ITEM_CD;
        rowData.ITEM_NM = resultInfo.ITEM_NM;
        rowData.ITEM_SPEC = resultInfo.ITEM_SPEC;
        rowData.QTY_IN_BOX = resultInfo.QTY_IN_BOX;
        rowData.BOX_WEIGHT = resultInfo.BOX_WEIGHT;
        rowData.SUPPLY_PRICE = resultInfo.SUPPLY_PRICE;
        rowData.DC_PRICE = 0;
        rowData.APPLY_PRICE = 0;
        if ($NC.G_VAR.G_PARAMETER.P_POLICY_RI190 == "2") { // 공급금액 계산정책
            rowData.APPLY_PRICE = resultInfo.SUPPLY_PRICE;
        }
        rowData.SUPPLY_AMT = 0;
        rowData.VAT_AMT = 0;
        rowData.DC_AMT = 0;
        rowData.TOTAL_AMT = 0;
        rowData.VAT_YN = resultInfo.VAT_YN;
        rowData.VALID_DATE = "";
        rowData.BATCH_NO = "";
        rowData.DRUG_DIV_D = resultInfo.DRUG_DIV_D;
        rowData.MEDICATION_DIV_D = resultInfo.MEDICATION_DIV_D;
        rowData.KEEP_DIV_D = resultInfo.KEEP_DIV_D;
        rowData.DRUG_CD = resultInfo.DRUG_CD;
        rowData = grdDetailOnCalc(rowData);

        focusCol = G_GRDDETAIL.view.getColumnIndex("ENTRY_QTY");
    } else {
        rowData.BRAND_CD = "";
        rowData.BRAND_NM = "";
        rowData.ITEM_CD = "";
        rowData.ITEM_NM = "";
        rowData.ITEM_SPEC = "";
        rowData.QTY_IN_BOX = 1;
        rowData.ENTRY_QTY = 0;
        rowData.ENTRY_BOX = 0;
        rowData.ENTRY_EA = 0;
        rowData.CONFIRM_QTY = 0;
        rowData.PUTAWAY_QTY = 0;
        rowData.VALID_DATE = "";
        rowData.BATCH_NO = "";
        rowData.BOX_WEIGHT = 0;
        rowData.ENTRY_WEIGHT = 0;
        rowData.SUPPLY_PRICE = 0;
        rowData.DC_PRICE = 0;
        rowData.APPLY_PRICE = 0;
        rowData.SUPPLY_AMT = 0;
        rowData.VAT_AMT = 0;
        rowData.DC_AMT = 0;
        rowData.TOTAL_AMT = 0;
        rowData.VAT_YN = $ND.C_NO;
        rowData.DRUG_DIV_D = "";
        rowData.MEDICATION_DIV_D = "";
        rowData.KEEP_DIV_D = "";
        rowData.DRUG_CD = "";

        focusCol = G_GRDDETAIL.view.getColumnIndex("ITEM_CD");
    }

    // 마지막 선택 Row 수정 데이터 반영 및 상태 변경
    $NC.setGridApplyChange(G_GRDDETAIL, rowData);

    $NC.setFocusGrid(G_GRDDETAIL, G_GRDDETAIL.lastRow, focusCol, true, true);
}

function onGetPalletIdCnt(ajaxData) {

    var PALLET_ID_CNT = 1;
    var resultData = $NC.toObject(ajaxData);
    var oMsg = $NC.getOutMessage(resultData);
    if (oMsg == $ND.C_OK) {
        PALLET_ID_CNT = resultData.O_PALLET_ID_CNT;
    }

    $NC.setValue("#edtPallet_Id_Cnt", PALLET_ID_CNT);
    $NC.G_VAR.masterData.PALLET_ID_CNT = PALLET_ID_CNT;
}

function setPalletIdCnt() {

    if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD != $ND.C_PROCESS_ORDER) {
        return;
    }

    // 값 오류 체크는 안함
    var CENTER_CD = $NC.G_VAR.G_PARAMETER.P_MASTER_DS.CENTER_CD;
    var BU_CD = $NC.G_VAR.G_PARAMETER.P_MASTER_DS.BU_CD;
    var ORDER_DATE = $NC.G_VAR.G_PARAMETER.P_MASTER_DS.ORDER_DATE;
    var ORDER_NO = $NC.G_VAR.G_PARAMETER.P_MASTER_DS.ORDER_NO;
    var IN_GRP = $NC.G_VAR.G_PARAMETER.P_MASTER_DS.INOUT_SUB_CD;

    // 데이터 조회
    $NC.serviceCall("/RIB02010E0/getData.do", {
        P_QUERY_ID: "RI_POLICY_PLTID_GETCNT",
        P_QUERY_PARAMS: {
            P_CENTER_CD: CENTER_CD,
            P_BU_CD: BU_CD,
            P_ORDER_DATE: ORDER_DATE,
            P_ORDER_NO: ORDER_NO,
            P_IN_GRP: IN_GRP
        }
    }, onGetPalletIdCnt);
}

function onSave(ajaxData) {

    var resultData = $NC.toObject(ajaxData);
    var oMsg = $NC.getOutMessage(resultData);
    if (oMsg != $ND.C_OK) {
        alert(oMsg);
        return;
    }

    onClose();
}

/**
 * 프로그램 사용 권한 설정
 */
function setUserProgramPermission() {

    // 프로그램 사용 권한
    var permission = $NC.G_VAR.G_PARAMETER.P_PERMISSION;

    if ($NC.G_VAR.G_PARAMETER.P_PROCESS_CD == $ND.C_PROCESS_ORDER || $NC.G_VAR.ORDER_YN == $ND.C_YES) {
        // 예정으로 등록, 예정으로 등록한 데이터 수정일 경우
        // 예정으로 등록 시 추가/삭제 허용 기준
        // NN - 추가/삭제 불가능
        // NY - 삭제만 가능
        // YN - 추가만 가능
        // YY - 추가/삭제 가능
        var POLICY_RI221 = $NC.G_VAR.G_PARAMETER.P_POLICY_RI221.match(/N|Y/gi);
        if ($NC.isNull(POLICY_RI221)) {
            POLICY_RI221 = [
                $ND.C_NO,
                $ND.C_NO
            ];
        }
        // 예정으로 등록시 추가/삭제 허용 기준 정책 및 프로그램 사용 권한 체크
        $NC.setEnable("#btnEntryNew", POLICY_RI221[0] == $ND.C_YES && permission.canSave);
        $NC.setEnable("#btnEntryDelete", POLICY_RI221[1] == $ND.C_YES && permission.canDelete);
        $NC.setEnable("#btnEntrySave", permission.canSave);
    } else {
        // 신규 등록, 신규로 등록한 데이터 수정일 경우
        $NC.setEnable("#btnEntryNew", permission.canSave);
        $NC.setEnable("#btnEntryDelete", permission.canDelete);
        $NC.setEnable("#btnEntrySave", permission.canSave);
    }
}

/**
 * 상품상태 일괄변경
 */

function btnStateSwapOnClick() {

    var ITEM_STATE = $NC.getValue("#cboItem_State");
    var ITEM_STATE_F = $NC.getValueCombo("#cboItem_State", "F");

    var rowData;
    G_GRDDETAIL.data.beginUpdate();
    try {
        for (var rIndex = 0, rCount = G_GRDDETAIL.data.getLength(); rIndex < rCount; rIndex++) {
            rowData = G_GRDDETAIL.data.getItem(rIndex);

            rowData.ITEM_STATE_F = ITEM_STATE_F;
            rowData.ITEM_STATE = ITEM_STATE;
            if (rowData.CRUD == $ND.C_DV_CRUD_R) {
                rowData.CRUD = $ND.C_DV_CRUD_U;
            }

            G_GRDDETAIL.data.updateItem(rowData.id, rowData);
        }
    } finally {
        G_GRDDETAIL.data.endUpdate();
    }
}
