<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // 시스템관리 관련 Procedure
  // Author : ASETEC
  // Date : 2022-11-30
  // Description
  // 시스템관리 관련 Procedure Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PROCEDURE_MAPPER('CS') AS SQLMAP_TEXT
    FROM DUAL;
  //====================================================================================================================
  // ※ Procedure 호출 관련 Mapper의 Namespace는 "SP" 로 처리
  //====================================================================================================================
  -->
<mapper namespace="SP">
  <!--
  //====================================================================================================================
  // PROCEDURE SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="CS_VIRTUALMAP" type="hashmap"></resultMap>

  <!-- [S] - CS_BUPOLICY_COPY -->
  <select id="CS_BUPOLICY_COPY" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_BUPOLICY_COPY
      (#{P_FROM_BU_CD              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CENTER_COPY_YN          ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_BUPOLICY_COPY -->


  <!-- [S] - CS_CENTERBUPOLICY_COPY -->
  <select id="CS_CENTERBUPOLICY_COPY" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_CENTERBUPOLICY_COPY
      (#{P_FROM_CENTER_CD          ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_FROM_BU_CD              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_CENTERBUPOLICY_COPY -->


  <!-- [S] - CS_MENUGROUP_DEFAULT_UPDATE -->
  <select id="CS_MENUGROUP_DEFAULT_UPDATE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_MENUGROUP_DEFAULT_UPDATE
      (#{P_MENU_GRP                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_MENUGROUP_DEFAULT_UPDATE -->


  <!-- [S] - CS_MENU_COPY -->
  <select id="CS_MENU_COPY" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_MENU_COPY
      (#{P_MENU_GRP                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_TO_MENU_GRP             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_MENU_COPY -->


  <!-- [S] - CS_MENU_LEVEL_EXCHANGE -->
  <select id="CS_MENU_LEVEL_EXCHANGE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_MENU_LEVEL_EXCHANGE
      (#{P_MENU_GRP                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_MENU_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_TO_MENU_ID              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_MENU_LEVEL_EXCHANGE -->


  <!-- [S] - CS_MENU_SET_MENU_LEVEL -->
  <select id="CS_MENU_SET_MENU_LEVEL" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_MENU_SET_MENU_LEVEL
      (#{P_MENU_GRP                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_MENU_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_APPLICATION_DIV         ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_MENU_SET_MENU_LEVEL -->


  <!-- [S] - CS_POLICY_RECOMMEND_UPDATE -->
  <select id="CS_POLICY_RECOMMEND_UPDATE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_POLICY_RECOMMEND_UPDATE
      (#{P_POLICY_DIV              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_VAL              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_POLICY_RECOMMEND_UPDATE -->


  <!-- [S] - CS_PROGRAM_DELETE -->
  <select id="CS_PROGRAM_DELETE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_PROGRAM_DELETE
      (#{P_PROGRAM_ID              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_PROGRAM_DELETE -->


  <!-- [S] - CS_REPORT_DELETE -->
  <select id="CS_REPORT_DELETE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_REPORT_DELETE
      (#{P_REPORT_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_REPORT_DELETE -->


  <!-- [S] - CS_USERSYSINFO_UPDATE -->
  <select id="CS_USERSYSINFO_UPDATE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_USERSYSINFO_UPDATE
      (#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CLIENT_IP               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_USERSYSINFO_UPDATE -->


  <!-- [S] - CS_USER_COPY -->
  <select id="CS_USER_COPY" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_USER_COPY
      (#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_NM                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_PWD                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_FROM_USER_ID            ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EMPLOYEE_ID             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_HP                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_EMAIL              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ENTRY_COMMENT           ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_REG_USER_ID             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_USER_COPY -->


  <!-- [S] - CS_USER_DELETE -->
  <select id="CS_USER_DELETE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_USER_DELETE
      (#{P_DELETE_USER_ID          ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_USER_DELETE -->


  <!-- [S] - CS_USER_PWD_CHANGE_RULES_CHECK -->
  <select id="CS_USER_PWD_CHANGE_RULES_CHECK" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_USER_PWD_CHANGE_RULES_CHECK
      (#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ORG_USER_PWD            ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_NEW_USER_PWD            ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ENC_USER_PWD            ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_USER_PWD_CHANGE_RULES_CHECK -->


  <!-- [S] - CS_USER_PWD_UPDATE -->
  <select id="CS_USER_PWD_UPDATE" statementType="CALLABLE" parameterType="hashmap">
    {  call CS_USER_PWD_UPDATE
      (#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ENC_USER_PWD            ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CS_USER_PWD_UPDATE -->


</mapper>