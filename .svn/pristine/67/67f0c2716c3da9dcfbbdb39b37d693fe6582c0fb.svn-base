<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // EDCOMMON 관련 Package
  // Author : ASETEC
  // Date : 2020-01-03
  // Description
  // EDCOMMON 관련 Package Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_package_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PACKAGE_MAPPER('EDCOMMON' ,NULL ,NULL) AS SQLMAP_TEXT
    FROM DUAL;
  //====================================================================================================================
  // ※ Package 호출 관련 Mapper의 Namespace는 "Package명" 으로 처리
  //====================================================================================================================
  -->
<mapper namespace="EDCOMMON">
  <!--
  //====================================================================================================================
  // SELECT SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="EDCOMMON_VIRTUALMAP" type="hashmap"></resultMap>

  <!-- [S] - EDCOMMON.POP_DEFINE_NO -->
  <select id="POP_DEFINE_NO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.POP_DEFINE_NO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDCOMMON.POP_DEFINE_NO -->


  <!-- [S] - EDCOMMON.POP_NON_SEND_INFO -->
  <select id="POP_NON_SEND_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.POP_NON_SEND_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_SEND_DATE1              ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_SEND_DATE2              ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      })
    }
  </select>
  <!-- [E] - EDCOMMON.POP_NON_SEND_INFO -->


  <!-- [S] - EDCOMMON.RS_DEFINE_INFO -->
  <select id="RS_DEFINE_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_DEFINE_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDCOMMON.RS_DEFINE_INFO -->


  <!-- [S] - EDCOMMON.RS_ERROR_INFO -->
  <select id="RS_ERROR_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_ERROR_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DATE                ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      })
    }
  </select>
  <!-- [E] - EDCOMMON.RS_ERROR_INFO -->


  <!-- [S] - EDCOMMON.RS_IDENTIFIER_INFO -->
  <select id="RS_IDENTIFIER_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_IDENTIFIER_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDCOMMON.RS_IDENTIFIER_INFO -->


  <!-- [S] - EDCOMMON.RS_RECV_RESULT_INFO -->
  <select id="RS_RECV_RESULT_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_RECV_RESULT_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_RECV_DATE               ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_RECV_NO                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDCOMMON.RS_RECV_RESULT_INFO -->


  <!-- [S] - EDCOMMON.RS_REMOTE_INFO -->
  <select id="RS_REMOTE_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_REMOTE_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDCOMMON.RS_REMOTE_INFO -->


  <!-- [S] - EDCOMMON.RS_SAP_SERVER_DEFINE_INFO -->
  <select id="RS_SAP_SERVER_DEFINE_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_SAP_SERVER_DEFINE_INFO()
    }
  </select>
  <!-- [E] - EDCOMMON.RS_SAP_SERVER_DEFINE_INFO -->


  <!-- [S] - EDCOMMON.RS_SCHEDULE_DEFINE_INFO -->
  <select id="RS_SCHEDULE_DEFINE_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_SCHEDULE_DEFINE_INFO()
    }
  </select>
  <!-- [E] - EDCOMMON.RS_SCHEDULE_DEFINE_INFO -->


  <!-- [S] - EDCOMMON.RS_SEND_DETAIL_INFO -->
  <select id="RS_SEND_DETAIL_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_SEND_DETAIL_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_SEND_DATE               ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_SEND_NO                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_VIEW_DIV                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDCOMMON.RS_SEND_DETAIL_INFO -->


  <!-- [S] - EDCOMMON.RS_SEND_INFO -->
  <select id="RS_SEND_INFO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=EDCOMMON_VIRTUALMAP} = call EDCOMMON.RS_SEND_INFO
      (#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EDI_DIV                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEFINE_NO               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_SEND_DATE               ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_SEND_DIV                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - EDCOMMON.RS_SEND_INFO -->


  <!--
  //====================================================================================================================
  // PROCEDURE SQLMAP
  //====================================================================================================================
  -->
  <!--
  //====================================================================================================================
  // INSERT/UPDATE/DELETE SQLMAP
  //====================================================================================================================
  -->
  <!-- [S] - INSERT_EMIFRESULT [EDI실시간송신리턴결과내역] -->
  <insert id="INSERT_EMIFRESULT" parameterType="hashmap">
    INSERT INTO EMIFRESULT
               (
                BU_CD
               ,EDI_DIV
               ,DEFINE_NO
               ,EDI_DATE
               ,EDI_NO
               ,IF_RESULT_DIV
               ,IF_RESULT_SEQ
               <if test="P_IF_RESULT_VAL           != null and P_IF_RESULT_VAL           != ''">,IF_RESULT_VAL               </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               )
         VALUES
               (
                #{P_BU_CD}
               ,#{P_EDI_DIV}
               ,#{P_DEFINE_NO}
               ,#{P_EDI_DATE}
               ,#{P_EDI_NO}
               ,#{P_IF_RESULT_DIV}
               ,#{P_IF_RESULT_SEQ}
               <if test="P_IF_RESULT_VAL           != null and P_IF_RESULT_VAL           != ''">,#{P_IF_RESULT_VAL}          </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               )
  </insert>
  <!-- [E] - INSERT_EMIFRESULT [EDI실시간송신리턴결과내역] -->


</mapper>