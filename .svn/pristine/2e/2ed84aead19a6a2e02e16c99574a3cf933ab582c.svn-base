<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // 출고작업비등록 화면
  // Author : ASETEC
  // Date : 2023-03-09
  // Description
  // 출고수기정산 화면 CRUD Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PROGRAM_MAPPER('LOC05090E0' ,'LI020NM;LI090NM' ,NULL ,'N' ,NULL ,NULL) AS SQLMAP_TEXT
    FROM DUAL;
  -->
<mapper namespace="LOC05090E0">
  <!--
  //====================================================================================================================
  // SELECT SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="LOC05090E0_VIRTUALMAP" type="hashmap"></resultMap>

  <!-- [S] - LOC05090E0.RS_MASTER -->
  <select id="RS_MASTER" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LOC05090E0_VIRTUALMAP} = call LOC05090E0.RS_MASTER
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE1          ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_DATE2          ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_INOUT_CD                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DELIVERY_CD             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EXTRA_WORK_DIV1         ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_EXTRA_WORK_DIV2         ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BRAND_CD                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_NM                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LOC05090E0.RS_MASTER -->


  <!-- [S] - LOC05090E0.RS_DETAIL -->
  <select id="RS_DETAIL" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LOC05090E0_VIRTUALMAP} = call LOC05090E0.RS_DETAIL
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_NO             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LOC05090E0.RS_DETAIL -->


  <!-- [S] - LOC05090E0.RS_SUB1 -->
  <select id="RS_SUB1" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LOC05090E0_VIRTUALMAP} = call LOC05090E0.RS_SUB1
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_NO             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LOC05090E0.RS_SUB1 -->


  <!--
  //====================================================================================================================
  // INSERT/UPDATE/DELETE SQLMAP
  //====================================================================================================================
  -->
  <!-- [S] - UPDATE_LO020NM [출고마스터] -->
  <update id="UPDATE_LO020NM" parameterType="hashmap">
    UPDATE LO020NM
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_INOUT_CD                != null">,INOUT_CD                 = #{P_INOUT_CD}               </if>
          <if test="P_OUTBOUND_STATE          != null">,OUTBOUND_STATE           = #{P_OUTBOUND_STATE}         </if>
          <if test="P_CUST_CD                 != null">,CUST_CD                  = #{P_CUST_CD}                </if>
          <if test="P_DELIVERY_CD             != null">,DELIVERY_CD              = #{P_DELIVERY_CD}            </if>
          <if test="P_RDELIVERY_CD            != null">,RDELIVERY_CD             = #{P_RDELIVERY_CD}           </if>
          <if test="P_DELIVERY_BATCH          != null">,DELIVERY_BATCH           = #{P_DELIVERY_BATCH}         </if>
          <if test="P_ORDER_DIV               != null">,ORDER_DIV                = #{P_ORDER_DIV}              </if>
          <if test="P_ERP_BATCH               != null">,ERP_BATCH                = #{P_ERP_BATCH}              </if>
          <if test="P_DISTRIBUTE_DIV          != null">,DISTRIBUTE_DIV           = #{P_DISTRIBUTE_DIV}         </if>
          <if test="P_CAR_DIV                 != null">,CAR_DIV                  = #{P_CAR_DIV}                </if>
          <if test="P_OUTBOUND_BATCH          != null">,OUTBOUND_BATCH           = #{P_OUTBOUND_BATCH}         </if>
          <if test="P_OUTBOUND_BATCH_NM       != null">,OUTBOUND_BATCH_NM        = #{P_OUTBOUND_BATCH_NM}      </if>
          <if test="P_PICK_DIV                != null">,PICK_DIV                 = #{P_PICK_DIV}               </if>
          <if test="P_DIRECT_YN               != null">,DIRECT_YN                = #{P_DIRECT_YN}              </if>
          <if test="P_PLANED_DATETIME         != null">
          ,PLANED_DATETIME          = DECODE(#{P_PLANED_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_PLANED_DATETIME}))
          </if>
          <if test="P_SHIP_RCP_NO             != null">,SHIP_RCP_NO              = #{P_SHIP_RCP_NO}            </if>
          <if test="P_EQUIP_STATE             != null">,EQUIP_STATE              = #{P_EQUIP_STATE}            </if>
          <if test="P_EQUIP_DIV               != null">,EQUIP_DIV                = #{P_EQUIP_DIV}              </if>
          <if test="P_CHUTE_NO                != null">,CHUTE_NO                 = #{P_CHUTE_NO}               </if>
          <if test="P_SHELF_NO                != null">,SHELF_NO                 = #{P_SHELF_NO}               </if>
          <if test="P_OUTBOUND_BATCH_CHKDIGIT != null">,OUTBOUND_BATCH_CHKDIGIT  = #{P_OUTBOUND_BATCH_CHKDIGIT}</if>
          <if test="P_SHELF_NO_CHKDIGIT       != null">,SHELF_NO_CHKDIGIT        = #{P_SHELF_NO_CHKDIGIT}      </if>
          <if test="P_BILL_PLT_QTY            != null">,BILL_PLT_QTY             = #{P_BILL_PLT_QTY}           </if>
          <if test="P_BILL_BOX_QTY            != null">,BILL_BOX_QTY             = #{P_BILL_BOX_QTY}           </if>
          <if test="P_BILL_EA_QTY             != null">,BILL_EA_QTY              = #{P_BILL_EA_QTY}            </if>
          <if test="P_BILL_USER_ID            != null">,BILL_USER_ID             = #{P_BILL_USER_ID}           </if>
          <if test="P_BILL_DATETIME           != null">
          ,BILL_DATETIME            = DECODE(#{P_BILL_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_BILL_DATETIME}))
          </if>
          <if test="P_TRANS_ORDER_DATE        != null">,TRANS_ORDER_DATE         = #{P_TRANS_ORDER_DATE}       </if>
          <if test="P_TRANS_ORDER_NO          != null">,TRANS_ORDER_NO           = #{P_TRANS_ORDER_NO}         </if>
          <if test="P_MISSED_DATE             != null">,MISSED_DATE              = #{P_MISSED_DATE}            </if>
          <if test="P_MISSED_NO               != null">,MISSED_NO                = #{P_MISSED_NO}              </if>
          <if test="P_INOUT_DATE              != null">,INOUT_DATE               = #{P_INOUT_DATE}             </if>
          <if test="P_DELIVERY_DATE           != null">,DELIVERY_DATE            = #{P_DELIVERY_DATE}          </if>
          <if test="P_DELIVERY_MSG            != null">,DELIVERY_MSG             = #{P_DELIVERY_MSG}           </if>
          <if test="P_DATA_DIV                != null">,DATA_DIV                 = #{P_DATA_DIV}               </if>
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_ENTRY_USER_ID           != null">,ENTRY_USER_ID            = #{P_ENTRY_USER_ID}          </if>
          <if test="P_ENTRY_DATETIME          != null">
          ,ENTRY_DATETIME           = DECODE(#{P_ENTRY_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_ENTRY_DATETIME}))
          </if>
          <if test="P_DIRECTIONS_USER_ID      != null">,DIRECTIONS_USER_ID       = #{P_DIRECTIONS_USER_ID}     </if>
          <if test="P_DIRECTIONS_DATETIME     != null">
          ,DIRECTIONS_DATETIME      = DECODE(#{P_DIRECTIONS_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_DIRECTIONS_DATETIME}))
          </if>
          <if test="P_CONFIRM_USER_ID         != null">,CONFIRM_USER_ID          = #{P_CONFIRM_USER_ID}        </if>
          <if test="P_CONFIRM_DATETIME        != null">
          ,CONFIRM_DATETIME         = DECODE(#{P_CONFIRM_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_CONFIRM_DATETIME}))
          </if>
          <if test="P_DELIVERY_USER_ID        != null">,DELIVERY_USER_ID         = #{P_DELIVERY_USER_ID}       </if>
          <if test="P_DELIVERY_DATETIME       != null">
          ,DELIVERY_DATETIME        = DECODE(#{P_DELIVERY_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_DELIVERY_DATETIME}))
          </if>
          <if test="P_RETRIEVE_YN             != null">,RETRIEVE_YN              = #{P_RETRIEVE_YN}            </if>
          <if test="P_RETRIEVE_USER_ID        != null">,RETRIEVE_USER_ID         = #{P_RETRIEVE_USER_ID}       </if>
          <if test="P_RETRIEVE_DATETIME       != null">
          ,RETRIEVE_DATETIME        = DECODE(#{P_RETRIEVE_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_RETRIEVE_DATETIME}))
          </if>
          <if test="P_CANCEL_YN               != null">,CANCEL_YN                = #{P_CANCEL_YN}              </if>
          <if test="P_CANCEL_USER_ID          != null">,CANCEL_USER_ID           = #{P_CANCEL_USER_ID}         </if>
          <if test="P_CANCEL_DATETIME         != null">
          ,CANCEL_DATETIME          = DECODE(#{P_CANCEL_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_CANCEL_DATETIME}))
          </if>
          <if test="P_DISTRIBUTE_DONE_YN      != null">,DISTRIBUTE_DONE_YN       = #{P_DISTRIBUTE_DONE_YN}     </if>
          <if test="P_DISTRIBUTE_DONE_USER_ID != null">,DISTRIBUTE_DONE_USER_ID  = #{P_DISTRIBUTE_DONE_USER_ID}</if>
          <if test="P_DISTRIBUTE_DONE_DATETIME != null">
          ,DISTRIBUTE_DONE_DATETIME = DECODE(#{P_DISTRIBUTE_DONE_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_DISTRIBUTE_DONE_DATETIME}))
          </if>
          <if test="P_PRE_OUTBOUND_BATCH      != null">,PRE_OUTBOUND_BATCH       = #{P_PRE_OUTBOUND_BATCH}     </if>
          <if test="P_PRE_SHELF_NO            != null">,PRE_SHELF_NO             = #{P_PRE_SHELF_NO}           </if>
     WHERE CENTER_CD                = #{P_CENTER_CD}
       AND BU_CD                    = #{P_BU_CD}
       AND OUTBOUND_DATE            = #{P_OUTBOUND_DATE}
       AND OUTBOUND_NO              = #{P_OUTBOUND_NO}
  </update>
  <!-- [E] - UPDATE_LO020NM [출고마스터] -->


  <!-- [S] - INSERT_LO090NM [출고추가작업비] -->
  <insert id="INSERT_LO090NM" parameterType="hashmap">
    INSERT INTO LO090NM
               (
                CENTER_CD
               ,BU_CD
               ,OUTBOUND_DATE
               ,OUTBOUND_NO
               ,EXTRA_WORK_DIV
               <if test="P_EXTRA_WORK_QTY          != null and P_EXTRA_WORK_QTY          != ''">,EXTRA_WORK_QTY              </if>
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,REMARK1                     </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               ,LAST_USER_ID
               ,LAST_DATETIME
               )
         VALUES
               (
                #{P_CENTER_CD}
               ,#{P_BU_CD}
               ,#{P_OUTBOUND_DATE}
               ,#{P_OUTBOUND_NO}
               ,#{P_EXTRA_WORK_DIV}
               <if test="P_EXTRA_WORK_QTY          != null and P_EXTRA_WORK_QTY          != ''">,#{P_EXTRA_WORK_QTY}         </if>
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,#{P_REMARK1}                </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               ,#{P_USER_ID}
               ,SYSDATE
               )
  </insert>
  <!-- [E] - INSERT_LO090NM [출고추가작업비] -->


  <!-- [S] - UPDATE_LO090NM [출고추가작업비] -->
  <update id="UPDATE_LO090NM" parameterType="hashmap">
    UPDATE LO090NM
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_EXTRA_WORK_QTY          != null">,EXTRA_WORK_QTY           = #{P_EXTRA_WORK_QTY}         </if>
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_REG_USER_ID             != null">,REG_USER_ID              = #{P_REG_USER_ID}            </if>
          <if test="P_REG_DATETIME            != null">
          ,REG_DATETIME             = DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
          </if>
     WHERE CENTER_CD                = #{P_CENTER_CD}
       AND BU_CD                    = #{P_BU_CD}
       AND OUTBOUND_DATE            = #{P_OUTBOUND_DATE}
       AND OUTBOUND_NO              = #{P_OUTBOUND_NO}
       AND EXTRA_WORK_DIV           = #{P_EXTRA_WORK_DIV}
  </update>
  <!-- [E] - UPDATE_LO090NM [출고추가작업비] -->



</mapper>