<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // WCSVOS 관련 Package
  // Author : ASETEC
  // Date : 2019-01-24
  // Description
  // WCSVOS 관련 Package Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_package_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PACKAGE_MAPPER('WCSVOS' ,NULL ,NULL) AS SQLMAP_TEXT
    FROM DUAL;
  //====================================================================================================================
  // ※ Package 호출 관련 Mapper의 Namespace는 "Package명" 으로 처리
  //====================================================================================================================
  -->
<mapper namespace="WCSVOS">
  <!--
  //====================================================================================================================
  // SELECT SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="WCSVOS_VIRTUALMAP" type="hashmap"></resultMap>

  <!--
  //====================================================================================================================
  // PROCEDURE SQLMAP
  //====================================================================================================================
  -->
  <!-- [S] - WCSVOS.CHECK_WORKING -->
  <select id="CHECK_WORKING" statementType="CALLABLE" parameterType="hashmap">
    {  call WCSVOS.CHECK_WORKING
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_NO             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - WCSVOS.CHECK_WORKING -->


  <!-- [S] - WCSVOS.GET_CHKDIGIT_CELL -->
  <select id="GET_CHKDIGIT_CELL" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT                  ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    } = call WCSVOS.GET_CHKDIGIT_CELL
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - WCSVOS.GET_CHKDIGIT_CELL -->


  <!-- [S] - WCSVOS.GET_CHKDIGIT_OUTBOUND_BATCH -->
  <select id="GET_CHKDIGIT_OUTBOUND_BATCH" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT                  ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    } = call WCSVOS.GET_CHKDIGIT_OUTBOUND_BATCH
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_BATCH          ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - WCSVOS.GET_CHKDIGIT_OUTBOUND_BATCH -->


  <!-- [S] - WCSVOS.GET_CHKDIGIT_SHELF_NO -->
  <select id="GET_CHKDIGIT_SHELF_NO" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT                  ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    } = call WCSVOS.GET_CHKDIGIT_SHELF_NO
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_SHELF_NO                ,mode=IN    ,jdbcType=NUMERIC    ,javaType=BigDecimal})
    }
  </select>
  <!-- [E] - WCSVOS.GET_CHKDIGIT_SHELF_NO -->


  <!-- [S] - WCSVOS.RECV_FW_LO_PICKING -->
  <select id="RECV_FW_LO_PICKING" statementType="CALLABLE" parameterType="hashmap">
    {  call WCSVOS.RECV_FW_LO_PICKING
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_NO             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_LOCATION_CD             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BRAND_CD                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_STATE              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_LOT                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ENTRY_QTY               ,mode=IN    ,jdbcType=NUMERIC    ,javaType=BigDecimal}
      ,#{P_PICK_QTY                ,mode=IN    ,jdbcType=NUMERIC    ,javaType=BigDecimal}
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - WCSVOS.RECV_FW_LO_PICKING -->


  <!-- [S] - WCSVOS.SEND_BW_LO_ORDER -->
  <select id="SEND_BW_LO_ORDER" statementType="CALLABLE" parameterType="hashmap">
    {  call WCSVOS.SEND_BW_LO_ORDER
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_NO             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - WCSVOS.SEND_BW_LO_ORDER -->


  <!-- [S] - WCSVOS.SEND_FW_LO_ORDER -->
  <select id="SEND_FW_LO_ORDER" statementType="CALLABLE" parameterType="hashmap">
    {  call WCSVOS.SEND_FW_LO_ORDER
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_DATE           ,mode=IN    ,jdbcType=TIMESTAMP  ,javaType=Date      }
      ,#{P_OUTBOUND_NO             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_OUTBOUND_BATCH          ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - WCSVOS.SEND_FW_LO_ORDER -->


  <!-- [S] - WCSVOS.SET_CELL_CHKDIGIT -->
  <select id="SET_CELL_CHKDIGIT" statementType="CALLABLE" parameterType="hashmap">
    {  call WCSVOS.SET_CELL_CHKDIGIT
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_PROC_DIV                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_USER_ID                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{O_MSG                     ,mode=OUT   ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - WCSVOS.SET_CELL_CHKDIGIT -->


  <!--
  //====================================================================================================================
  // INSERT/UPDATE/DELETE SQLMAP
  //====================================================================================================================
  -->


</mapper>