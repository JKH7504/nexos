<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // 정산항목관리 화면
  // Author : ASETEC
  // Date : 2023-07-05
  // Description
  // 정산항목관리 화면 CRUD Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PROGRAM_MAPPER('LFC02020E0' ,'LFBILL;LFBILLCENTER;LFBILLBU;LFBILLINOUTCD' ,NULL ,'N' ,NULL ,NULL) AS SQLMAP_TEXT
    FROM DUAL;
  -->
<mapper namespace="LFC02020E0">
  <!--
  //====================================================================================================================
  // SELECT SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="LFC02020E0_VIRTUALMAP" type="hashmap"></resultMap>

  <!-- [S] - LFC02020E0.RS_MASTER -->
  <select id="RS_MASTER" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LFC02020E0_VIRTUALMAP} = call LFC02020E0.RS_MASTER
      (#{P_BILL_GRP                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CUST_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEAL_DIV1               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEAL_DIV2               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEAL_DIV3               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LFC02020E0.RS_MASTER -->


  <!-- [S] - LFC02020E0.RS_DETAIL -->
  <select id="RS_DETAIL" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LFC02020E0_VIRTUALMAP} = call LFC02020E0.RS_DETAIL
      (#{P_BILL_GRP                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LFC02020E0.RS_DETAIL -->


  <!-- [S] - LFC02020E0.RS_SUB1 -->
  <select id="RS_SUB1" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LFC02020E0_VIRTUALMAP} = call LFC02020E0.RS_SUB1
      (#{P_CONTRACT_NO             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CUST_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_VIEW_DIV                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - LFC02020E0.RS_SUB1 -->


  <!-- [S] - LFC02020E0.RS_SUB2 -->
  <select id="RS_SUB2" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LFC02020E0_VIRTUALMAP} = call LFC02020E0.RS_SUB2()
    }
  </select>
  <!-- [E] - LFC02020E0.RS_SUB2 -->


  <!-- [S] - LFC02020E0.RS_SUB3 -->
  <select id="RS_SUB3" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LFC02020E0_VIRTUALMAP} = call LFC02020E0.RS_SUB3()
    }
  </select>
  <!-- [E] - LFC02020E0.RS_SUB3 -->


  <!-- [S] - LFC02020E0.RS_SUB4 -->
  <select id="RS_SUB4" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet  ,resultMap=LFC02020E0_VIRTUALMAP} = call LFC02020E0.RS_SUB4()
    }
  </select>
  <!-- [E] - LFC02020E0.RS_SUB4 -->


  <!--
  //====================================================================================================================
  // INSERT/UPDATE/DELETE SQLMAP
  //====================================================================================================================
  -->
  <!-- [S] - INSERT_LFBILL [정산항목 마스터] -->
  <insert id="INSERT_LFBILL" parameterType="hashmap">
    INSERT INTO LFBILL
               (
                CONTRACT_NO
               ,BILL_DIV
               <if test="P_BILL_NM                 != null and P_BILL_NM                 != ''">,BILL_NM                     </if>
               <if test="P_BILL_CLASS              != null and P_BILL_CLASS              != ''">,BILL_CLASS                  </if>
               <if test="P_BILL_DETAIL             != null and P_BILL_DETAIL             != ''">,BILL_DETAIL                 </if>
               <if test="P_DEAL_DIV                != null and P_DEAL_DIV                != ''">,DEAL_DIV                    </if>
               <if test="P_OPEN_DATE               != null and P_OPEN_DATE               != ''">,OPEN_DATE                   </if>
               <if test="P_CLOSE_DATE              != null and P_CLOSE_DATE              != ''">,CLOSE_DATE                  </if>
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,REMARK1                     </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               ,LAST_USER_ID
               ,LAST_DATETIME
               )
         VALUES
               (
                #{P_CONTRACT_NO}
               ,#{P_BILL_DIV}
               <if test="P_BILL_NM                 != null and P_BILL_NM                 != ''">,#{P_BILL_NM}                </if>
               <if test="P_BILL_CLASS              != null and P_BILL_CLASS              != ''">,#{P_BILL_CLASS}             </if>
               <if test="P_BILL_DETAIL             != null and P_BILL_DETAIL             != ''">,#{P_BILL_DETAIL}            </if>
               <if test="P_DEAL_DIV                != null and P_DEAL_DIV                != ''">,#{P_DEAL_DIV}               </if>
               <if test="P_OPEN_DATE               != null and P_OPEN_DATE               != ''">,#{P_OPEN_DATE}              </if>
               <if test="P_CLOSE_DATE              != null and P_CLOSE_DATE              != ''">,#{P_CLOSE_DATE}             </if>
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,#{P_REMARK1}                </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               ,#{P_USER_ID}
               ,SYSDATE
               )
  </insert>
  <!-- [E] - INSERT_LFBILL [정산항목 마스터] -->


  <!-- [S] - UPDATE_LFBILL [정산항목 마스터] -->
  <update id="UPDATE_LFBILL" parameterType="hashmap">
    UPDATE LFBILL
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_BILL_NM                 != null">,BILL_NM                  = #{P_BILL_NM}                </if>
          <if test="P_BILL_CLASS              != null">,BILL_CLASS               = #{P_BILL_CLASS}             </if>
          <if test="P_BILL_DETAIL             != null">,BILL_DETAIL              = #{P_BILL_DETAIL}            </if>
          <if test="P_DEAL_DIV                != null">,DEAL_DIV                 = #{P_DEAL_DIV}               </if>
          <if test="P_OPEN_DATE               != null">,OPEN_DATE                = #{P_OPEN_DATE}              </if>
          <if test="P_CLOSE_DATE              != null">,CLOSE_DATE               = #{P_CLOSE_DATE}             </if>
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_REG_USER_ID             != null">,REG_USER_ID              = #{P_REG_USER_ID}            </if>
          <if test="P_REG_DATETIME            != null">
          ,REG_DATETIME             = DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
          </if>
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
       AND BILL_DIV                 = #{P_BILL_DIV}
  </update>
  <!-- [E] - UPDATE_LFBILL [정산항목 마스터] -->


  <!-- [S] - DELETE_LFBILL [정산항목 마스터] -->
  <delete id="DELETE_LFBILL" parameterType="hashmap">
    DELETE 
      FROM LFBILL
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
     <!--<if test="P_BILL_DIV                != null and P_BILL_DIV                != ''">-->
       AND BILL_DIV                 = #{P_BILL_DIV}
     <!--</if>-->
  </delete>
  <!-- [E] - DELETE_LFBILL [정산항목 마스터] -->


  <!-- [S] - INSERT_LFBILLCENTER [정산항목 물류센터 마스터] -->
  <insert id="INSERT_LFBILLCENTER" parameterType="hashmap">
    INSERT INTO LFBILLCENTER
               (
                CONTRACT_NO
               ,BILL_DIV
               ,CENTER_CD
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,REMARK1                     </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               ,LAST_USER_ID
               ,LAST_DATETIME
               )
         VALUES
               (
                #{P_CONTRACT_NO}
               ,#{P_BILL_DIV}
               ,#{P_CENTER_CD}
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,#{P_REMARK1}                </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               ,#{P_USER_ID}
               ,SYSDATE
               )
  </insert>
  <!-- [E] - INSERT_LFBILLCENTER [정산항목 물류센터 마스터] -->


  <!-- [S] - UPDATE_LFBILLCENTER [정산항목 물류센터 마스터] -->
  <update id="UPDATE_LFBILLCENTER" parameterType="hashmap">
    UPDATE LFBILLCENTER
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_REG_USER_ID             != null">,REG_USER_ID              = #{P_REG_USER_ID}            </if>
          <if test="P_REG_DATETIME            != null">
          ,REG_DATETIME             = DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
          </if>
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
       AND BILL_DIV                 = #{P_BILL_DIV}
       AND CENTER_CD                = #{P_CENTER_CD}
  </update>
  <!-- [E] - UPDATE_LFBILLCENTER [정산항목 물류센터 마스터] -->


  <!-- [S] - DELETE_LFBILLCENTER [정산항목 물류센터 마스터] -->
  <delete id="DELETE_LFBILLCENTER" parameterType="hashmap">
    DELETE 
      FROM LFBILLCENTER
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
     <!--<if test="P_BILL_DIV                != null and P_BILL_DIV                != ''">-->
       AND BILL_DIV                 = #{P_BILL_DIV}
     <!--</if>-->
     <!--<if test="P_CENTER_CD               != null and P_CENTER_CD               != ''">-->
       AND CENTER_CD                = #{P_CENTER_CD}
     <!--</if>-->
  </delete>
  <!-- [E] - DELETE_LFBILLCENTER [정산항목 물류센터 마스터] -->


  <!-- [S] - INSERT_LFBILLBU [정산항목사업부 마스터] -->
  <insert id="INSERT_LFBILLBU" parameterType="hashmap">
    INSERT INTO LFBILLBU
               (
                CONTRACT_NO
               ,BILL_DIV
               ,BU_CD
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,REMARK1                     </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               ,LAST_USER_ID
               ,LAST_DATETIME
               )
         VALUES
               (
                #{P_CONTRACT_NO}
               ,#{P_BILL_DIV}
               ,#{P_BU_CD}
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,#{P_REMARK1}                </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               ,#{P_USER_ID}
               ,SYSDATE
               )
  </insert>
  <!-- [E] - INSERT_LFBILLBU [정산항목사업부 마스터] -->


  <!-- [S] - UPDATE_LFBILLBU [정산항목사업부 마스터] -->
  <update id="UPDATE_LFBILLBU" parameterType="hashmap">
    UPDATE LFBILLBU
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_REG_USER_ID             != null">,REG_USER_ID              = #{P_REG_USER_ID}            </if>
          <if test="P_REG_DATETIME            != null">
          ,REG_DATETIME             = DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
          </if>
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
       AND BILL_DIV                 = #{P_BILL_DIV}
       AND BU_CD                    = #{P_BU_CD}
  </update>
  <!-- [E] - UPDATE_LFBILLBU [정산항목사업부 마스터] -->


  <!-- [S] - DELETE_LFBILLBU [정산항목사업부 마스터] -->
  <delete id="DELETE_LFBILLBU" parameterType="hashmap">
    DELETE 
      FROM LFBILLBU
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
     <!--<if test="P_BILL_DIV                != null and P_BILL_DIV                != ''">-->
       AND BILL_DIV                 = #{P_BILL_DIV}
     <!--</if>-->
     <!--<if test="P_BU_CD                   != null and P_BU_CD                   != ''">-->
       AND BU_CD                    = #{P_BU_CD}
     <!--</if>-->
  </delete>
  <!-- [E] - DELETE_LFBILLBU [정산항목사업부 마스터] -->


  <!-- [S] - INSERT_LFBILLINOUTCD [정산항목 입출고구분 마스터] -->
  <insert id="INSERT_LFBILLINOUTCD" parameterType="hashmap">
    INSERT INTO LFBILLINOUTCD
               (
                CONTRACT_NO
               ,BILL_DIV
               ,INOUT_CD
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,REMARK1                     </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               ,LAST_USER_ID
               ,LAST_DATETIME
               )
         VALUES
               (
                #{P_CONTRACT_NO}
               ,#{P_BILL_DIV}
               ,#{P_INOUT_CD}
               <if test="P_REMARK1                 != null and P_REMARK1                 != ''">,#{P_REMARK1}                </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               ,#{P_USER_ID}
               ,SYSDATE
               )
  </insert>
  <!-- [E] - INSERT_LFBILLINOUTCD [정산항목 입출고구분 마스터] -->


  <!-- [S] - UPDATE_LFBILLINOUTCD [정산항목 입출고구분 마스터] -->
  <update id="UPDATE_LFBILLINOUTCD" parameterType="hashmap">
    UPDATE LFBILLINOUTCD
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_REMARK1                 != null">,REMARK1                  = #{P_REMARK1}                </if>
          <if test="P_REG_USER_ID             != null">,REG_USER_ID              = #{P_REG_USER_ID}            </if>
          <if test="P_REG_DATETIME            != null">
          ,REG_DATETIME             = DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
          </if>
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
       AND BILL_DIV                 = #{P_BILL_DIV}
       AND INOUT_CD                 = #{P_INOUT_CD}
  </update>
  <!-- [E] - UPDATE_LFBILLINOUTCD [정산항목 입출고구분 마스터] -->


  <!-- [S] - DELETE_LFBILLINOUTCD [정산항목 입출고구분 마스터] -->
  <delete id="DELETE_LFBILLINOUTCD" parameterType="hashmap">
    DELETE 
      FROM LFBILLINOUTCD
     WHERE CONTRACT_NO              = #{P_CONTRACT_NO}
     <!--<if test="P_BILL_DIV                != null and P_BILL_DIV                != ''">-->
       AND BILL_DIV                 = #{P_BILL_DIV}
     <!--</if>-->
     <!--<if test="P_INOUT_CD                != null and P_INOUT_CD                != ''">-->
       AND INOUT_CD                 = #{P_INOUT_CD}
     <!--</if>-->
  </delete>
  <!-- [E] - DELETE_LFBILLINOUTCD [정산항목 입출고구분 마스터] -->


</mapper>