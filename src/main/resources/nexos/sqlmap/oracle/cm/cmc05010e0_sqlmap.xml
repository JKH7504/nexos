<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!--
  //====================================================================================================================
  // 권장로케이션관리 화면
  // Author : ASETEC
  // Date : 2017-09-29
  // Description
  // 권장로케이션관리 화면 CRUD Mapper
  //
  // ※ 작성은 반드시 알파벳 순서로 작성
  // ※ Mapper 파일은 [destination name]_sqlmap.xml 으로 생성
  // ※ Mapper namespace는 destination name 으로 설정
  //====================================================================================================================
  -->
  <!--
  cache         - 해당 네임스페이스을 위한 캐시 설정
  cache-ref     - 다른 네임스페이스의 캐시 설정에 대한 참조
  resultMap     - 데이터베이스 결과데이터를 객체에 로드하는 방법을 정의하는 엘리먼트
  parameterMap  - 비권장됨! 예전에 파라미터를 매핑하기 위해 사용되었으나 현재는 사용하지 않음
  sql           - 다른 구문에서 재사용하기 위한 SQL 조각
  insert        - 매핑된 INSERT 구문.
  update        - 매핑된 UPDATE 구문.
  delete        - 매핑된 DELEETE 구문.
  select        - 매핑된 SELECT 구문.
  //====================================================================================================================
  // ※ neXos Framework는 Vo를 사용하지 않음, HashMap만 사용 함
  //====================================================================================================================
  SELECT WS.GET_PROGRAM_MAPPER('CMC05010E0' ,'CMLOCATIONREC') AS SQLMAP_TEXT
    FROM DUAL;
  -->
<mapper namespace="CMC05010E0">
  <!--
  //====================================================================================================================
  // SELECT SQLMAP
  //====================================================================================================================
  -->
  <!-- myBatis로 처리시 CURSOR를 리턴 받기 위해 resultMap 정의(컬럼 정의는 하지 않음) -->
  <!-- 네이스페이스(namespace) + _VIRTUALMAP 으로 resultMap 정의 -->
  <resultMap id="CMC05010E0_VIRTUALMAP" type="hashmap"></resultMap>

  <!-- [S] - CMC05010E0.RS_MASTER -->
  <select id="RS_MASTER" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_MASTER
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_CUST_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_STATE              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_MASTER -->


  <!-- [S] - CMC05010E0.RS_SUB1 -->
  <select id="RS_SUB1" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB1
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB1 -->


  <!-- [S] - CMC05010E0.RS_SUB2 -->
  <select id="RS_SUB2" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB2
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ZONE_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_VAL1             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_VAL2             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB2 -->


  <!-- [S] - CMC05010E0.RS_SUB3 -->
  <select id="RS_SUB3" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB3
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ZONE_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BANK_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_VAL1             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_VAL2             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB3 -->


  <!-- [S] - CMC05010E0.RS_SUB4 -->
  <select id="RS_SUB4" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB4
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ZONE_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BANK_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BAY_CD                  ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_VAL1             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_POLICY_VAL2             ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB4 -->


  <!-- [S] - CMC05010E0.RS_SUB5 -->
  <select id="RS_SUB5" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB5
      (#{P_CUST_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB5 -->


  <!-- [S] - CMC05010E0.RS_SUB6 -->
  <select id="RS_SUB6" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB6
      (#{P_CUST_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEPART_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB6 -->


  <!-- [S] - CMC05010E0.RS_SUB7 -->
  <select id="RS_SUB7" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB7
      (#{P_CUST_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_DEPART_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_LINE_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB7 -->


  <!-- [S] - CMC05010E0.RS_SUB8 -->
  <select id="RS_SUB8" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB8
      (#{P_CENTER_CD               ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BU_CD                   ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_STATE              ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_BRAND_CD                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_CD                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_ITEM_NM                 ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    }
      ,#{P_KEEP_DIV                ,mode=IN    ,jdbcType=VARCHAR    ,javaType=String    })
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB8 -->


  <!-- [S] - CMC05010E0.RS_SUB9 -->
  <select id="RS_SUB9" statementType="CALLABLE" parameterType="hashmap">
    {  #{O_RESULT_DS               ,mode=OUT   ,jdbcType=CURSOR     ,javaType=ResultSet ,resultMap=CMC05010E0_VIRTUALMAP} = call CMC05010E0.RS_SUB9
    }
  </select>
  <!-- [E] - CMC05010E0.RS_SUB9 -->


  <!--
  //====================================================================================================================
  // INSERT/UPDATE/DELETE SQLMAP
  //====================================================================================================================
  -->
  <!-- [S] - INSERT_CMLOCATIONREC [권장로케이션마스터] -->
  <insert id="INSERT_CMLOCATIONREC" parameterType="hashmap">
    INSERT INTO CMLOCATIONREC
               (
                CENTER_CD
               ,BU_CD
               ,ITEM_STATE
               ,KEEP_DIV
               ,DEPART_CD
               ,LINE_CD
               ,CLASS_CD
               ,BRAND_CD
               ,ITEM_CD
               ,ZONE_CD
               ,BANK_CD
               ,BAY_CD
               ,LEV_CD
               <if test="P_LOCATION_CD             != null and P_LOCATION_CD             != ''">,LOCATION_CD                 </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,REG_USER_ID                 </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">,REG_DATETIME                </if>
               ,LAST_USER_ID
               ,LAST_DATETIME
               )
         VALUES
               (
                #{P_CENTER_CD}
               ,#{P_BU_CD}
               ,#{P_ITEM_STATE}
               ,#{P_KEEP_DIV}
               ,#{P_DEPART_CD}
               ,#{P_LINE_CD}
               ,#{P_CLASS_CD}
               ,#{P_BRAND_CD}
               ,#{P_ITEM_CD}
               ,#{P_ZONE_CD}
               ,#{P_BANK_CD}
               ,#{P_BAY_CD}
               ,#{P_LEV_CD}
               <if test="P_LOCATION_CD             != null and P_LOCATION_CD             != ''">,#{P_LOCATION_CD}            </if>
               <if test="P_REG_USER_ID             != null and P_REG_USER_ID             != ''">,#{P_REG_USER_ID}            </if>
               <if test="P_REG_DATETIME            != null and P_REG_DATETIME            != ''">
               ,DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
               </if>
               ,#{P_USER_ID}
               ,SYSDATE
               )
  </insert>
  <!-- [E] - INSERT_CMLOCATIONREC [권장로케이션마스터] -->


  <!-- [S] - UPDATE_CMLOCATIONREC [권장로케이션마스터] -->
  <update id="UPDATE_CMLOCATIONREC" parameterType="hashmap">
    UPDATE CMLOCATIONREC
       SET LAST_USER_ID             = #{P_USER_ID}
          ,LAST_DATETIME            = SYSDATE
          <if test="P_LOCATION_CD             != null">,LOCATION_CD              = #{P_LOCATION_CD}            </if>
          <if test="P_REG_USER_ID             != null">,REG_USER_ID              = #{P_REG_USER_ID}            </if>
          <if test="P_REG_DATETIME            != null">
          ,REG_DATETIME             = DECODE(#{P_REG_DATETIME} ,'SYSDATE' ,SYSDATE ,WF.C_TO_DATETIME(#{P_REG_DATETIME}))
          </if>
     WHERE CENTER_CD                = #{P_CENTER_CD}
       AND BU_CD                    = #{P_BU_CD}
       AND ITEM_STATE               = #{P_ITEM_STATE}
       AND KEEP_DIV                 = #{P_KEEP_DIV}
       AND DEPART_CD                = #{P_DEPART_CD}
       AND LINE_CD                  = #{P_LINE_CD}
       AND CLASS_CD                 = #{P_CLASS_CD}
       AND BRAND_CD                 = #{P_BRAND_CD}
       AND ITEM_CD                  = #{P_ITEM_CD}
       AND ZONE_CD                  = #{P_ZONE_CD}
       AND BANK_CD                  = #{P_BANK_CD}
       AND BAY_CD                   = #{P_BAY_CD}
       AND LEV_CD                   = #{P_LEV_CD}
  </update>
  <!-- [E] - UPDATE_CMLOCATIONREC [권장로케이션마스터] -->


  <!-- [S] - DELETE_CMLOCATIONREC [권장로케이션마스터] -->
  <delete id="DELETE_CMLOCATIONREC" parameterType="hashmap">
    DELETE 
      FROM CMLOCATIONREC
     WHERE CENTER_CD                = #{P_CENTER_CD}
     <!--<if test="P_BU_CD                   != null and P_BU_CD                   != ''">-->
       AND BU_CD                    = #{P_BU_CD}
     <!--</if>-->
     <!--<if test="P_ITEM_STATE              != null and P_ITEM_STATE              != ''">-->
       AND ITEM_STATE               = #{P_ITEM_STATE}
     <!--</if>-->
     <!--<if test="P_KEEP_DIV                != null and P_KEEP_DIV                != ''">-->
       AND KEEP_DIV                 = #{P_KEEP_DIV}
     <!--</if>-->
     <!--<if test="P_DEPART_CD               != null and P_DEPART_CD               != ''">-->
       AND DEPART_CD                = #{P_DEPART_CD}
     <!--</if>-->
     <!--<if test="P_LINE_CD                 != null and P_LINE_CD                 != ''">-->
       AND LINE_CD                  = #{P_LINE_CD}
     <!--</if>-->
     <!--<if test="P_CLASS_CD                != null and P_CLASS_CD                != ''">-->
       AND CLASS_CD                 = #{P_CLASS_CD}
     <!--</if>-->
     <!--<if test="P_BRAND_CD                != null and P_BRAND_CD                != ''">-->
       AND BRAND_CD                 = #{P_BRAND_CD}
     <!--</if>-->
     <!--<if test="P_ITEM_CD                 != null and P_ITEM_CD                 != ''">-->
       AND ITEM_CD                  = #{P_ITEM_CD}
     <!--</if>-->
     <!--<if test="P_ZONE_CD                 != null and P_ZONE_CD                 != ''">-->
       AND ZONE_CD                  = #{P_ZONE_CD}
     <!--</if>-->
     <!--<if test="P_BANK_CD                 != null and P_BANK_CD                 != ''">-->
       AND BANK_CD                  = #{P_BANK_CD}
     <!--</if>-->
     <!--<if test="P_BAY_CD                  != null and P_BAY_CD                  != ''">-->
       AND BAY_CD                   = #{P_BAY_CD}
     <!--</if>-->
     <!--<if test="P_LEV_CD                  != null and P_LEV_CD                  != ''">-->
       AND LEV_CD                   = #{P_LEV_CD}
     <!--</if>-->
  </delete>
  <!-- [E] - DELETE_CMLOCATIONREC [권장로케이션마스터] -->


</mapper>